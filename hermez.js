/*! For license information please see hermez.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.hermez=e():t.hermez=e()}(global,(function(){return(()=>{var t={9669:(t,e,r)=>{t.exports=r(1609)},7970:(t,e,r)=>{"use strict";var n=r(4867),i=r(6026),o=r(4097),s=r(5327),a=r(8605),u=r(7211),h=r(938).http,l=r(938).https,f=r(8835),c=r(8761),d=r(696),p=r(5061),m=r(481),g=/https:?/;t.exports=function(t){return new Promise((function(e,r){var y=function(t){e(t)},v=function(t){r(t)},w=t.data,b=t.headers;if(b["User-Agent"]||b["user-agent"]||(b["User-Agent"]="axios/"+d.version),w&&!n.isStream(w)){if(Buffer.isBuffer(w));else if(n.isArrayBuffer(w))w=Buffer.from(new Uint8Array(w));else{if(!n.isString(w))return v(p("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",t));w=Buffer.from(w,"utf-8")}b["Content-Length"]=w.length}var A=void 0;t.auth&&(A=(t.auth.username||"")+":"+(t.auth.password||""));var M=o(t.baseURL,t.url),I=f.parse(M),E=I.protocol||"http:";if(!A&&I.auth){var _=I.auth.split(":");A=(_[0]||"")+":"+(_[1]||"")}A&&delete b.Authorization;var S=g.test(E),C=S?t.httpsAgent:t.httpAgent,x={path:s(I.path,t.params,t.paramsSerializer).replace(/^\?/,""),method:t.method.toUpperCase(),headers:b,agent:C,agents:{http:t.httpAgent,https:t.httpsAgent},auth:A};t.socketPath?x.socketPath=t.socketPath:(x.hostname=I.hostname,x.port=I.port);var B,k=t.proxy;if(!k&&!1!==k){var F=E.slice(0,-1)+"_proxy",N=process.env[F]||process.env[F.toUpperCase()];if(N){var T=f.parse(N),R=process.env.no_proxy||process.env.NO_PROXY,P=!0;if(R&&(P=!R.split(",").map((function(t){return t.trim()})).some((function(t){return!!t&&("*"===t||"."===t[0]&&I.hostname.substr(I.hostname.length-t.length)===t||I.hostname===t)}))),P&&(k={host:T.hostname,port:T.port},T.auth)){var O=T.auth.split(":");k.auth={username:O[0],password:O[1]}}}}if(k&&(x.hostname=k.host,x.host=k.host,x.headers.host=I.hostname+(I.port?":"+I.port:""),x.port=k.port,x.path=E+"//"+I.hostname+(I.port?":"+I.port:"")+x.path,k.auth)){var U=Buffer.from(k.auth.username+":"+k.auth.password,"utf8").toString("base64");x.headers["Proxy-Authorization"]="Basic "+U}var D=S&&(!k||g.test(k.protocol));t.transport?B=t.transport:0===t.maxRedirects?B=D?u:a:(t.maxRedirects&&(x.maxRedirects=t.maxRedirects),B=D?l:h),t.maxBodyLength>-1&&(x.maxBodyLength=t.maxBodyLength);var q=B.request(x,(function(e){if(!q.aborted){var r=e,o=e.req||q;if(204!==e.statusCode&&"HEAD"!==o.method&&!1!==t.decompress)switch(e.headers["content-encoding"]){case"gzip":case"compress":case"deflate":r=r.pipe(c.createUnzip()),delete e.headers["content-encoding"]}var s={status:e.statusCode,statusText:e.statusMessage,headers:e.headers,config:t,request:o};if("stream"===t.responseType)s.data=r,i(y,v,s);else{var a=[];r.on("data",(function(e){a.push(e),t.maxContentLength>-1&&Buffer.concat(a).length>t.maxContentLength&&(r.destroy(),v(p("maxContentLength size of "+t.maxContentLength+" exceeded",t,null,o)))})),r.on("error",(function(e){q.aborted||v(m(e,t,null,o))})),r.on("end",(function(){var e=Buffer.concat(a);"arraybuffer"!==t.responseType&&(e=e.toString(t.responseEncoding),t.responseEncoding&&"utf8"!==t.responseEncoding||(e=n.stripBOM(e))),s.data=e,i(y,v,s)}))}}}));q.on("error",(function(e){q.aborted&&"ERR_FR_TOO_MANY_REDIRECTS"!==e.code||v(m(e,t,null,q))})),t.timeout&&q.setTimeout(t.timeout,(function(){q.abort(),v(p("timeout of "+t.timeout+"ms exceeded",t,"ECONNABORTED",q))})),t.cancelToken&&t.cancelToken.promise.then((function(t){q.aborted||(q.abort(),v(t))})),n.isStream(w)?w.on("error",(function(e){v(m(e,t,null,q))})).pipe(q):q.end(w)}))}},5448:(t,e,r)=>{"use strict";var n=r(4867),i=r(6026),o=r(4372),s=r(5327),a=r(4097),u=r(4109),h=r(7985),l=r(5061);t.exports=function(t){return new Promise((function(e,r){var f=t.data,c=t.headers;n.isFormData(f)&&delete c["Content-Type"],(n.isBlob(f)||n.isFile(f))&&f.type&&delete c["Content-Type"];var d=new XMLHttpRequest;if(t.auth){var p=t.auth.username||"",m=unescape(encodeURIComponent(t.auth.password))||"";c.Authorization="Basic "+btoa(p+":"+m)}var g=a(t.baseURL,t.url);if(d.open(t.method.toUpperCase(),s(g,t.params,t.paramsSerializer),!0),d.timeout=t.timeout,d.onreadystatechange=function(){if(d&&4===d.readyState&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in d?u(d.getAllResponseHeaders()):null,o={data:t.responseType&&"text"!==t.responseType?d.response:d.responseText,status:d.status,statusText:d.statusText,headers:n,config:t,request:d};i(e,r,o),d=null}},d.onabort=function(){d&&(r(l("Request aborted",t,"ECONNABORTED",d)),d=null)},d.onerror=function(){r(l("Network Error",t,null,d)),d=null},d.ontimeout=function(){var e="timeout of "+t.timeout+"ms exceeded";t.timeoutErrorMessage&&(e=t.timeoutErrorMessage),r(l(e,t,"ECONNABORTED",d)),d=null},n.isStandardBrowserEnv()){var y=(t.withCredentials||h(g))&&t.xsrfCookieName?o.read(t.xsrfCookieName):void 0;y&&(c[t.xsrfHeaderName]=y)}if("setRequestHeader"in d&&n.forEach(c,(function(t,e){void 0===f&&"content-type"===e.toLowerCase()?delete c[e]:d.setRequestHeader(e,t)})),n.isUndefined(t.withCredentials)||(d.withCredentials=!!t.withCredentials),t.responseType)try{d.responseType=t.responseType}catch(e){if("json"!==t.responseType)throw e}"function"==typeof t.onDownloadProgress&&d.addEventListener("progress",t.onDownloadProgress),"function"==typeof t.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",t.onUploadProgress),t.cancelToken&&t.cancelToken.promise.then((function(t){d&&(d.abort(),r(t),d=null)})),f||(f=null),d.send(f)}))}},1609:(t,e,r)=>{"use strict";var n=r(4867),i=r(1849),o=r(321),s=r(7185);function a(t){var e=new o(t),r=i(o.prototype.request,e);return n.extend(r,o.prototype,e),n.extend(r,e),r}var u=a(r(5655));u.Axios=o,u.create=function(t){return a(s(u.defaults,t))},u.Cancel=r(5263),u.CancelToken=r(4972),u.isCancel=r(6502),u.all=function(t){return Promise.all(t)},u.spread=r(8030),t.exports=u,t.exports.default=u},5263:t=>{"use strict";function e(t){this.message=t}e.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},e.prototype.__CANCEL__=!0,t.exports=e},4972:(t,e,r)=>{"use strict";var n=r(5263);function i(t){if("function"!=typeof t)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(t){e=t}));var r=this;t((function(t){r.reason||(r.reason=new n(t),e(r.reason))}))}i.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},i.source=function(){var t;return{token:new i((function(e){t=e})),cancel:t}},t.exports=i},6502:t=>{"use strict";t.exports=function(t){return!(!t||!t.__CANCEL__)}},321:(t,e,r)=>{"use strict";var n=r(4867),i=r(5327),o=r(782),s=r(3572),a=r(7185);function u(t){this.defaults=t,this.interceptors={request:new o,response:new o}}u.prototype.request=function(t){"string"==typeof t?(t=arguments[1]||{}).url=arguments[0]:t=t||{},(t=a(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var e=[s,void 0],r=Promise.resolve(t);for(this.interceptors.request.forEach((function(t){e.unshift(t.fulfilled,t.rejected)})),this.interceptors.response.forEach((function(t){e.push(t.fulfilled,t.rejected)}));e.length;)r=r.then(e.shift(),e.shift());return r},u.prototype.getUri=function(t){return t=a(this.defaults,t),i(t.url,t.params,t.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],(function(t){u.prototype[t]=function(e,r){return this.request(a(r||{},{method:t,url:e}))}})),n.forEach(["post","put","patch"],(function(t){u.prototype[t]=function(e,r,n){return this.request(a(n||{},{method:t,url:e,data:r}))}})),t.exports=u},782:(t,e,r)=>{"use strict";var n=r(4867);function i(){this.handlers=[]}i.prototype.use=function(t,e){return this.handlers.push({fulfilled:t,rejected:e}),this.handlers.length-1},i.prototype.eject=function(t){this.handlers[t]&&(this.handlers[t]=null)},i.prototype.forEach=function(t){n.forEach(this.handlers,(function(e){null!==e&&t(e)}))},t.exports=i},4097:(t,e,r)=>{"use strict";var n=r(1793),i=r(7303);t.exports=function(t,e){return t&&!n(e)?i(t,e):e}},5061:(t,e,r)=>{"use strict";var n=r(481);t.exports=function(t,e,r,i,o){var s=new Error(t);return n(s,e,r,i,o)}},3572:(t,e,r)=>{"use strict";var n=r(4867),i=r(8527),o=r(6502),s=r(5655);function a(t){t.cancelToken&&t.cancelToken.throwIfRequested()}t.exports=function(t){return a(t),t.headers=t.headers||{},t.data=i(t.data,t.headers,t.transformRequest),t.headers=n.merge(t.headers.common||{},t.headers[t.method]||{},t.headers),n.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete t.headers[e]})),(t.adapter||s.adapter)(t).then((function(e){return a(t),e.data=i(e.data,e.headers,t.transformResponse),e}),(function(e){return o(e)||(a(t),e&&e.response&&(e.response.data=i(e.response.data,e.response.headers,t.transformResponse))),Promise.reject(e)}))}},481:t=>{"use strict";t.exports=function(t,e,r,n,i){return t.config=e,r&&(t.code=r),t.request=n,t.response=i,t.isAxiosError=!0,t.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},t}},7185:(t,e,r)=>{"use strict";var n=r(4867);t.exports=function(t,e){e=e||{};var r={},i=["url","method","data"],o=["headers","auth","proxy","params"],s=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],a=["validateStatus"];function u(t,e){return n.isPlainObject(t)&&n.isPlainObject(e)?n.merge(t,e):n.isPlainObject(e)?n.merge({},e):n.isArray(e)?e.slice():e}function h(i){n.isUndefined(e[i])?n.isUndefined(t[i])||(r[i]=u(void 0,t[i])):r[i]=u(t[i],e[i])}n.forEach(i,(function(t){n.isUndefined(e[t])||(r[t]=u(void 0,e[t]))})),n.forEach(o,h),n.forEach(s,(function(i){n.isUndefined(e[i])?n.isUndefined(t[i])||(r[i]=u(void 0,t[i])):r[i]=u(void 0,e[i])})),n.forEach(a,(function(n){n in e?r[n]=u(t[n],e[n]):n in t&&(r[n]=u(void 0,t[n]))}));var l=i.concat(o).concat(s).concat(a),f=Object.keys(t).concat(Object.keys(e)).filter((function(t){return-1===l.indexOf(t)}));return n.forEach(f,h),r}},6026:(t,e,r)=>{"use strict";var n=r(5061);t.exports=function(t,e,r){var i=r.config.validateStatus;r.status&&i&&!i(r.status)?e(n("Request failed with status code "+r.status,r.config,null,r.request,r)):t(r)}},8527:(t,e,r)=>{"use strict";var n=r(4867);t.exports=function(t,e,r){return n.forEach(r,(function(r){t=r(t,e)})),t}},5655:(t,e,r)=>{"use strict";var n=r(4867),i=r(6016),o={"Content-Type":"application/x-www-form-urlencoded"};function s(t,e){!n.isUndefined(t)&&n.isUndefined(t["Content-Type"])&&(t["Content-Type"]=e)}var a,u={adapter:("undefined"!=typeof XMLHttpRequest?a=r(5448):"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)&&(a=r(7970)),a),transformRequest:[function(t,e){return i(e,"Accept"),i(e,"Content-Type"),n.isFormData(t)||n.isArrayBuffer(t)||n.isBuffer(t)||n.isStream(t)||n.isFile(t)||n.isBlob(t)?t:n.isArrayBufferView(t)?t.buffer:n.isURLSearchParams(t)?(s(e,"application/x-www-form-urlencoded;charset=utf-8"),t.toString()):n.isObject(t)?(s(e,"application/json;charset=utf-8"),JSON.stringify(t)):t}],transformResponse:[function(t){if("string"==typeof t)try{t=JSON.parse(t)}catch(t){}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};n.forEach(["delete","get","head"],(function(t){u.headers[t]={}})),n.forEach(["post","put","patch"],(function(t){u.headers[t]=n.merge(o)})),t.exports=u},1849:t=>{"use strict";t.exports=function(t,e){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return t.apply(e,r)}}},5327:(t,e,r)=>{"use strict";var n=r(4867);function i(t){return encodeURIComponent(t).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}t.exports=function(t,e,r){if(!e)return t;var o;if(r)o=r(e);else if(n.isURLSearchParams(e))o=e.toString();else{var s=[];n.forEach(e,(function(t,e){null!=t&&(n.isArray(t)?e+="[]":t=[t],n.forEach(t,(function(t){n.isDate(t)?t=t.toISOString():n.isObject(t)&&(t=JSON.stringify(t)),s.push(i(e)+"="+i(t))})))})),o=s.join("&")}if(o){var a=t.indexOf("#");-1!==a&&(t=t.slice(0,a)),t+=(-1===t.indexOf("?")?"?":"&")+o}return t}},7303:t=>{"use strict";t.exports=function(t,e){return e?t.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):t}},4372:(t,e,r)=>{"use strict";var n=r(4867);t.exports=n.isStandardBrowserEnv()?{write:function(t,e,r,i,o,s){var a=[];a.push(t+"="+encodeURIComponent(e)),n.isNumber(r)&&a.push("expires="+new Date(r).toGMTString()),n.isString(i)&&a.push("path="+i),n.isString(o)&&a.push("domain="+o),!0===s&&a.push("secure"),document.cookie=a.join("; ")},read:function(t){var e=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:t=>{"use strict";t.exports=function(t){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)}},7985:(t,e,r)=>{"use strict";var n=r(4867);t.exports=n.isStandardBrowserEnv()?function(){var t,e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");function i(t){var n=t;return e&&(r.setAttribute("href",n),n=r.href),r.setAttribute("href",n),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:"/"===r.pathname.charAt(0)?r.pathname:"/"+r.pathname}}return t=i(window.location.href),function(e){var r=n.isString(e)?i(e):e;return r.protocol===t.protocol&&r.host===t.host}}():function(){return!0}},6016:(t,e,r)=>{"use strict";var n=r(4867);t.exports=function(t,e){n.forEach(t,(function(r,n){n!==e&&n.toUpperCase()===e.toUpperCase()&&(t[e]=r,delete t[n])}))}},4109:(t,e,r)=>{"use strict";var n=r(4867),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function(t){var e,r,o,s={};return t?(n.forEach(t.split("\n"),(function(t){if(o=t.indexOf(":"),e=n.trim(t.substr(0,o)).toLowerCase(),r=n.trim(t.substr(o+1)),e){if(s[e]&&i.indexOf(e)>=0)return;s[e]="set-cookie"===e?(s[e]?s[e]:[]).concat([r]):s[e]?s[e]+", "+r:r}})),s):s}},8030:t=>{"use strict";t.exports=function(t){return function(e){return t.apply(null,e)}}},4867:(t,e,r)=>{"use strict";var n=r(1849),i=Object.prototype.toString;function o(t){return"[object Array]"===i.call(t)}function s(t){return void 0===t}function a(t){return null!==t&&"object"==typeof t}function u(t){if("[object Object]"!==i.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype}function h(t){return"[object Function]"===i.call(t)}function l(t,e){if(null!=t)if("object"!=typeof t&&(t=[t]),o(t))for(var r=0,n=t.length;r<n;r++)e.call(null,t[r],r,t);else for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.call(null,t[i],i,t)}t.exports={isArray:o,isArrayBuffer:function(t){return"[object ArrayBuffer]"===i.call(t)},isBuffer:function(t){return null!==t&&!s(t)&&null!==t.constructor&&!s(t.constructor)&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)},isFormData:function(t){return"undefined"!=typeof FormData&&t instanceof FormData},isArrayBufferView:function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer&&t.buffer instanceof ArrayBuffer},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isObject:a,isPlainObject:u,isUndefined:s,isDate:function(t){return"[object Date]"===i.call(t)},isFile:function(t){return"[object File]"===i.call(t)},isBlob:function(t){return"[object Blob]"===i.call(t)},isFunction:h,isStream:function(t){return a(t)&&h(t.pipe)},isURLSearchParams:function(t){return"undefined"!=typeof URLSearchParams&&t instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:l,merge:function t(){var e={};function r(r,n){u(e[n])&&u(r)?e[n]=t(e[n],r):u(r)?e[n]=t({},r):o(r)?e[n]=r.slice():e[n]=r}for(var n=0,i=arguments.length;n<i;n++)l(arguments[n],r);return e},extend:function(t,e,r){return l(e,(function(e,i){t[i]=r&&"function"==typeof e?n(e,r):e})),t},trim:function(t){return t.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(t){return 65279===t.charCodeAt(0)&&(t=t.slice(1)),t}}},696:t=>{"use strict";t.exports=JSON.parse('{"_from":"axios","_id":"axios@0.20.0","_inBundle":false,"_integrity":"sha512-ANA4rr2BDcmmAQLOKft2fufrtuvlqR+cXNNinUmvfeSNCOF98PZL+7M/v1zIdGo7OLjEA9J2gXJL+j4zGsl0bA==","_location":"/axios","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"axios","name":"axios","escapedName":"axios","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.20.0.tgz","_shasum":"057ba30f04884694993a8cd07fa394cff11c50bd","_spec":"axios","_where":"/home/aeliasnet/code/iden3/hermezjs","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/axios/axios/issues"},"bundleDependencies":false,"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"dependencies":{"follow-redirects":"^1.10.0"},"deprecated":false,"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"bundlesize":"^0.17.0","coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.0.2","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^20.1.0","grunt-karma":"^2.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^1.3.0","karma-chrome-launcher":"^2.2.0","karma-coverage":"^1.1.1","karma-firefox-launcher":"^1.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.2.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^5.2.0","sinon":"^4.5.0","typescript":"^2.8.1","url-search-params":"^0.10.0","webpack":"^1.13.1","webpack-dev-server":"^1.14.1"},"homepage":"https://github.com/axios/axios","jsdelivr":"dist/axios.min.js","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","name":"axios","repository":{"type":"git","url":"git+https://github.com/axios/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","fix":"eslint --fix lib/**/*.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test && bundlesize","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","unpkg":"dist/axios.min.js","version":"0.20.0"}')},4736:(t,e,r)=>{var n;t=r.nmd(t);var i=function(t){"use strict";var e=1e7,r=9007199254740992,n=c(r),o="0123456789abcdefghijklmnopqrstuvwxyz",s="function"==typeof BigInt;function a(t,e,r,n){return void 0===t?a[0]:void 0===e||10==+e&&!r?J(t):K(t,e,r,n)}function u(t,e){this.value=t,this.sign=e,this.isSmall=!1}function h(t){this.value=t,this.sign=t<0,this.isSmall=!0}function l(t){this.value=t}function f(t){return-r<t&&t<r}function c(t){return t<1e7?[t]:t<1e14?[t%1e7,Math.floor(t/1e7)]:[t%1e7,Math.floor(t/1e7)%1e7,Math.floor(t/1e14)]}function d(t){p(t);var r=t.length;if(r<4&&k(t,n)<0)switch(r){case 0:return 0;case 1:return t[0];case 2:return t[0]+t[1]*e;default:return t[0]+(t[1]+t[2]*e)*e}return t}function p(t){for(var e=t.length;0===t[--e];);t.length=e+1}function m(t){for(var e=new Array(t),r=-1;++r<t;)e[r]=0;return e}function g(t){return t>0?Math.floor(t):Math.ceil(t)}function y(t,r){var n,i,o=t.length,s=r.length,a=new Array(o),u=0,h=e;for(i=0;i<s;i++)u=(n=t[i]+r[i]+u)>=h?1:0,a[i]=n-u*h;for(;i<o;)u=(n=t[i]+u)===h?1:0,a[i++]=n-u*h;return u>0&&a.push(u),a}function v(t,e){return t.length>=e.length?y(t,e):y(e,t)}function w(t,r){var n,i,o=t.length,s=new Array(o),a=e;for(i=0;i<o;i++)n=t[i]-a+r,r=Math.floor(n/a),s[i]=n-r*a,r+=1;for(;r>0;)s[i++]=r%a,r=Math.floor(r/a);return s}function b(t,r){var n,i,o=t.length,s=r.length,a=new Array(o),u=0,h=e;for(n=0;n<s;n++)(i=t[n]-u-r[n])<0?(i+=h,u=1):u=0,a[n]=i;for(n=s;n<o;n++){if(!((i=t[n]-u)<0)){a[n++]=i;break}i+=h,a[n]=i}for(;n<o;n++)a[n]=t[n];return p(a),a}function A(t,r,n){var i,o,s=t.length,a=new Array(s),l=-r,f=e;for(i=0;i<s;i++)o=t[i]+l,l=Math.floor(o/f),o%=f,a[i]=o<0?o+f:o;return"number"==typeof(a=d(a))?(n&&(a=-a),new h(a)):new u(a,n)}function M(t,r){var n,i,o,s,a=t.length,u=r.length,h=m(a+u),l=e;for(o=0;o<a;++o){s=t[o];for(var f=0;f<u;++f)n=s*r[f]+h[o+f],i=Math.floor(n/l),h[o+f]=n-i*l,h[o+f+1]+=i}return p(h),h}function I(t,r){var n,i,o=t.length,s=new Array(o),a=e,u=0;for(i=0;i<o;i++)n=t[i]*r+u,u=Math.floor(n/a),s[i]=n-u*a;for(;u>0;)s[i++]=u%a,u=Math.floor(u/a);return s}function E(t,e){for(var r=[];e-- >0;)r.push(0);return r.concat(t)}function _(t,e){var r=Math.max(t.length,e.length);if(r<=30)return M(t,e);r=Math.ceil(r/2);var n=t.slice(r),i=t.slice(0,r),o=e.slice(r),s=e.slice(0,r),a=_(i,s),u=_(n,o),h=_(v(i,n),v(s,o)),l=v(v(a,E(b(b(h,a),u),r)),E(u,2*r));return p(l),l}function S(t,r,n){return new u(t<e?I(r,t):M(r,c(t)),n)}function C(t){var r,n,i,o,s=t.length,a=m(s+s),u=e;for(i=0;i<s;i++){n=0-(o=t[i])*o;for(var h=i;h<s;h++)r=o*t[h]*2+a[i+h]+n,n=Math.floor(r/u),a[i+h]=r-n*u;a[i+s]=n}return p(a),a}function x(t,e){var r,n,i,o,s=t.length,a=m(s);for(i=0,r=s-1;r>=0;--r)i=(o=1e7*i+t[r])-(n=g(o/e))*e,a[r]=0|n;return[a,0|i]}function B(t,r){var n,i=J(r);if(s)return[new l(t.value/i.value),new l(t.value%i.value)];var o,f=t.value,y=i.value;if(0===y)throw new Error("Cannot divide by zero");if(t.isSmall)return i.isSmall?[new h(g(f/y)),new h(f%y)]:[a[0],t];if(i.isSmall){if(1===y)return[t,a[0]];if(-1==y)return[t.negate(),a[0]];var v=Math.abs(y);if(v<e){o=d((n=x(f,v))[0]);var w=n[1];return t.sign&&(w=-w),"number"==typeof o?(t.sign!==i.sign&&(o=-o),[new h(o),new h(w)]):[new u(o,t.sign!==i.sign),new h(w)]}y=c(v)}var A=k(f,y);if(-1===A)return[a[0],t];if(0===A)return[a[t.sign===i.sign?1:-1],a[0]];o=(n=f.length+y.length<=200?function(t,r){var n,i,o,s,a,u,h,l=t.length,f=r.length,c=e,p=m(r.length),g=r[f-1],y=Math.ceil(c/(2*g)),v=I(t,y),w=I(r,y);for(v.length<=l&&v.push(0),w.push(0),g=w[f-1],i=l-f;i>=0;i--){for(n=c-1,v[i+f]!==g&&(n=Math.floor((v[i+f]*c+v[i+f-1])/g)),o=0,s=0,u=w.length,a=0;a<u;a++)o+=n*w[a],h=Math.floor(o/c),s+=v[i+a]-(o-h*c),o=h,s<0?(v[i+a]=s+c,s=-1):(v[i+a]=s,s=0);for(;0!==s;){for(n-=1,o=0,a=0;a<u;a++)(o+=v[i+a]-c+w[a])<0?(v[i+a]=o+c,o=0):(v[i+a]=o,o=1);s+=o}p[i]=n}return v=x(v,y)[0],[d(p),d(v)]}(f,y):function(t,r){for(var n,i,o,s,a,u=t.length,h=r.length,l=[],f=[],c=e;u;)if(f.unshift(t[--u]),p(f),k(f,r)<0)l.push(0);else{o=f[(i=f.length)-1]*c+f[i-2],s=r[h-1]*c+r[h-2],i>h&&(o=(o+1)*c),n=Math.ceil(o/s);do{if(k(a=I(r,n),f)<=0)break;n--}while(n);l.push(n),f=b(f,a)}return l.reverse(),[d(l),d(f)]}(f,y))[0];var M=t.sign!==i.sign,E=n[1],_=t.sign;return"number"==typeof o?(M&&(o=-o),o=new h(o)):o=new u(o,M),"number"==typeof E?(_&&(E=-E),E=new h(E)):E=new u(E,_),[o,E]}function k(t,e){if(t.length!==e.length)return t.length>e.length?1:-1;for(var r=t.length-1;r>=0;r--)if(t[r]!==e[r])return t[r]>e[r]?1:-1;return 0}function F(t){var e=t.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function N(t,e){for(var r,n,o,s=t.prev(),a=s,u=0;a.isEven();)a=a.divide(2),u++;t:for(n=0;n<e.length;n++)if(!t.lesser(e[n])&&!(o=i(e[n]).modPow(a,t)).isUnit()&&!o.equals(s)){for(r=u-1;0!=r;r--){if((o=o.square().mod(t)).isUnit())return!1;if(o.equals(s))continue t}return!1}return!0}u.prototype=Object.create(a.prototype),h.prototype=Object.create(a.prototype),l.prototype=Object.create(a.prototype),u.prototype.add=function(t){var e=J(t);if(this.sign!==e.sign)return this.subtract(e.negate());var r=this.value,n=e.value;return e.isSmall?new u(w(r,Math.abs(n)),this.sign):new u(v(r,n),this.sign)},u.prototype.plus=u.prototype.add,h.prototype.add=function(t){var e=J(t),r=this.value;if(r<0!==e.sign)return this.subtract(e.negate());var n=e.value;if(e.isSmall){if(f(r+n))return new h(r+n);n=c(Math.abs(n))}return new u(w(n,Math.abs(r)),r<0)},h.prototype.plus=h.prototype.add,l.prototype.add=function(t){return new l(this.value+J(t).value)},l.prototype.plus=l.prototype.add,u.prototype.subtract=function(t){var e=J(t);if(this.sign!==e.sign)return this.add(e.negate());var r=this.value,n=e.value;return e.isSmall?A(r,Math.abs(n),this.sign):function(t,e,r){var n;return k(t,e)>=0?n=b(t,e):(n=b(e,t),r=!r),"number"==typeof(n=d(n))?(r&&(n=-n),new h(n)):new u(n,r)}(r,n,this.sign)},u.prototype.minus=u.prototype.subtract,h.prototype.subtract=function(t){var e=J(t),r=this.value;if(r<0!==e.sign)return this.add(e.negate());var n=e.value;return e.isSmall?new h(r-n):A(n,Math.abs(r),r>=0)},h.prototype.minus=h.prototype.subtract,l.prototype.subtract=function(t){return new l(this.value-J(t).value)},l.prototype.minus=l.prototype.subtract,u.prototype.negate=function(){return new u(this.value,!this.sign)},h.prototype.negate=function(){var t=this.sign,e=new h(-this.value);return e.sign=!t,e},l.prototype.negate=function(){return new l(-this.value)},u.prototype.abs=function(){return new u(this.value,!1)},h.prototype.abs=function(){return new h(Math.abs(this.value))},l.prototype.abs=function(){return new l(this.value>=0?this.value:-this.value)},u.prototype.multiply=function(t){var r,n,i,o=J(t),s=this.value,h=o.value,l=this.sign!==o.sign;if(o.isSmall){if(0===h)return a[0];if(1===h)return this;if(-1===h)return this.negate();if((r=Math.abs(h))<e)return new u(I(s,r),l);h=c(r)}return new u(-.012*(n=s.length)-.012*(i=h.length)+15e-6*n*i>0?_(s,h):M(s,h),l)},u.prototype.times=u.prototype.multiply,h.prototype._multiplyBySmall=function(t){return f(t.value*this.value)?new h(t.value*this.value):S(Math.abs(t.value),c(Math.abs(this.value)),this.sign!==t.sign)},u.prototype._multiplyBySmall=function(t){return 0===t.value?a[0]:1===t.value?this:-1===t.value?this.negate():S(Math.abs(t.value),this.value,this.sign!==t.sign)},h.prototype.multiply=function(t){return J(t)._multiplyBySmall(this)},h.prototype.times=h.prototype.multiply,l.prototype.multiply=function(t){return new l(this.value*J(t).value)},l.prototype.times=l.prototype.multiply,u.prototype.square=function(){return new u(C(this.value),!1)},h.prototype.square=function(){var t=this.value*this.value;return f(t)?new h(t):new u(C(c(Math.abs(this.value))),!1)},l.prototype.square=function(t){return new l(this.value*this.value)},u.prototype.divmod=function(t){var e=B(this,t);return{quotient:e[0],remainder:e[1]}},l.prototype.divmod=h.prototype.divmod=u.prototype.divmod,u.prototype.divide=function(t){return B(this,t)[0]},l.prototype.over=l.prototype.divide=function(t){return new l(this.value/J(t).value)},h.prototype.over=h.prototype.divide=u.prototype.over=u.prototype.divide,u.prototype.mod=function(t){return B(this,t)[1]},l.prototype.mod=l.prototype.remainder=function(t){return new l(this.value%J(t).value)},h.prototype.remainder=h.prototype.mod=u.prototype.remainder=u.prototype.mod,u.prototype.pow=function(t){var e,r,n,i=J(t),o=this.value,s=i.value;if(0===s)return a[1];if(0===o)return a[0];if(1===o)return a[1];if(-1===o)return i.isEven()?a[1]:a[-1];if(i.sign)return a[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&f(e=Math.pow(o,s)))return new h(g(e));for(r=this,n=a[1];!0&s&&(n=n.times(r),--s),0!==s;)s/=2,r=r.square();return n},h.prototype.pow=u.prototype.pow,l.prototype.pow=function(t){var e=J(t),r=this.value,n=e.value,i=BigInt(0),o=BigInt(1),s=BigInt(2);if(n===i)return a[1];if(r===i)return a[0];if(r===o)return a[1];if(r===BigInt(-1))return e.isEven()?a[1]:a[-1];if(e.isNegative())return new l(i);for(var u=this,h=a[1];(n&o)===o&&(h=h.times(u),--n),n!==i;)n/=s,u=u.square();return h},u.prototype.modPow=function(t,e){if(t=J(t),(e=J(e)).isZero())throw new Error("Cannot take modPow with modulus 0");var r=a[1],n=this.mod(e);for(t.isNegative()&&(t=t.multiply(a[-1]),n=n.modInv(e));t.isPositive();){if(n.isZero())return a[0];t.isOdd()&&(r=r.multiply(n).mod(e)),t=t.divide(2),n=n.square().mod(e)}return r},l.prototype.modPow=h.prototype.modPow=u.prototype.modPow,u.prototype.compareAbs=function(t){var e=J(t),r=this.value,n=e.value;return e.isSmall?1:k(r,n)},h.prototype.compareAbs=function(t){var e=J(t),r=Math.abs(this.value),n=e.value;return e.isSmall?r===(n=Math.abs(n))?0:r>n?1:-1:-1},l.prototype.compareAbs=function(t){var e=this.value,r=J(t).value;return(e=e>=0?e:-e)===(r=r>=0?r:-r)?0:e>r?1:-1},u.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var e=J(t),r=this.value,n=e.value;return this.sign!==e.sign?e.sign?1:-1:e.isSmall?this.sign?-1:1:k(r,n)*(this.sign?-1:1)},u.prototype.compareTo=u.prototype.compare,h.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var e=J(t),r=this.value,n=e.value;return e.isSmall?r==n?0:r>n?1:-1:r<0!==e.sign?r<0?-1:1:r<0?1:-1},h.prototype.compareTo=h.prototype.compare,l.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var e=this.value,r=J(t).value;return e===r?0:e>r?1:-1},l.prototype.compareTo=l.prototype.compare,u.prototype.equals=function(t){return 0===this.compare(t)},l.prototype.eq=l.prototype.equals=h.prototype.eq=h.prototype.equals=u.prototype.eq=u.prototype.equals,u.prototype.notEquals=function(t){return 0!==this.compare(t)},l.prototype.neq=l.prototype.notEquals=h.prototype.neq=h.prototype.notEquals=u.prototype.neq=u.prototype.notEquals,u.prototype.greater=function(t){return this.compare(t)>0},l.prototype.gt=l.prototype.greater=h.prototype.gt=h.prototype.greater=u.prototype.gt=u.prototype.greater,u.prototype.lesser=function(t){return this.compare(t)<0},l.prototype.lt=l.prototype.lesser=h.prototype.lt=h.prototype.lesser=u.prototype.lt=u.prototype.lesser,u.prototype.greaterOrEquals=function(t){return this.compare(t)>=0},l.prototype.geq=l.prototype.greaterOrEquals=h.prototype.geq=h.prototype.greaterOrEquals=u.prototype.geq=u.prototype.greaterOrEquals,u.prototype.lesserOrEquals=function(t){return this.compare(t)<=0},l.prototype.leq=l.prototype.lesserOrEquals=h.prototype.leq=h.prototype.lesserOrEquals=u.prototype.leq=u.prototype.lesserOrEquals,u.prototype.isEven=function(){return 0==(1&this.value[0])},h.prototype.isEven=function(){return 0==(1&this.value)},l.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},u.prototype.isOdd=function(){return 1==(1&this.value[0])},h.prototype.isOdd=function(){return 1==(1&this.value)},l.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},u.prototype.isPositive=function(){return!this.sign},h.prototype.isPositive=function(){return this.value>0},l.prototype.isPositive=h.prototype.isPositive,u.prototype.isNegative=function(){return this.sign},h.prototype.isNegative=function(){return this.value<0},l.prototype.isNegative=h.prototype.isNegative,u.prototype.isUnit=function(){return!1},h.prototype.isUnit=function(){return 1===Math.abs(this.value)},l.prototype.isUnit=function(){return this.abs().value===BigInt(1)},u.prototype.isZero=function(){return!1},h.prototype.isZero=function(){return 0===this.value},l.prototype.isZero=function(){return this.value===BigInt(0)},u.prototype.isDivisibleBy=function(t){var e=J(t);return!e.isZero()&&(!!e.isUnit()||(0===e.compareAbs(2)?this.isEven():this.mod(e).isZero()))},l.prototype.isDivisibleBy=h.prototype.isDivisibleBy=u.prototype.isDivisibleBy,u.prototype.isPrime=function(e){var r=F(this);if(r!==t)return r;var n=this.abs(),o=n.bitLength();if(o<=64)return N(n,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var s=Math.log(2)*o.toJSNumber(),a=Math.ceil(!0===e?2*Math.pow(s,2):s),u=[],h=0;h<a;h++)u.push(i(h+2));return N(n,u)},l.prototype.isPrime=h.prototype.isPrime=u.prototype.isPrime,u.prototype.isProbablePrime=function(e,r){var n=F(this);if(n!==t)return n;for(var o=this.abs(),s=e===t?5:e,a=[],u=0;u<s;u++)a.push(i.randBetween(2,o.minus(2),r));return N(o,a)},l.prototype.isProbablePrime=h.prototype.isProbablePrime=u.prototype.isProbablePrime,u.prototype.modInv=function(t){for(var e,r,n,o=i.zero,s=i.one,a=J(t),u=this.abs();!u.isZero();)e=a.divide(u),r=o,n=a,o=s,a=u,s=r.subtract(e.multiply(s)),u=n.subtract(e.multiply(u));if(!a.isUnit())throw new Error(this.toString()+" and "+t.toString()+" are not co-prime");return-1===o.compare(0)&&(o=o.add(t)),this.isNegative()?o.negate():o},l.prototype.modInv=h.prototype.modInv=u.prototype.modInv,u.prototype.next=function(){var t=this.value;return this.sign?A(t,1,this.sign):new u(w(t,1),this.sign)},h.prototype.next=function(){var t=this.value;return t+1<r?new h(t+1):new u(n,!1)},l.prototype.next=function(){return new l(this.value+BigInt(1))},u.prototype.prev=function(){var t=this.value;return this.sign?new u(w(t,1),!0):A(t,1,this.sign)},h.prototype.prev=function(){var t=this.value;return t-1>-r?new h(t-1):new u(n,!0)},l.prototype.prev=function(){return new l(this.value-BigInt(1))};for(var T=[1];2*T[T.length-1]<=e;)T.push(2*T[T.length-1]);var R=T.length,P=T[R-1];function O(t){return Math.abs(t)<=e}function U(t,e,r){e=J(e);for(var n=t.isNegative(),o=e.isNegative(),s=n?t.not():t,a=o?e.not():e,u=0,h=0,l=null,f=null,c=[];!s.isZero()||!a.isZero();)u=(l=B(s,P))[1].toJSNumber(),n&&(u=P-1-u),h=(f=B(a,P))[1].toJSNumber(),o&&(h=P-1-h),s=l[0],a=f[0],c.push(r(u,h));for(var d=0!==r(n?1:0,o?1:0)?i(-1):i(0),p=c.length-1;p>=0;p-=1)d=d.multiply(P).add(i(c[p]));return d}u.prototype.shiftLeft=function(t){var e=J(t).toJSNumber();if(!O(e))throw new Error(String(e)+" is too large for shifting.");if(e<0)return this.shiftRight(-e);var r=this;if(r.isZero())return r;for(;e>=R;)r=r.multiply(P),e-=R-1;return r.multiply(T[e])},l.prototype.shiftLeft=h.prototype.shiftLeft=u.prototype.shiftLeft,u.prototype.shiftRight=function(t){var e,r=J(t).toJSNumber();if(!O(r))throw new Error(String(r)+" is too large for shifting.");if(r<0)return this.shiftLeft(-r);for(var n=this;r>=R;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(e=B(n,P))[1].isNegative()?e[0].prev():e[0],r-=R-1}return(e=B(n,T[r]))[1].isNegative()?e[0].prev():e[0]},l.prototype.shiftRight=h.prototype.shiftRight=u.prototype.shiftRight,u.prototype.not=function(){return this.negate().prev()},l.prototype.not=h.prototype.not=u.prototype.not,u.prototype.and=function(t){return U(this,t,(function(t,e){return t&e}))},l.prototype.and=h.prototype.and=u.prototype.and,u.prototype.or=function(t){return U(this,t,(function(t,e){return t|e}))},l.prototype.or=h.prototype.or=u.prototype.or,u.prototype.xor=function(t){return U(this,t,(function(t,e){return t^e}))},l.prototype.xor=h.prototype.xor=u.prototype.xor;var D=1<<30;function q(t){var r=t.value,n="number"==typeof r?r|D:"bigint"==typeof r?r|BigInt(D):r[0]+r[1]*e|1073758208;return n&-n}function L(t,e){if(e.compareTo(t)<=0){var r=L(t,e.square(e)),n=r.p,o=r.e,s=n.multiply(e);return s.compareTo(t)<=0?{p:s,e:2*o+1}:{p:n,e:2*o}}return{p:i(1),e:0}}function Q(t,e){return t=J(t),e=J(e),t.greater(e)?t:e}function j(t,e){return t=J(t),e=J(e),t.lesser(e)?t:e}function z(t,e){if(t=J(t).abs(),e=J(e).abs(),t.equals(e))return t;if(t.isZero())return e;if(e.isZero())return t;for(var r,n,i=a[1];t.isEven()&&e.isEven();)r=j(q(t),q(e)),t=t.divide(r),e=e.divide(r),i=i.multiply(r);for(;t.isEven();)t=t.divide(q(t));do{for(;e.isEven();)e=e.divide(q(e));t.greater(e)&&(n=e,e=t,t=n),e=e.subtract(t)}while(!e.isZero());return i.isUnit()?t:t.multiply(i)}u.prototype.bitLength=function(){var t=this;return t.compareTo(i(0))<0&&(t=t.negate().subtract(i(1))),0===t.compareTo(i(0))?i(0):i(L(t,i(2)).e).add(i(1))},l.prototype.bitLength=h.prototype.bitLength=u.prototype.bitLength;var K=function(t,e,r,n){r=r||o,t=String(t),n||(t=t.toLowerCase(),r=r.toLowerCase());var i,s=t.length,a=Math.abs(e),u={};for(i=0;i<r.length;i++)u[r[i]]=i;for(i=0;i<s;i++)if("-"!==(f=t[i])&&f in u&&u[f]>=a){if("1"===f&&1===a)continue;throw new Error(f+" is not a valid digit in base "+e+".")}e=J(e);var h=[],l="-"===t[0];for(i=l?1:0;i<t.length;i++){var f;if((f=t[i])in u)h.push(J(u[f]));else{if("<"!==f)throw new Error(f+" is not a valid character");var c=i;do{i++}while(">"!==t[i]&&i<t.length);h.push(J(t.slice(c+1,i)))}}return H(h,e,l)};function H(t,e,r){var n,i=a[0],o=a[1];for(n=t.length-1;n>=0;n--)i=i.add(t[n].times(o)),o=o.times(e);return r?i.negate():i}function G(t,e){if((e=i(e)).isZero()){if(t.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(e.equals(-1)){if(t.isZero())return{value:[0],isNegative:!1};if(t.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-t.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var r=Array.apply(null,Array(t.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return r.unshift([1]),{value:[].concat.apply([],r),isNegative:!1}}var n=!1;if(t.isNegative()&&e.isPositive()&&(n=!0,t=t.abs()),e.isUnit())return t.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(t.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:n};for(var o,s=[],a=t;a.isNegative()||a.compareAbs(e)>=0;){o=a.divmod(e),a=o.quotient;var u=o.remainder;u.isNegative()&&(u=e.minus(u).abs(),a=a.next()),s.push(u.toJSNumber())}return s.push(a.toJSNumber()),{value:s.reverse(),isNegative:n}}function V(t,e,r){var n=G(t,e);return(n.isNegative?"-":"")+n.value.map((function(t){return function(t,e){return t<(e=e||o).length?e[t]:"<"+t+">"}(t,r)})).join("")}function W(t){if(f(+t)){var e=+t;if(e===g(e))return s?new l(BigInt(e)):new h(e);throw new Error("Invalid integer: "+t)}var r="-"===t[0];r&&(t=t.slice(1));var n=t.split(/e/i);if(n.length>2)throw new Error("Invalid integer: "+n.join("e"));if(2===n.length){var i=n[1];if("+"===i[0]&&(i=i.slice(1)),(i=+i)!==g(i)||!f(i))throw new Error("Invalid integer: "+i+" is not a valid exponent.");var o=n[0],a=o.indexOf(".");if(a>=0&&(i-=o.length-a-1,o=o.slice(0,a)+o.slice(a+1)),i<0)throw new Error("Cannot include negative exponent part for integers");t=o+=new Array(i+1).join("0")}if(!/^([0-9][0-9]*)$/.test(t))throw new Error("Invalid integer: "+t);if(s)return new l(BigInt(r?"-"+t:t));for(var c=[],d=t.length,m=d-7;d>0;)c.push(+t.slice(m,d)),(m-=7)<0&&(m=0),d-=7;return p(c),new u(c,r)}function J(t){return"number"==typeof t?function(t){if(s)return new l(BigInt(t));if(f(t)){if(t!==g(t))throw new Error(t+" is not an integer.");return new h(t)}return W(t.toString())}(t):"string"==typeof t?W(t):"bigint"==typeof t?new l(t):t}u.prototype.toArray=function(t){return G(this,t)},h.prototype.toArray=function(t){return G(this,t)},l.prototype.toArray=function(t){return G(this,t)},u.prototype.toString=function(e,r){if(e===t&&(e=10),10!==e)return V(this,e,r);for(var n,i=this.value,o=i.length,s=String(i[--o]);--o>=0;)n=String(i[o]),s+="0000000".slice(n.length)+n;return(this.sign?"-":"")+s},h.prototype.toString=function(e,r){return e===t&&(e=10),10!=e?V(this,e,r):String(this.value)},l.prototype.toString=h.prototype.toString,l.prototype.toJSON=u.prototype.toJSON=h.prototype.toJSON=function(){return this.toString()},u.prototype.valueOf=function(){return parseInt(this.toString(),10)},u.prototype.toJSNumber=u.prototype.valueOf,h.prototype.valueOf=function(){return this.value},h.prototype.toJSNumber=h.prototype.valueOf,l.prototype.valueOf=l.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var Z=0;Z<1e3;Z++)a[Z]=J(Z),Z>0&&(a[-Z]=J(-Z));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=Q,a.min=j,a.gcd=z,a.lcm=function(t,e){return t=J(t).abs(),e=J(e).abs(),t.divide(z(t,e)).multiply(e)},a.isInstance=function(t){return t instanceof u||t instanceof h||t instanceof l},a.randBetween=function(t,r,n){t=J(t),r=J(r);var i=n||Math.random,o=j(t,r),s=Q(t,r).subtract(o).add(1);if(s.isSmall)return o.add(Math.floor(i()*s));for(var u=G(s,e).value,h=[],l=!0,f=0;f<u.length;f++){var c=l?u[f]:e,d=g(i()*c);h.push(d),d<c&&(l=!1)}return o.add(a.fromArray(h,e,!1))},a.fromArray=function(t,e,r){return H(t.map(J),J(e||10),r)},a}();t.hasOwnProperty("exports")&&(t.exports=i),void 0===(n=function(){return i}.call(e,r,e,t))||(t.exports=n)},289:(t,e,r)=>{var n=r(5747),i=r(5622),o=r(2843),s=i.join,a=i.dirname,u=n.accessSync&&function(t){try{n.accessSync(t)}catch(t){return!1}return!0}||n.existsSync||i.existsSync,h={arrow:process.env.NODE_BINDINGS_ARROW||" → ",compiled:process.env.NODE_BINDINGS_COMPILED_DIR||"compiled",platform:process.platform,arch:process.arch,nodePreGyp:"node-v"+process.versions.modules+"-"+process.platform+"-"+process.arch,version:process.versions.node,bindings:"bindings.node",try:[["module_root","build","bindings"],["module_root","build","Debug","bindings"],["module_root","build","Release","bindings"],["module_root","out","Debug","bindings"],["module_root","Debug","bindings"],["module_root","out","Release","bindings"],["module_root","Release","bindings"],["module_root","build","default","bindings"],["module_root","compiled","version","platform","arch","bindings"],["module_root","addon-build","release","install-root","bindings"],["module_root","addon-build","debug","install-root","bindings"],["module_root","addon-build","default","install-root","bindings"],["module_root","lib","binding","nodePreGyp","bindings"]]};t.exports=e=function(t){"string"==typeof t?t={bindings:t}:t||(t={}),Object.keys(h).map((function(e){e in t||(t[e]=h[e])})),t.module_root||(t.module_root=e.getRoot(e.getFileName())),".node"!=i.extname(t.bindings)&&(t.bindings+=".node");for(var r,n,o,a=require,u=[],l=0,f=t.try.length;l<f;l++){r=s.apply(null,t.try[l].map((function(e){return t[e]||e}))),u.push(r);try{return n=t.path?a.resolve(r):a(r),t.path||(n.path=r),n}catch(t){if("MODULE_NOT_FOUND"!==t.code&&"QUALIFIED_PATH_RESOLUTION_FAILED"!==t.code&&!/not find/i.test(t.message))throw t}}throw(o=new Error("Could not locate the bindings file. Tried:\n"+u.map((function(e){return t.arrow+e})).join("\n"))).tries=u,o},e.getFileName=function(t){var e,r=Error.prepareStackTrace,n=Error.stackTraceLimit;return Error.stackTraceLimit=10,Error.prepareStackTrace=function(r,n){for(var i=0,o=n.length;i<o;i++)if((e=n[i].getFileName())!==__filename){if(!t)return;if(e!==t)return}},Error.captureStackTrace({}),Error.prepareStackTrace=r,Error.stackTraceLimit=n,0===e.indexOf("file://")&&(e=o(e)),e},e.getRoot=function(t){for(var e,r=a(t);;){if("."===r&&(r=process.cwd()),u(s(r,"package.json"))||u(s(r,"node_modules")))return r;if(e===r)throw new Error('Could not find module root given file: "'+t+'". Do you have a `package.json` file? ');e=r,r=s(r,"..")}}},755:(t,e,r)=>{"use strict";t.exports=r(8781)(r(289)("blake"))},6193:(t,e,r)=>{"use strict";try{t.exports=r(755)}catch(e){process.env.DEBUG&&console.error("Blake bindings are not compiled. Pure JS implementation will be used."),t.exports=r(7327)}},7327:(t,e,r)=>{"use strict";t.exports=r(8781)(r(5447))},6099:(t,e,r)=>{"use strict";var n=r(2413).Transform;function i(t,e){n.call(this,e),this._engine=t,this._finalized=!1}r(4378)(i,n),i.prototype._transform=function(t,e,r){var n=null;try{this.update(t,e)}catch(t){n=t}r(n)},i.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},i.prototype.update=function(t,e){if(!Buffer.isBuffer(t)&&"string"!=typeof t)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");return Buffer.isBuffer(t)||(t=Buffer.from(t,e)),this._engine.update(t),this},i.prototype.digest=function(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var e=this._engine.digest();return void 0!==t&&(e=e.toString(t)),e},t.exports=i},8781:(t,e,r)=>{"use strict";var n=r(6099);t.exports=function(t){return function(e,r){var i=function(e){switch("string"==typeof e?e.toLowerCase():e){case"blake224":return t.Blake224;case"blake256":return t.Blake256;case"blake384":return t.Blake384;case"blake512":return t.Blake512;default:throw new Error("Invald algorithm: "+e)}}(e);return new n(new i,r)}}},4313:t=>{"use strict";function e(){}e.sigma=[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],[14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],[11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4],[7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8],[9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13],[2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9],[12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11],[13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10],[6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5],[10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],[14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],[11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4],[7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8],[9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13],[2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]],e.u256=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479],e.u512=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731,3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113],e.padding=Buffer.from([128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),e.prototype._length_carry=function(t){for(var e=0;e<t.length&&!(t[e]<4294967296);++e)t[e]-=4294967296,t[e+1]+=1},e.prototype.update=function(t){for(var e=this._block,r=0;this._blockOffset+t.length-r>=e.length;){for(var n=this._blockOffset;n<e.length;)e[n++]=t[r++];this._length[0]+=8*e.length,this._length_carry(this._length),this._compress(),this._blockOffset=0}for(;r<t.length;)e[this._blockOffset++]=t[r++]},t.exports=e},8713:(t,e,r)=>{"use strict";var n=r(4378),i=r(1680),o=Buffer.from([0]),s=Buffer.from([128]);function a(){i.call(this),this._h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],this._zo=o,this._oo=s}n(a,i),a.prototype.digest=function(){this._padding();for(var t=Buffer.alloc(28),e=0;e<7;++e)t.writeUInt32BE(this._h[e],4*e);return t},t.exports=a},1680:(t,e,r)=>{"use strict";var n=r(4378),i=r(4313),o=Buffer.from([1]),s=Buffer.from([129]);function a(t,e){return(t<<32-e|t>>>e)>>>0}function u(t,e,r,n,o,s,u,h){var l=i.sigma,f=i.u256;t[n]=t[n]+((e[l[r][h]]^f[l[r][h+1]])>>>0)+t[o]>>>0,t[u]=a(t[u]^t[n],16),t[s]=t[s]+t[u]>>>0,t[o]=a(t[o]^t[s],12),t[n]=t[n]+((e[l[r][h+1]]^f[l[r][h]])>>>0)+t[o]>>>0,t[u]=a(t[u]^t[n],8),t[s]=t[s]+t[u]>>>0,t[o]=a(t[o]^t[s],7)}function h(){i.call(this),this._h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this._s=[0,0,0,0],this._block=Buffer.alloc(64),this._blockOffset=0,this._length=[0,0],this._nullt=!1,this._zo=o,this._oo=s}n(h,i),h.prototype._compress=function(){var t,e=i.u256,r=new Array(16),n=new Array(16);for(t=0;t<16;++t)n[t]=this._block.readUInt32BE(4*t);for(t=0;t<8;++t)r[t]=this._h[t]>>>0;for(t=8;t<12;++t)r[t]=(this._s[t-8]^e[t-8])>>>0;for(t=12;t<16;++t)r[t]=e[t-8];for(this._nullt||(r[12]=(r[12]^this._length[0])>>>0,r[13]=(r[13]^this._length[0])>>>0,r[14]=(r[14]^this._length[1])>>>0,r[15]=(r[15]^this._length[1])>>>0),t=0;t<14;++t)u(r,n,t,0,4,8,12,0),u(r,n,t,1,5,9,13,2),u(r,n,t,2,6,10,14,4),u(r,n,t,3,7,11,15,6),u(r,n,t,0,5,10,15,8),u(r,n,t,1,6,11,12,10),u(r,n,t,2,7,8,13,12),u(r,n,t,3,4,9,14,14);for(t=0;t<16;++t)this._h[t%8]=(this._h[t%8]^r[t])>>>0;for(t=0;t<8;++t)this._h[t]=(this._h[t]^this._s[t%4])>>>0},h.prototype._padding=function(){var t=this._length[0]+8*this._blockOffset,e=this._length[1];t>=4294967296&&(t-=4294967296,e+=1);var r=Buffer.alloc(8);r.writeUInt32BE(e,0),r.writeUInt32BE(t,4),55===this._blockOffset?(this._length[0]-=8,this.update(this._oo)):(this._blockOffset<55?(0===this._blockOffset&&(this._nullt=!0),this._length[0]-=8*(55-this._blockOffset),this.update(i.padding.slice(0,55-this._blockOffset))):(this._length[0]-=8*(64-this._blockOffset),this.update(i.padding.slice(0,64-this._blockOffset)),this._length[0]-=440,this.update(i.padding.slice(1,56)),this._nullt=!0),this.update(this._zo),this._length[0]-=8),this._length[0]-=64,this.update(r)},h.prototype.digest=function(){this._padding();for(var t=Buffer.alloc(32),e=0;e<8;++e)t.writeUInt32BE(this._h[e],4*e);return t},t.exports=h},9588:(t,e,r)=>{"use strict";var n=r(4378),i=r(9190),o=Buffer.from([0]),s=Buffer.from([128]);function a(){i.call(this),this._h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428],this._zo=o,this._oo=s}n(a,i),a.prototype.digest=function(){this._padding();for(var t=Buffer.alloc(48),e=0;e<12;++e)t.writeUInt32BE(this._h[e],4*e);return t},t.exports=a},9190:(t,e,r)=>{"use strict";var n=r(4378),i=r(4313),o=Buffer.from([1]),s=Buffer.from([129]);function a(t,e,r,n){var i=t[2*e]^t[2*r],o=t[2*e+1]^t[2*r+1];n>=32&&(o^=i,o^=i^=o,n-=32),0===n?(t[2*e]=i>>>0,t[2*e+1]=o>>>0):(t[2*e]=(i>>>n|o<<32-n)>>>0,t[2*e+1]=(o>>>n|i<<32-n)>>>0)}function u(t,e,r,n,o,s,u,h){var l,f=i.sigma,c=i.u512;l=t[2*n+1]+((e[2*f[r][h]+1]^c[2*f[r][h+1]+1])>>>0)+t[2*o+1],t[2*n]=t[2*n]+((e[2*f[r][h]]^c[2*f[r][h+1]])>>>0)+t[2*o]+~~(l/4294967296)>>>0,t[2*n+1]=l>>>0,a(t,u,n,32),l=t[2*s+1]+t[2*u+1],t[2*s]=t[2*s]+t[2*u]+~~(l/4294967296)>>>0,t[2*s+1]=l>>>0,a(t,o,s,25),l=t[2*n+1]+((e[2*f[r][h+1]+1]^c[2*f[r][h]+1])>>>0)+t[2*o+1],t[2*n]=t[2*n]+((e[2*f[r][h+1]]^c[2*f[r][h]])>>>0)+t[2*o]+~~(l/4294967296)>>>0,t[2*n+1]=l>>>0,a(t,u,n,16),l=t[2*s+1]+t[2*u+1],t[2*s]=t[2*s]+t[2*u]+~~(l/4294967296)>>>0,t[2*s+1]=l>>>0,a(t,o,s,11)}function h(){i.call(this),this._h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this._s=[0,0,0,0,0,0,0,0],this._block=Buffer.alloc(128),this._blockOffset=0,this._length=[0,0,0,0],this._nullt=!1,this._zo=o,this._oo=s}n(h,i),h.prototype._compress=function(){var t,e=i.u512,r=new Array(32),n=new Array(32);for(t=0;t<32;++t)n[t]=this._block.readUInt32BE(4*t);for(t=0;t<16;++t)r[t]=this._h[t]>>>0;for(t=16;t<24;++t)r[t]=(this._s[t-16]^e[t-16])>>>0;for(t=24;t<32;++t)r[t]=e[t-16];for(this._nullt||(r[24]=(r[24]^this._length[1])>>>0,r[25]=(r[25]^this._length[0])>>>0,r[26]=(r[26]^this._length[1])>>>0,r[27]=(r[27]^this._length[0])>>>0,r[28]=(r[28]^this._length[3])>>>0,r[29]=(r[29]^this._length[2])>>>0,r[30]=(r[30]^this._length[3])>>>0,r[31]=(r[31]^this._length[2])>>>0),t=0;t<16;++t)u(r,n,t,0,4,8,12,0),u(r,n,t,1,5,9,13,2),u(r,n,t,2,6,10,14,4),u(r,n,t,3,7,11,15,6),u(r,n,t,0,5,10,15,8),u(r,n,t,1,6,11,12,10),u(r,n,t,2,7,8,13,12),u(r,n,t,3,4,9,14,14);for(t=0;t<16;++t)this._h[t%8*2]=(this._h[t%8*2]^r[2*t])>>>0,this._h[t%8*2+1]=(this._h[t%8*2+1]^r[2*t+1])>>>0;for(t=0;t<8;++t)this._h[2*t]=(this._h[2*t]^this._s[t%4*2])>>>0,this._h[2*t+1]=(this._h[2*t+1]^this._s[t%4*2+1])>>>0},h.prototype._padding=function(){var t=this._length.slice();t[0]+=8*this._blockOffset,this._length_carry(t);for(var e=Buffer.alloc(16),r=0;r<4;++r)e.writeUInt32BE(t[3-r],4*r);111===this._blockOffset?(this._length[0]-=8,this.update(this._oo)):(this._blockOffset<111?(0===this._blockOffset&&(this._nullt=!0),this._length[0]-=8*(111-this._blockOffset),this.update(i.padding.slice(0,111-this._blockOffset))):(this._length[0]-=8*(128-this._blockOffset),this.update(i.padding.slice(0,128-this._blockOffset)),this._length[0]-=888,this.update(i.padding.slice(1,112)),this._nullt=!0),this.update(this._zo),this._length[0]-=8),this._length[0]-=128,this.update(e)},h.prototype.digest=function(){this._padding();for(var t=Buffer.alloc(64),e=0;e<16;++e)t.writeUInt32BE(this._h[e],4*e);return t},t.exports=h},5447:(t,e,r)=>{"use strict";t.exports={Blake224:r(8713),Blake256:r(1680),Blake384:r(9588),Blake512:r(9190)}},6053:(t,e,r)=>{function n(t){if(!n.supported)return null;var e,o=t&&t.imports,s=(e="","function"==typeof atob?new Uint8Array(atob(e).split("").map(i)):new(r(4293).Buffer)(e,"base64")),a=null,u={buffer:s,memory:null,exports:null,realloc:function(t){u.exports.memory.grow(Math.ceil(Math.abs(t-u.memory.length)/65536)),u.memory=new Uint8Array(u.exports.memory.buffer)},onload:h};return h((function(){})),u;function h(e){if(u.exports)return e();if(a)a.then(e.bind(null,null)).catch(e);else{try{if(t&&t.async)throw new Error("async");l({instance:new WebAssembly.Instance(new WebAssembly.Module(s),o)})}catch(t){a=WebAssembly.instantiate(s,o).then(l)}h(e)}}function l(t){u.exports=t.instance.exports,u.memory=u.exports.memory&&u.exports.memory.buffer&&new Uint8Array(u.exports.memory.buffer)}}function i(t){return t.charCodeAt(0)}t.exports=n,n.supported="undefined"!=typeof WebAssembly},7060:(t,e,r)=>{var n=r(9204),i=r(6053)(),o=64,s=[];t.exports=d;var a=t.exports.BYTES_MIN=16,u=t.exports.BYTES_MAX=64,h=(t.exports.BYTES=32,t.exports.KEYBYTES_MIN=16),l=t.exports.KEYBYTES_MAX=64,f=(t.exports.KEYBYTES=32,t.exports.SALTBYTES=16),c=t.exports.PERSONALBYTES=16;function d(t,e,r,p,m){if(!(this instanceof d))return new d(t,e,r,p,m);if(!i||!i.exports)throw new Error("WASM not loaded. Wait for Blake2b.ready(cb)");t||(t=32),!0!==m&&(n(t>=a,"digestLength must be at least "+a+", was given "+t),n(t<=u,"digestLength must be at most "+u+", was given "+t),null!=e&&n(e.length>=h,"key must be at least "+h+", was given "+e.length),null!=e&&n(e.length<=l,"key must be at least "+l+", was given "+e.length),null!=r&&n(r.length===f,"salt must be exactly "+f+", was given "+r.length),null!=p&&n(p.length===c,"personal must be exactly "+c+", was given "+p.length)),s.length||(s.push(o),o+=216),this.digestLength=t,this.finalized=!1,this.pointer=s.pop(),i.memory.fill(0,0,64),i.memory[0]=this.digestLength,i.memory[1]=e?e.length:0,i.memory[2]=1,i.memory[3]=1,r&&i.memory.set(r,32),p&&i.memory.set(p,48),this.pointer+216>i.memory.length&&i.realloc(this.pointer+216),i.exports.blake2b_init(this.pointer,this.digestLength),e&&(this.update(e),i.memory.fill(0,o,o+e.length),i.memory[this.pointer+200]=128)}function p(){}d.prototype.update=function(t){return n(!1===this.finalized,"Hash instance finalized"),n(t,"input must be TypedArray or Buffer"),o+t.length>i.memory.length&&i.realloc(o+t.length),i.memory.set(t,o),i.exports.blake2b_update(this.pointer,o,o+t.length),this},d.prototype.digest=function(t){if(n(!1===this.finalized,"Hash instance finalized"),this.finalized=!0,s.push(this.pointer),i.exports.blake2b_final(this.pointer),!t||"binary"===t)return i.memory.slice(this.pointer+128,this.pointer+128+this.digestLength);if("hex"===t)return function(t,e,r){for(var n="",i=0;i<r;i++)n+=(o=t[e+i])<16?"0"+o.toString(16):o.toString(16);var o;return n}(i.memory,this.pointer+128,this.digestLength);n(t.length>=this.digestLength,"input must be TypedArray or Buffer");for(var e=0;e<this.digestLength;e++)t[e]=i.memory[this.pointer+128+e];return t},d.prototype.final=d.prototype.digest,d.WASM=i&&i.buffer,d.SUPPORTED="undefined"!=typeof WebAssembly,d.ready=function(t){return t||(t=p),i?new Promise((function(e,r){i.onload((function(n){n?r():e(),t(n)}))})):t(new Error("WebAssembly not supported"))},d.prototype.ready=d.ready},7462:(t,e,r)=>{var n=r(9204),i=r(7060);function o(t,e,r){var n=t[e]+t[r],i=t[e+1]+t[r+1];n>=4294967296&&i++,t[e]=n,t[e+1]=i}function s(t,e,r,n){var i=t[e]+r;r<0&&(i+=4294967296);var o=t[e+1]+n;i>=4294967296&&o++,t[e]=i,t[e+1]=o}function a(t,e){return t[e]^t[e+1]<<8^t[e+2]<<16^t[e+3]<<24}function u(t,e,r,n,i,a){var u=c[i],h=c[i+1],l=c[a],d=c[a+1];o(f,t,e),s(f,t,u,h);var p=f[n]^f[t],m=f[n+1]^f[t+1];f[n]=m,f[n+1]=p,o(f,r,n),p=f[e]^f[r],m=f[e+1]^f[r+1],f[e]=p>>>24^m<<8,f[e+1]=m>>>24^p<<8,o(f,t,e),s(f,t,l,d),p=f[n]^f[t],m=f[n+1]^f[t+1],f[n]=p>>>16^m<<16,f[n+1]=m>>>16^p<<16,o(f,r,n),p=f[e]^f[r],m=f[e+1]^f[r+1],f[e]=m>>>31^p<<1,f[e+1]=p>>>31^m<<1}var h=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),l=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map((function(t){return 2*t}))),f=new Uint32Array(32),c=new Uint32Array(32);function d(t,e){var r=0;for(r=0;r<16;r++)f[r]=t.h[r],f[r+16]=h[r];for(f[24]=f[24]^t.t,f[25]=f[25]^t.t/4294967296,e&&(f[28]=~f[28],f[29]=~f[29]),r=0;r<32;r++)c[r]=a(t.b,4*r);for(r=0;r<12;r++)u(0,8,16,24,l[16*r+0],l[16*r+1]),u(2,10,18,26,l[16*r+2],l[16*r+3]),u(4,12,20,28,l[16*r+4],l[16*r+5]),u(6,14,22,30,l[16*r+6],l[16*r+7]),u(0,10,20,30,l[16*r+8],l[16*r+9]),u(2,12,22,24,l[16*r+10],l[16*r+11]),u(4,14,16,26,l[16*r+12],l[16*r+13]),u(6,8,18,28,l[16*r+14],l[16*r+15]);for(r=0;r<16;r++)t.h[r]=t.h[r]^f[r]^f[r+16]}var p=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function m(t,e,r,n){p.fill(0),this.b=new Uint8Array(128),this.h=new Uint32Array(16),this.t=0,this.c=0,this.outlen=t,p[0]=t,e&&(p[1]=e.length),p[2]=1,p[3]=1,r&&p.set(r,32),n&&p.set(n,48);for(var i=0;i<16;i++)this.h[i]=h[i]^a(p,4*i);e&&(g(this,e),this.c=128)}function g(t,e){for(var r=0;r<e.length;r++)128===t.c&&(t.t+=t.c,d(t,!1),t.c=0),t.b[t.c++]=e[r]}m.prototype.update=function(t){return n(null!=t,"input must be Uint8Array or Buffer"),g(this,t),this},m.prototype.digest=function(t){var e=t&&"binary"!==t&&"hex"!==t?t:new Uint8Array(this.outlen);return n(e.length>=this.outlen,"out must have at least outlen bytes of space"),function(t,e){for(t.t+=t.c;t.c<128;)t.b[t.c++]=0;d(t,!0);for(var r=0;r<t.outlen;r++)e[r]=t.h[r>>2]>>8*(3&r)}(this,e),"hex"===t?function(t){for(var e="",r=0;r<t.length;r++)e+=(n=t[r])<16?"0"+n.toString(16):n.toString(16);var n;return e}(e):e},m.prototype.final=m.prototype.digest,m.ready=function(t){i.ready((function(){t()}))};var y=m;t.exports=function(t,e,r,i,o){return!0!==o&&(n(t>=v,"outlen must be at least "+v+", was given "+t),n(t<=w,"outlen must be at most "+w+", was given "+t),null!=e&&n(e.length>=b,"key must be at least "+b+", was given "+e.length),null!=e&&n(e.length<=A,"key must be at most "+A+", was given "+e.length),null!=r&&n(r.length===M,"salt must be exactly "+M+", was given "+r.length),null!=i&&n(i.length===I,"personal must be exactly "+I+", was given "+i.length)),new y(t,e,r,i)},t.exports.ready=function(t){i.ready((function(){t()}))},t.exports.WASM_SUPPORTED=i.SUPPORTED,t.exports.WASM_LOADED=!1;var v=t.exports.BYTES_MIN=16,w=t.exports.BYTES_MAX=64,b=(t.exports.BYTES=32,t.exports.KEYBYTES_MIN=16),A=t.exports.KEYBYTES_MAX=64,M=(t.exports.KEYBYTES=32,t.exports.SALTBYTES=16),I=t.exports.PERSONALBYTES=16;i.ready((function(e){e||(t.exports.WASM_LOADED=!0,y=i)}))},3550:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function o(t,e,r){if(o.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var s;"object"==typeof t?t.exports=o:e.BN=o,o.BN=o,o.wordSize=26;try{s=r(4293).Buffer}catch(t){}function a(t,e,r){for(var n=0,i=Math.min(t.length,r),o=e;o<i;o++){var s=t.charCodeAt(o)-48;n<<=4,n|=s>=49&&s<=54?s-49+10:s>=17&&s<=22?s-17+10:15&s}return n}function u(t,e,r,n){for(var i=0,o=Math.min(t.length,r),s=e;s<o;s++){var a=t.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}o.isBN=function(t){return t instanceof o||null!==t&&"object"==typeof t&&t.constructor.wordSize===o.wordSize&&Array.isArray(t.words)},o.max=function(t,e){return t.cmp(e)>0?t:e},o.min=function(t,e){return t.cmp(e)<0?t:e},o.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===r)for(i=t.length-1,o=0;i>=0;i-=3)s=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===r)for(i=0,o=0;i<t.length;i+=3)s=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},o.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,o=0;for(r=t.length-6,n=0;r>=e;r-=6)i=a(t,r,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303,(o+=24)>=26&&(o-=26,n++);r+6!==e&&(i=a(t,e,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303),this.strip()},o.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var o=t.length-r,s=o%n,a=Math.min(o,o-s)+r,h=0,l=r;l<a;l+=n)h=u(t,l,l+n,e),this.imuln(i),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==s){var f=1;for(h=u(t,l,t.length,e),l=0;l<s;l++)f*=e;this.imuln(f),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},o.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},o.prototype.clone=function(){var t=new o(null);return this.copy(t),t},o.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],f=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],o=0|e.words[0],s=i*o,a=67108863&s,u=s/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var l=u>>>26,f=67108863&u,c=Math.min(h,e.length-1),d=Math.max(0,h-t.length+1);d<=c;d++){var p=h-d|0;l+=(s=(i=0|t.words[p])*(o=0|e.words[d])+f)/67108864|0,f=67108863&s}r.words[h]=0|f,u=0|l}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}o.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],u=(16777215&(a<<i|o)).toString(16);r=0!=(o=a>>>24-i&16777215)||s!==this.length-1?h[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,s--)}for(0!==o&&(r=o.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var c=l[t],d=f[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(d).toString(t);r=(p=p.idivn(d)).isZero()?m+r:h[c-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(t,e){return n(void 0!==s),this.toArrayLike(s,t,e)},o.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},o.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,"byte array longer than desired length"),n(o>0,"Requested array length <= 0"),this.strip();var s,a,u="le"===e,h=new t(o),l=this.clone();if(u){for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[a]=s;for(;a<o;a++)h[a]=0}else{for(a=0;a<o-i;a++)h[a]=0;for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[o-a-1]=s}return h},Math.clz32?o.prototype._countBits=function(t){return 32-Math.clz32(t)}:o.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},o.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},o.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},o.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},o.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},o.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},o.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},o.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},o.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},o.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},o.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},o.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},o.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},o.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},o.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},o.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},o.prototype.notn=function(t){return this.clone().inotn(t)},o.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},o.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,o=0;o<n.length;o++)e=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&e,i=e>>>26;for(;0!==i&&o<r.length;o++)e=(0|r.words[o])+i,this.words[o]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},o.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var o=0,s=0;s<n.length;s++)o=(e=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&e;for(;0!==o&&s<r.length;s++)o=(e=(0|r.words[s])+o)>>26,this.words[s]=67108863&e;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,e,r){var n,i,o,s=t.words,a=e.words,u=r.words,h=0,l=0|s[0],f=8191&l,c=l>>>13,d=0|s[1],p=8191&d,m=d>>>13,g=0|s[2],y=8191&g,v=g>>>13,w=0|s[3],b=8191&w,A=w>>>13,M=0|s[4],I=8191&M,E=M>>>13,_=0|s[5],S=8191&_,C=_>>>13,x=0|s[6],B=8191&x,k=x>>>13,F=0|s[7],N=8191&F,T=F>>>13,R=0|s[8],P=8191&R,O=R>>>13,U=0|s[9],D=8191&U,q=U>>>13,L=0|a[0],Q=8191&L,j=L>>>13,z=0|a[1],K=8191&z,H=z>>>13,G=0|a[2],V=8191&G,W=G>>>13,J=0|a[3],Z=8191&J,Y=J>>>13,X=0|a[4],$=8191&X,tt=X>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],ot=8191&it,st=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,lt=0|a[8],ft=8191&lt,ct=lt>>>13,dt=0|a[9],pt=8191&dt,mt=dt>>>13;r.negative=t.negative^e.negative,r.length=19;var gt=(h+(n=Math.imul(f,Q))|0)+((8191&(i=(i=Math.imul(f,j))+Math.imul(c,Q)|0))<<13)|0;h=((o=Math.imul(c,j))+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(p,Q),i=(i=Math.imul(p,j))+Math.imul(m,Q)|0,o=Math.imul(m,j);var yt=(h+(n=n+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,H)|0)+Math.imul(c,K)|0))<<13)|0;h=((o=o+Math.imul(c,H)|0)+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(y,Q),i=(i=Math.imul(y,j))+Math.imul(v,Q)|0,o=Math.imul(v,j),n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,H)|0)+Math.imul(m,K)|0,o=o+Math.imul(m,H)|0;var vt=(h+(n=n+Math.imul(f,V)|0)|0)+((8191&(i=(i=i+Math.imul(f,W)|0)+Math.imul(c,V)|0))<<13)|0;h=((o=o+Math.imul(c,W)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(b,Q),i=(i=Math.imul(b,j))+Math.imul(A,Q)|0,o=Math.imul(A,j),n=n+Math.imul(y,K)|0,i=(i=i+Math.imul(y,H)|0)+Math.imul(v,K)|0,o=o+Math.imul(v,H)|0,n=n+Math.imul(p,V)|0,i=(i=i+Math.imul(p,W)|0)+Math.imul(m,V)|0,o=o+Math.imul(m,W)|0;var wt=(h+(n=n+Math.imul(f,Z)|0)|0)+((8191&(i=(i=i+Math.imul(f,Y)|0)+Math.imul(c,Z)|0))<<13)|0;h=((o=o+Math.imul(c,Y)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(I,Q),i=(i=Math.imul(I,j))+Math.imul(E,Q)|0,o=Math.imul(E,j),n=n+Math.imul(b,K)|0,i=(i=i+Math.imul(b,H)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,H)|0,n=n+Math.imul(y,V)|0,i=(i=i+Math.imul(y,W)|0)+Math.imul(v,V)|0,o=o+Math.imul(v,W)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,Y)|0)+Math.imul(m,Z)|0,o=o+Math.imul(m,Y)|0;var bt=(h+(n=n+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,tt)|0)+Math.imul(c,$)|0))<<13)|0;h=((o=o+Math.imul(c,tt)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(S,Q),i=(i=Math.imul(S,j))+Math.imul(C,Q)|0,o=Math.imul(C,j),n=n+Math.imul(I,K)|0,i=(i=i+Math.imul(I,H)|0)+Math.imul(E,K)|0,o=o+Math.imul(E,H)|0,n=n+Math.imul(b,V)|0,i=(i=i+Math.imul(b,W)|0)+Math.imul(A,V)|0,o=o+Math.imul(A,W)|0,n=n+Math.imul(y,Z)|0,i=(i=i+Math.imul(y,Y)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,Y)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,tt)|0;var At=(h+(n=n+Math.imul(f,rt)|0)|0)+((8191&(i=(i=i+Math.imul(f,nt)|0)+Math.imul(c,rt)|0))<<13)|0;h=((o=o+Math.imul(c,nt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(B,Q),i=(i=Math.imul(B,j))+Math.imul(k,Q)|0,o=Math.imul(k,j),n=n+Math.imul(S,K)|0,i=(i=i+Math.imul(S,H)|0)+Math.imul(C,K)|0,o=o+Math.imul(C,H)|0,n=n+Math.imul(I,V)|0,i=(i=i+Math.imul(I,W)|0)+Math.imul(E,V)|0,o=o+Math.imul(E,W)|0,n=n+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,Y)|0)+Math.imul(A,Z)|0,o=o+Math.imul(A,Y)|0,n=n+Math.imul(y,$)|0,i=(i=i+Math.imul(y,tt)|0)+Math.imul(v,$)|0,o=o+Math.imul(v,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,o=o+Math.imul(m,nt)|0;var Mt=(h+(n=n+Math.imul(f,ot)|0)|0)+((8191&(i=(i=i+Math.imul(f,st)|0)+Math.imul(c,ot)|0))<<13)|0;h=((o=o+Math.imul(c,st)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(N,Q),i=(i=Math.imul(N,j))+Math.imul(T,Q)|0,o=Math.imul(T,j),n=n+Math.imul(B,K)|0,i=(i=i+Math.imul(B,H)|0)+Math.imul(k,K)|0,o=o+Math.imul(k,H)|0,n=n+Math.imul(S,V)|0,i=(i=i+Math.imul(S,W)|0)+Math.imul(C,V)|0,o=o+Math.imul(C,W)|0,n=n+Math.imul(I,Z)|0,i=(i=i+Math.imul(I,Y)|0)+Math.imul(E,Z)|0,o=o+Math.imul(E,Y)|0,n=n+Math.imul(b,$)|0,i=(i=i+Math.imul(b,tt)|0)+Math.imul(A,$)|0,o=o+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,i=(i=i+Math.imul(y,nt)|0)+Math.imul(v,rt)|0,o=o+Math.imul(v,nt)|0,n=n+Math.imul(p,ot)|0,i=(i=i+Math.imul(p,st)|0)+Math.imul(m,ot)|0,o=o+Math.imul(m,st)|0;var It=(h+(n=n+Math.imul(f,ut)|0)|0)+((8191&(i=(i=i+Math.imul(f,ht)|0)+Math.imul(c,ut)|0))<<13)|0;h=((o=o+Math.imul(c,ht)|0)+(i>>>13)|0)+(It>>>26)|0,It&=67108863,n=Math.imul(P,Q),i=(i=Math.imul(P,j))+Math.imul(O,Q)|0,o=Math.imul(O,j),n=n+Math.imul(N,K)|0,i=(i=i+Math.imul(N,H)|0)+Math.imul(T,K)|0,o=o+Math.imul(T,H)|0,n=n+Math.imul(B,V)|0,i=(i=i+Math.imul(B,W)|0)+Math.imul(k,V)|0,o=o+Math.imul(k,W)|0,n=n+Math.imul(S,Z)|0,i=(i=i+Math.imul(S,Y)|0)+Math.imul(C,Z)|0,o=o+Math.imul(C,Y)|0,n=n+Math.imul(I,$)|0,i=(i=i+Math.imul(I,tt)|0)+Math.imul(E,$)|0,o=o+Math.imul(E,tt)|0,n=n+Math.imul(b,rt)|0,i=(i=i+Math.imul(b,nt)|0)+Math.imul(A,rt)|0,o=o+Math.imul(A,nt)|0,n=n+Math.imul(y,ot)|0,i=(i=i+Math.imul(y,st)|0)+Math.imul(v,ot)|0,o=o+Math.imul(v,st)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,o=o+Math.imul(m,ht)|0;var Et=(h+(n=n+Math.imul(f,ft)|0)|0)+((8191&(i=(i=i+Math.imul(f,ct)|0)+Math.imul(c,ft)|0))<<13)|0;h=((o=o+Math.imul(c,ct)|0)+(i>>>13)|0)+(Et>>>26)|0,Et&=67108863,n=Math.imul(D,Q),i=(i=Math.imul(D,j))+Math.imul(q,Q)|0,o=Math.imul(q,j),n=n+Math.imul(P,K)|0,i=(i=i+Math.imul(P,H)|0)+Math.imul(O,K)|0,o=o+Math.imul(O,H)|0,n=n+Math.imul(N,V)|0,i=(i=i+Math.imul(N,W)|0)+Math.imul(T,V)|0,o=o+Math.imul(T,W)|0,n=n+Math.imul(B,Z)|0,i=(i=i+Math.imul(B,Y)|0)+Math.imul(k,Z)|0,o=o+Math.imul(k,Y)|0,n=n+Math.imul(S,$)|0,i=(i=i+Math.imul(S,tt)|0)+Math.imul(C,$)|0,o=o+Math.imul(C,tt)|0,n=n+Math.imul(I,rt)|0,i=(i=i+Math.imul(I,nt)|0)+Math.imul(E,rt)|0,o=o+Math.imul(E,nt)|0,n=n+Math.imul(b,ot)|0,i=(i=i+Math.imul(b,st)|0)+Math.imul(A,ot)|0,o=o+Math.imul(A,st)|0,n=n+Math.imul(y,ut)|0,i=(i=i+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,o=o+Math.imul(v,ht)|0,n=n+Math.imul(p,ft)|0,i=(i=i+Math.imul(p,ct)|0)+Math.imul(m,ft)|0,o=o+Math.imul(m,ct)|0;var _t=(h+(n=n+Math.imul(f,pt)|0)|0)+((8191&(i=(i=i+Math.imul(f,mt)|0)+Math.imul(c,pt)|0))<<13)|0;h=((o=o+Math.imul(c,mt)|0)+(i>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(D,K),i=(i=Math.imul(D,H))+Math.imul(q,K)|0,o=Math.imul(q,H),n=n+Math.imul(P,V)|0,i=(i=i+Math.imul(P,W)|0)+Math.imul(O,V)|0,o=o+Math.imul(O,W)|0,n=n+Math.imul(N,Z)|0,i=(i=i+Math.imul(N,Y)|0)+Math.imul(T,Z)|0,o=o+Math.imul(T,Y)|0,n=n+Math.imul(B,$)|0,i=(i=i+Math.imul(B,tt)|0)+Math.imul(k,$)|0,o=o+Math.imul(k,tt)|0,n=n+Math.imul(S,rt)|0,i=(i=i+Math.imul(S,nt)|0)+Math.imul(C,rt)|0,o=o+Math.imul(C,nt)|0,n=n+Math.imul(I,ot)|0,i=(i=i+Math.imul(I,st)|0)+Math.imul(E,ot)|0,o=o+Math.imul(E,st)|0,n=n+Math.imul(b,ut)|0,i=(i=i+Math.imul(b,ht)|0)+Math.imul(A,ut)|0,o=o+Math.imul(A,ht)|0,n=n+Math.imul(y,ft)|0,i=(i=i+Math.imul(y,ct)|0)+Math.imul(v,ft)|0,o=o+Math.imul(v,ct)|0;var St=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((o=o+Math.imul(m,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,W))+Math.imul(q,V)|0,o=Math.imul(q,W),n=n+Math.imul(P,Z)|0,i=(i=i+Math.imul(P,Y)|0)+Math.imul(O,Z)|0,o=o+Math.imul(O,Y)|0,n=n+Math.imul(N,$)|0,i=(i=i+Math.imul(N,tt)|0)+Math.imul(T,$)|0,o=o+Math.imul(T,tt)|0,n=n+Math.imul(B,rt)|0,i=(i=i+Math.imul(B,nt)|0)+Math.imul(k,rt)|0,o=o+Math.imul(k,nt)|0,n=n+Math.imul(S,ot)|0,i=(i=i+Math.imul(S,st)|0)+Math.imul(C,ot)|0,o=o+Math.imul(C,st)|0,n=n+Math.imul(I,ut)|0,i=(i=i+Math.imul(I,ht)|0)+Math.imul(E,ut)|0,o=o+Math.imul(E,ht)|0,n=n+Math.imul(b,ft)|0,i=(i=i+Math.imul(b,ct)|0)+Math.imul(A,ft)|0,o=o+Math.imul(A,ct)|0;var Ct=(h+(n=n+Math.imul(y,pt)|0)|0)+((8191&(i=(i=i+Math.imul(y,mt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((o=o+Math.imul(v,mt)|0)+(i>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,n=Math.imul(D,Z),i=(i=Math.imul(D,Y))+Math.imul(q,Z)|0,o=Math.imul(q,Y),n=n+Math.imul(P,$)|0,i=(i=i+Math.imul(P,tt)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,tt)|0,n=n+Math.imul(N,rt)|0,i=(i=i+Math.imul(N,nt)|0)+Math.imul(T,rt)|0,o=o+Math.imul(T,nt)|0,n=n+Math.imul(B,ot)|0,i=(i=i+Math.imul(B,st)|0)+Math.imul(k,ot)|0,o=o+Math.imul(k,st)|0,n=n+Math.imul(S,ut)|0,i=(i=i+Math.imul(S,ht)|0)+Math.imul(C,ut)|0,o=o+Math.imul(C,ht)|0,n=n+Math.imul(I,ft)|0,i=(i=i+Math.imul(I,ct)|0)+Math.imul(E,ft)|0,o=o+Math.imul(E,ct)|0;var xt=(h+(n=n+Math.imul(b,pt)|0)|0)+((8191&(i=(i=i+Math.imul(b,mt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((o=o+Math.imul(A,mt)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(D,$),i=(i=Math.imul(D,tt))+Math.imul(q,$)|0,o=Math.imul(q,tt),n=n+Math.imul(P,rt)|0,i=(i=i+Math.imul(P,nt)|0)+Math.imul(O,rt)|0,o=o+Math.imul(O,nt)|0,n=n+Math.imul(N,ot)|0,i=(i=i+Math.imul(N,st)|0)+Math.imul(T,ot)|0,o=o+Math.imul(T,st)|0,n=n+Math.imul(B,ut)|0,i=(i=i+Math.imul(B,ht)|0)+Math.imul(k,ut)|0,o=o+Math.imul(k,ht)|0,n=n+Math.imul(S,ft)|0,i=(i=i+Math.imul(S,ct)|0)+Math.imul(C,ft)|0,o=o+Math.imul(C,ct)|0;var Bt=(h+(n=n+Math.imul(I,pt)|0)|0)+((8191&(i=(i=i+Math.imul(I,mt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((o=o+Math.imul(E,mt)|0)+(i>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(D,rt),i=(i=Math.imul(D,nt))+Math.imul(q,rt)|0,o=Math.imul(q,nt),n=n+Math.imul(P,ot)|0,i=(i=i+Math.imul(P,st)|0)+Math.imul(O,ot)|0,o=o+Math.imul(O,st)|0,n=n+Math.imul(N,ut)|0,i=(i=i+Math.imul(N,ht)|0)+Math.imul(T,ut)|0,o=o+Math.imul(T,ht)|0,n=n+Math.imul(B,ft)|0,i=(i=i+Math.imul(B,ct)|0)+Math.imul(k,ft)|0,o=o+Math.imul(k,ct)|0;var kt=(h+(n=n+Math.imul(S,pt)|0)|0)+((8191&(i=(i=i+Math.imul(S,mt)|0)+Math.imul(C,pt)|0))<<13)|0;h=((o=o+Math.imul(C,mt)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(D,ot),i=(i=Math.imul(D,st))+Math.imul(q,ot)|0,o=Math.imul(q,st),n=n+Math.imul(P,ut)|0,i=(i=i+Math.imul(P,ht)|0)+Math.imul(O,ut)|0,o=o+Math.imul(O,ht)|0,n=n+Math.imul(N,ft)|0,i=(i=i+Math.imul(N,ct)|0)+Math.imul(T,ft)|0,o=o+Math.imul(T,ct)|0;var Ft=(h+(n=n+Math.imul(B,pt)|0)|0)+((8191&(i=(i=i+Math.imul(B,mt)|0)+Math.imul(k,pt)|0))<<13)|0;h=((o=o+Math.imul(k,mt)|0)+(i>>>13)|0)+(Ft>>>26)|0,Ft&=67108863,n=Math.imul(D,ut),i=(i=Math.imul(D,ht))+Math.imul(q,ut)|0,o=Math.imul(q,ht),n=n+Math.imul(P,ft)|0,i=(i=i+Math.imul(P,ct)|0)+Math.imul(O,ft)|0,o=o+Math.imul(O,ct)|0;var Nt=(h+(n=n+Math.imul(N,pt)|0)|0)+((8191&(i=(i=i+Math.imul(N,mt)|0)+Math.imul(T,pt)|0))<<13)|0;h=((o=o+Math.imul(T,mt)|0)+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(D,ft),i=(i=Math.imul(D,ct))+Math.imul(q,ft)|0,o=Math.imul(q,ct);var Tt=(h+(n=n+Math.imul(P,pt)|0)|0)+((8191&(i=(i=i+Math.imul(P,mt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((o=o+Math.imul(O,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Rt=(h+(n=Math.imul(D,pt))|0)+((8191&(i=(i=Math.imul(D,mt))+Math.imul(q,pt)|0))<<13)|0;return h=((o=Math.imul(q,mt))+(i>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,u[0]=gt,u[1]=yt,u[2]=vt,u[3]=wt,u[4]=bt,u[5]=At,u[6]=Mt,u[7]=It,u[8]=Et,u[9]=_t,u[10]=St,u[11]=Ct,u[12]=xt,u[13]=Bt,u[14]=kt,u[15]=Ft,u[16]=Nt,u[17]=Tt,u[18]=Rt,0!==h&&(u[19]=h,r.length++),r};function p(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(d=c),o.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,e):r<63?c(this,t,e):r<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,u=Math.min(o,e.length-1),h=Math.max(0,o-t.length+1);h<=u;h++){var l=o-h,f=(0|t.words[l])*(0|e.words[h]),c=67108863&f;a=67108863&(c=c+a|0),i+=(s=(s=s+(f/67108864|0)|0)+(c>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,t,e):p(this,t,e)},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=o.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},m.prototype.permute=function(t,e,r,n,i,o){for(var s=0;s<o;s++)n[s]=e[t[s]],i[s]=r[t[s]]},m.prototype.transform=function(t,e,r,n,i,o){this.permute(o,t,e,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),l=0;l<i;l+=a)for(var f=u,c=h,d=0;d<s;d++){var p=r[l+d],m=n[l+d],g=r[l+d+s],y=n[l+d+s],v=f*g-c*y;y=f*y+c*g,g=v,r[l+d]=p+g,n[l+d]=m+y,r[l+d+s]=p-g,n[l+d+s]=m-y,d!==a&&(v=u*f-h*c,c=u*c+h*f,f=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},m.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},m.prototype.convert13b=function(t,e,r,i){for(var o=0,s=0;s<e;s++)o+=0|t[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*e;s<i;++s)r[s]=0;n(0===o),n(0==(-8192&o))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),l=new Array(n),f=new Array(n),c=r.words;c.length=n,this.convert13b(t.words,t.length,s,n),this.convert13b(e.words,e.length,h,n),this.transform(s,o,a,u,n,i),this.transform(h,o,l,f,n,i);for(var d=0;d<n;d++){var p=a[d]*l[d]-u[d]*f[d];u[d]=a[d]*f[d]+u[d]*l[d],a[d]=p}return this.conjugate(a,u,n),this.transform(a,u,c,o,n,i),this.conjugate(c,o,n),this.normalize13b(c,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},o.prototype.mul=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},o.prototype.mulf=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),p(this,t,e)},o.prototype.imul=function(t){return this.clone().mulTo(t,this)},o.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,o=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=o>>>26,this.words[r]=67108863&o}return 0!==e&&(this.words[r]=e,this.length++),this},o.prototype.muln=function(t){return this.clone().imuln(t)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new o(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(e=0;e<this.length;e++){var a=this.words[e]&o,u=(0|this.words[e])-a<<r;this.words[e]=u|s,s=a>>>26-r}s&&(this.words[e]=s,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},o.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},o.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var o=t%26,s=Math.min((t-o)/26,this.length),a=67108863^67108863>>>o<<o,u=r;if(i-=s,i=Math.max(0,i),u){for(var h=0;h<s;h++)u.words[h]=this.words[h];u.length=s}if(0===s);else if(this.length>s)for(this.length-=s,h=0;h<this.length;h++)this.words[h]=this.words[h+s];else this.words[0]=0,this.length=1;var l=0;for(h=this.length-1;h>=0&&(0!==l||h>=i);h--){var f=0|this.words[h];this.words[h]=l<<26-o|f>>>o,l=f&a}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},o.prototype.shln=function(t){return this.clone().ishln(t)},o.prototype.ushln=function(t){return this.clone().iushln(t)},o.prototype.shrn=function(t){return this.clone().ishrn(t)},o.prototype.ushrn=function(t){return this.clone().iushrn(t)},o.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r||!(this.words[r]&i))},o.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},o.prototype.maskn=function(t){return this.clone().imaskn(t)},o.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},o.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},o.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},o.prototype.addn=function(t){return this.clone().iaddn(t)},o.prototype.subn=function(t){return this.clone().isubn(t)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(t,e,r){var i,o,s=t.length+r;this._expand(s);var a=0;for(i=0;i<t.length;i++){o=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((o-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,s=0|i.words[i.length-1];0!=(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new o(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var l=n.clone()._ishlnsubmul(i,1,u);0===l.negative&&(n=l,a&&(a.words[u]=1));for(var f=u-1;f>=0;f--){var c=67108864*(0|n.words[i.length+f])+(0|n.words[i.length+f-1]);for(c=Math.min(c/s|0,67108863),n._ishlnsubmul(i,c,f);0!==n.negative;)c--,n.negative=0,n._ishlnsubmul(i,1,f),n.isZero()||(n.negative^=1);a&&(a.words[f]=c)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(t)),{div:i,mod:s}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(t)),{div:a.div,mod:s}):t.length>this.length||this.cmp(t)<0?{div:new o(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new o(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new o(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,s,a},o.prototype.div=function(t){return this.divmod(t,"div",!1).div},o.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},o.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},o.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},o.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},o.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},o.prototype.divn=function(t){return this.clone().idivn(t)},o.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new o(1),s=new o(0),a=new o(0),u=new o(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var l=r.clone(),f=e.clone();!e.isZero();){for(var c=0,d=1;0==(e.words[0]&d)&&c<26;++c,d<<=1);if(c>0)for(e.iushrn(c);c-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(l),s.isub(f)),i.iushrn(1),s.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(l),u.isub(f)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),s.isub(u)):(r.isub(e),a.isub(i),u.isub(s))}return{a,b:u,gcd:r.iushln(h)}},o.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,s=new o(1),a=new o(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,l=1;0==(e.words[0]&l)&&h<26;++h,l<<=1);if(h>0)for(e.iushrn(h);h-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);for(var f=0,c=1;0==(r.words[0]&c)&&f<26;++f,c<<=1);if(f>0)for(r.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),s.isub(a)):(r.isub(e),a.isub(s))}return(i=0===e.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(t),i},o.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var o=e;e=r,r=o}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},o.prototype.invm=function(t){return this.egcd(t).a.umod(t)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(t){return this.words[0]&t},o.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},o.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},o.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},o.prototype.gtn=function(t){return 1===this.cmpn(t)},o.prototype.gt=function(t){return 1===this.cmp(t)},o.prototype.gten=function(t){return this.cmpn(t)>=0},o.prototype.gte=function(t){return this.cmp(t)>=0},o.prototype.ltn=function(t){return-1===this.cmpn(t)},o.prototype.lt=function(t){return-1===this.cmp(t)},o.prototype.lten=function(t){return this.cmpn(t)<=0},o.prototype.lte=function(t){return this.cmp(t)<=0},o.prototype.eqn=function(t){return 0===this.cmpn(t)},o.prototype.eq=function(t){return 0===this.cmp(t)},o.red=function(t){return new M(t)},o.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},o.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(t){return this.red=t,this},o.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},o.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},o.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},o.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},o.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},o.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},o.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},o.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},o.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var g={k256:null,p224:null,p192:null,p25519:null};function y(t,e){this.name=t,this.p=new o(e,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function A(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function M(t){if("string"==typeof t){var e=o._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function I(t){M.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new o(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},y.prototype.split=function(t,e){t.iushrn(this.n,0,e)},y.prototype.imulK=function(t){return t.imul(this.k)},i(v,y),v.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var o=t.words[9];for(e.words[e.length++]=o&r,i=10;i<t.length;i++){var s=0|t.words[i];t.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,t.words[i-10]=o,0===o&&t.length>10?t.length-=10:t.length-=9},v.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,y),i(b,y),i(A,y),A.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},o._prime=function(t){if(g[t])return g[t];var e;if("k256"===t)e=new v;else if("p224"===t)e=new w;else if("p192"===t)e=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new A}return g[t]=e,e},M.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},M.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},M.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},M.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},M.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},M.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},M.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},M.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},M.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},M.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},M.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},M.prototype.isqr=function(t){return this.imul(t,t.clone())},M.prototype.sqr=function(t){return this.mul(t,t)},M.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new o(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new o(2*l*l).toRed(this);0!==this.pow(l,h).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,i),c=this.pow(t,i.addn(1).iushrn(1)),d=this.pow(t,i),p=s;0!==d.cmp(a);){for(var m=d,g=0;0!==m.cmp(a);g++)m=m.redSqr();n(g<p);var y=this.pow(f,new o(1).iushln(p-g-1));c=c.redMul(y),f=y.redSqr(),d=d.redMul(f),p=g}return c},M.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},M.prototype.pow=function(t,e){if(e.isZero())return new o(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],s=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],l=u-1;l>=0;l--){var f=h>>l&1;i!==r[0]&&(i=this.sqr(i)),0!==f||0!==s?(s<<=1,s|=f,(4==++a||0===n&&0===l)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0}u=26}return i},M.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},M.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},o.mont=function(t){return new I(t)},i(I,M),I.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},I.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},I.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},I.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new o(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},I.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},8935:(t,e,r)=>{r(9602),e.eddsa=r(8300),r(65),r(882),e.babyJub=r(7008),r(2256),r(9602),r(9609),e.poseidon=r(4194)},1029:(t,e,r)=>{e.Scalar=r(4115),r(9115),e.F1Field=r(3139),r(3819),r(6670),e.k=e.F1Field,r(5792),r(8360),e.utils=r(8856)},8360:(t,e,r)=>{const n=r(4115),i=r(3139),o=r(3819),s=r(6670),a=r(5792);t.exports=new class{constructor(){this.q=n.fromString("21888242871839275222246405745257275088696311157297823662689037894645226208583"),this.r=n.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617"),this.F1=new i(this.q),this.nonResidueF2=this.F1.e("21888242871839275222246405745257275088696311157297823662689037894645226208582"),this.F2=new o(this.F1,this.nonResidueF2),this.g1=[this.F1.e(1),this.F1.e(2),this.F1.e(1)],this.g2=[[this.F1.e("10857046999023057135944570762232829481370756359578518086990519993285655852781"),this.F1.e("11559732032986387107991004021392285783925812861821192530917403151452391805634")],[this.F1.e("8495653923123431417604973247489272438418190587263600148770280649306958101930"),this.F1.e("4082367875863433681332203403145435568316851327593401208105741076214120093531")],[this.F1.e("1"),this.F1.e("0")]],this.G1=new a(this.F1,this.g1),this.G2=new a(this.F2,this.g2),this.nonResidueF6=[this.F1.e("9"),this.F1.e("1")],this.F6=new s(this.F2,this.nonResidueF6),this.F12=new o(this.F6,this.nonResidueF6),this.Fr=new i(this.r);const t=this;this.F12._mulByNonResidue=function(e){return[t.F2.mul(this.nonResidue,e[2]),e[0],e[1]]},this._preparePairing()}_preparePairing(){this.loopCount=n.fromString("29793968203157093288"),n.isNegative(this.loopCount)?(this.loopCount=this.loopCount.neg(),this.loopCountNeg=!0):this.loopCountNeg=!1;let t=this.loopCount;for(this.loop_count_bits=[];!n.isZero(t);)this.loop_count_bits.push(n.isOdd(t)),t=n.shiftRight(t,1);this.two_inv=this.F1.inv(this.F1.e(2)),this.coef_b=this.F1.e(3),this.twist=[this.F1.e(9),this.F1.e(1)],this.twist_coeff_b=this.F2.mulScalar(this.F2.inv(this.twist),this.coef_b),this.frobenius_coeffs_c1_1=this.F1.e("21888242871839275222246405745257275088696311157297823662689037894645226208582"),this.twist_mul_by_q_X=[this.F1.e("21575463638280843010398324269430826099269044274347216827212613867836435027261"),this.F1.e("10307601595873709700152284273816112264069230130616436755625194854815875713954")],this.twist_mul_by_q_Y=[this.F1.e("2821565182194536844548159561693502659359617185244120367078079554186484126554"),this.F1.e("3505843767911556378687030309984248845540243509899259641013678093033130930403")],this.final_exponent=n.fromString("552484233613224096312617126783173147097382103762957654188882734314196910839907541213974502761540629817009608548654680343627701153829446747810907373256841551006201639677726139946029199968412598804882391702273019083653272047566316584365559776493027495458238373902875937659943504873220554161550525926302303331747463515644711876653177129578303191095900909191624817826566688241804408081892785725967931714097716709526092261278071952560171111444072049229123565057483750161460024353346284167282452756217662335528813519139808291170539072125381230815729071544861602750936964829313608137325426383735122175229541155376346436093930287402089517426973178917569713384748081827255472576937471496195752727188261435633271238710131736096299798168852925540549342330775279877006784354801422249722573783561685179618816480037695005515426162362431072245638324744480")}pairing(t,e){const r=this.precomputeG1(t),n=this.precomputeG2(e),i=this.millerLoop(r,n);return this.finalExponentiation(i)}precomputeG1(t){const e=this.G1.affine(t),r={};return r.PX=e[0],r.PY=e[1],r}precomputeG2(t){const e=this.G2.affine(t),r={QX:e[0],QY:e[1],coeffs:[]},n={X:e[0],Y:e[1],Z:this.F2.one};let i;for(let t=this.loop_count_bits.length-2;t>=0;--t){const o=this.loop_count_bits[t];i=this._doubleStep(n),r.coeffs.push(i),o&&(i=this._addStep(e,n),r.coeffs.push(i))}const o=this.G2.affine(this._g2MulByQ(e));if(!this.F2.eq(o[2],this.F2.one))throw new Error("Expected values are not equal");const s=this.G2.affine(this._g2MulByQ(o));if(!this.F2.eq(s[2],this.F2.one))throw new Error("Expected values are not equal");return this.loopCountNeg&&(n.Y=this.F2.neg(n.Y)),s[1]=this.F2.neg(s[1]),i=this._addStep(o,n),r.coeffs.push(i),i=this._addStep(s,n),r.coeffs.push(i),r}millerLoop(t,e){let r,n=this.F12.one,i=0;for(let o=this.loop_count_bits.length-2;o>=0;--o){const s=this.loop_count_bits[o];r=e.coeffs[i++],n=this.F12.square(n),n=this._mul_by_024(n,r.ell_0,this.F2.mulScalar(r.ell_VW,t.PY),this.F2.mulScalar(r.ell_VV,t.PX)),s&&(r=e.coeffs[i++],n=this._mul_by_024(n,r.ell_0,this.F2.mulScalar(r.ell_VW,t.PY),this.F2.mulScalar(r.ell_VV,t.PX)))}return this.loopCountNeg&&(n=this.F12.inverse(n)),r=e.coeffs[i++],n=this._mul_by_024(n,r.ell_0,this.F2.mulScalar(r.ell_VW,t.PY),this.F2.mulScalar(r.ell_VV,t.PX)),r=e.coeffs[i++],n=this._mul_by_024(n,r.ell_0,this.F2.mulScalar(r.ell_VW,t.PY),this.F2.mulScalar(r.ell_VV,t.PX)),n}finalExponentiation(t){return this.F12.exp(t,this.final_exponent)}_doubleStep(t){const e=t.X,r=t.Y,n=t.Z,i=this.F2.mulScalar(this.F2.mul(e,r),this.two_inv),o=this.F2.square(r),s=this.F2.square(n),a=this.F2.add(s,this.F2.add(s,s)),u=this.F2.mul(this.twist_coeff_b,a),h=this.F2.add(u,this.F2.add(u,u)),l=this.F2.mulScalar(this.F2.add(o,h),this.two_inv),f=this.F2.sub(this.F2.square(this.F2.add(r,n)),this.F2.add(o,s)),c=this.F2.sub(u,o),d=this.F2.square(e),p=this.F2.square(u);return t.X=this.F2.mul(i,this.F2.sub(o,h)),t.Y=this.F2.sub(this.F2.sub(this.F2.square(l),p),this.F2.add(p,p)),t.Z=this.F2.mul(o,f),{ell_0:this.F2.mul(c,this.twist),ell_VW:this.F2.neg(f),ell_VV:this.F2.add(d,this.F2.add(d,d))}}_addStep(t,e){const r=e.X,n=e.Y,i=e.Z,o=t[0],s=t[1],a=this.F2.sub(r,this.F2.mul(o,i)),u=this.F2.sub(n,this.F2.mul(s,i)),h=this.F2.square(a),l=this.F2.square(u),f=this.F2.mul(a,h),c=this.F2.mul(r,h),d=this.F2.sub(this.F2.add(f,this.F2.mul(i,l)),this.F2.add(c,c));return e.X=this.F2.mul(a,d),e.Y=this.F2.sub(this.F2.mul(u,this.F2.sub(c,d)),this.F2.mul(f,n)),e.Z=this.F2.mul(i,f),{ell_0:this.F2.mul(this.twist,this.F2.sub(this.F2.mul(u,o),this.F2.mul(a,s))),ell_VV:this.F2.neg(u),ell_VW:a}}_mul_by_024(t,e,r,n){let i=t[0][0],o=t[0][1],s=t[0][2],a=t[1][0],u=t[1][1],h=t[1][2];const l=e,f=n,c=r,d=this.F2.mul(i,l),p=this.F2.mul(s,f),m=this.F2.mul(u,c),g=this.F2.add(i,u);let y=this.F2.add(i,s);const v=this.F2.add(this.F2.add(o,a),h);let w=this.F2.mul(o,f),b=this.F2.add(w,m),A=this.F2.add(this.F2.mul(this.nonResidueF6,b),d);i=A,b=this.F2.mul(h,c),w=this.F2.add(w,b),b=this.F2.add(b,p),A=this.F2.mul(this.nonResidueF6,b),b=this.F2.mul(o,l),w=this.F2.add(w,b),A=this.F2.add(A,b),o=A;let M=this.F2.add(l,f);return b=this.F2.sub(this.F2.mul(y,M),this.F2.add(d,p)),A=this.F2.mul(a,c),w=this.F2.add(w,A),M=this.F2.add(s,u),s=this.F2.add(b,A),y=this.F2.add(f,c),b=this.F2.sub(this.F2.mul(M,y),this.F2.add(p,m)),A=this.F2.mul(this.nonResidueF6,b),b=this.F2.mul(a,l),w=this.F2.add(w,b),A=this.F2.add(A,b),a=A,b=this.F2.mul(h,f),w=this.F2.add(w,b),A=this.F2.mul(this.nonResidueF6,b),M=this.F2.add(l,c),b=this.F2.sub(this.F2.mul(g,M),this.F2.add(d,m)),A=this.F2.add(A,b),u=A,M=this.F2.add(this.F2.add(l,f),c),b=this.F2.sub(this.F2.mul(v,M),w),h=b,[[i,o,s],[a,u,h]]}_g2MulByQ(t){const e=[t[0][0],this.F1.mul(t[0][1],this.frobenius_coeffs_c1_1)],r=[t[1][0],this.F1.mul(t[1][1],this.frobenius_coeffs_c1_1)],n=[t[2][0],this.F1.mul(t[2][1],this.frobenius_coeffs_c1_1)];return[this.F2.mul(this.twist_mul_by_q_X,e),this.F2.mul(this.twist_mul_by_q_Y,r),n]}}},5792:(t,e,r)=>{const n=r(8103);t.exports=class{constructor(t,e){this.F=t,this.g=e,2==this.g.length&&(this.g[2]=this.F.one),this.zero=[this.F.zero,this.F.one,this.F.zero]}add(t,e){const r=this.F;if(this.eq(t,this.zero))return e;if(this.eq(e,this.zero))return t;const n=new Array(3),i=r.square(t[2]),o=r.square(e[2]),s=r.mul(t[0],o),a=r.mul(e[0],i),u=r.mul(t[2],i),h=r.mul(e[2],o),l=r.mul(t[1],h),f=r.mul(e[1],u);if(r.eq(s,a)&&r.eq(l,f))return this.double(t);const c=r.sub(a,s),d=r.sub(f,l),p=r.square(r.add(c,c)),m=r.mul(c,p),g=r.add(d,d),y=r.mul(s,p);n[0]=r.sub(r.sub(r.square(g),m),r.add(y,y));const v=r.mul(l,m);return n[1]=r.sub(r.mul(g,r.sub(y,n[0])),r.add(v,v)),n[2]=r.mul(c,r.sub(r.square(r.add(t[2],e[2])),r.add(i,o))),n}neg(t){return[t[0],this.F.neg(t[1]),t[2]]}sub(t,e){return this.add(t,this.neg(e))}double(t){const e=this.F,r=new Array(3);if(this.eq(t,this.zero))return t;const n=e.square(t[0]),i=e.square(t[1]),o=e.square(i);let s=e.sub(e.square(e.add(t[0],i)),e.add(n,o));s=e.add(s,s);const a=e.add(e.add(n,n),n),u=e.square(a);r[0]=e.sub(u,e.add(s,s));let h=e.add(o,o);h=e.add(h,h),h=e.add(h,h),r[1]=e.sub(e.mul(a,e.sub(s,r[0])),h);const l=e.mul(t[1],t[2]);return r[2]=e.add(l,l),r}mulScalar(t,e){return n.mulScalar(this,t,e)}affine(t){const e=this.F;if(this.eq(t,this.zero))return this.zero;{const r=e.inv(t[2]),n=e.square(r),i=e.mul(n,r),o=new Array(3);return o[0]=e.mul(t[0],n),o[1]=e.mul(t[1],i),o[2]=e.one,o}}multiAffine(t){const e=Object.keys(t),r=this.F,n=new Array(e.length+1);n[0]=r.one;for(let i=0;i<e.length;i++)r.eq(t[e[i]][2],r.zero)?n[i+1]=n[i]:n[i+1]=r.mul(n[i],t[e[i]][2]);n[e.length]=r.inv(n[e.length]);for(let i=e.length-1;i>=0;i--)if(r.eq(t[e[i]][2],r.zero))n[i]=n[i+1],t[e[i]]=this.zero;else{const o=r.mul(n[i],n[i+1]);n[i]=r.mul(t[e[i]][2],n[i+1]);const s=r.square(o),a=r.mul(s,o);t[e[i]][0]=r.mul(t[e[i]][0],s),t[e[i]][1]=r.mul(t[e[i]][1],a),t[e[i]][2]=r.one}}eq(t,e){const r=this.F;if(this.F.eq(t[2],this.F.zero))return this.F.eq(e[2],this.F.zero);if(this.F.eq(e[2],this.F.zero))return!1;const n=r.square(t[2]),i=r.square(e[2]),o=r.mul(t[0],i),s=r.mul(e[0],n),a=r.mul(t[2],n),u=r.mul(e[2],i),h=r.mul(t[1],u),l=r.mul(e[1],a);return r.eq(o,s)&&r.eq(h,l)}toString(t){const e=this.affine(t);return`[ ${this.F.toString(e[0])} , ${this.F.toString(e[1])} ]`}}},3139:(t,e,r)=>{const n="function"==typeof BigInt;t.exports=r(n?1817:4229)},4229:(t,e,r)=>{const n=r(4736),i=r(2357);function o(){if("undefined"!=typeof window){if(void 0!==window.crypto){let t=new Uint8Array(1);return window.crypto.getRandomValues(t),t[0]}return Math.floor(256*Math.random())}return r(6417).randomBytes(1)[0]}t.exports=class{constructor(t){this.one=n.one,this.zero=n.zero,this.p=n(t),this.minusone=this.p.minus(n.one),this.two=n(2),this.half=this.p.shiftRight(1),this.bitLength=this.p.bitLength(),this.mask=n.one.shiftLeft(this.bitLength).minus(n.one),this.n64=Math.floor((this.bitLength-1)/64)+1,this.R=n.one.shiftLeft(64*this.n64);const e=this.minusone.shiftRight(this.one);this.nqr=this.two;let r=this.pow(this.nqr,e);for(;!r.equals(this.minusone);)this.nqr=this.nqr.add(this.one),r=this.pow(this.nqr,e);for(this.s=this.zero,this.t=this.minusone;!this.t.isOdd();)this.s=this.s.add(this.one),this.t=this.t.shiftRight(this.one);this.nqr_to_t=this.pow(this.nqr,this.t)}e(t,e){const r=n(t,e);return this.normalize(r)}add(t,e){let r=t.add(e);return r.geq(this.p)&&(r=r.minus(this.p)),r}sub(t,e){return t.geq(e)?t.minus(e):this.p.minus(e.minus(t))}neg(t){return t.isZero()?t:this.p.minus(t)}mul(t,e){return t.times(e).mod(this.p)}mulScalar(t,e){return t.times(n(e)).mod(this.p)}square(t){return t.square().mod(this.p)}eq(t,e){return t.eq(e)}neq(t,e){return t.neq(e)}lt(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.lt(n)}gt(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.gt(n)}leq(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.leq(n)}geq(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.geq(n)}div(t,e){return i(!e.isZero(),"Division by zero"),t.times(e.modInv(this.p)).mod(this.p)}idiv(t,e){return i(!e.isZero(),"Division by zero"),t.divide(e)}inv(t){return i(!t.isZero(),"Division by zero"),t.modInv(this.p)}mod(t,e){return t.mod(e)}pow(t,e){return t.modPow(e,this.p)}band(t,e){return t.and(e).and(this.mask).mod(this.p)}bor(t,e){return t.or(e).and(this.mask).mod(this.p)}bxor(t,e){return t.xor(e).and(this.mask).mod(this.p)}bnot(t){return t.xor(this.mask).mod(this.p)}shl(t,e){if(e.lt(this.bitLength))return t.shiftLeft(e).and(this.mask).mod(this.p);{const r=this.p.minus(e);return r.lt(this.bitLength)?this.shr(t,r):n.zero}}shr(t,e){if(e.lt(this.bitLength))return t.shiftRight(e);{const r=this.p.minus(e);return r.lt(this.bitLength)?this.shl(t,r):n.zero}}land(t,e){return t.isZero()||e.isZero()?n.zero:n.one}lor(t,e){return t.isZero()&&e.isZero()?n.zero:n.one}lnot(t){return t.isZero()?n.one:n.zero}sqrt(t){if(t.equals(this.zero))return this.zero;if(!this.pow(t,this.minusone.shiftRight(this.one)).equals(this.one))return null;let e=parseInt(this.s),r=this.nqr_to_t,n=this.pow(t,this.t),i=this.pow(t,this.add(this.t,this.one).shiftRight(this.one));for(;!n.equals(this.one);){let t=this.square(n),o=1;for(;!t.equals(this.one);)o++,t=this.square(t);let s=r;for(let t=0;t<e-o-1;t++)s=this.square(s);e=o,r=this.square(s),n=this.mul(n,r),i=this.mul(i,s)}return i.greater(this.p.shiftRight(this.one))&&(i=this.neg(i)),i}normalize(t){return(t=n(t)).isNegative()?this.p.minus(t.abs().mod(this.p)):t.mod(this.p)}random(){let t=n(0),e=n(this.p.square());for(;!e.isZero();)t=t.shiftLeft(8).add(n(o())),e=e.shiftRight(8);return t.mod(this.p)}toString(t,e){let r;return r=t.lesserOrEquals(this.p.shiftRight(n(1)))?t.toString(e):"-"+this.p.minus(t).toString(e),r}isZero(t){return t.isZero()}}},1817:(t,e,r)=>{const n=r(2357),i=r(4115),o=r(8103);function s(){if("undefined"!=typeof window){if(void 0!==window.crypto){let t=new Uint8Array(1);return window.crypto.getRandomValues(t),t[0]}return Math.floor(256*Math.random())}return r(6417).randomBytes(1)[0]}t.exports=class{constructor(t){this.one=1n,this.zero=0n,this.p=BigInt(t),this.minusone=this.p-1n,this.two=2n,this.half=this.p>>1n,this.bitLength=i.bitLength(this.p),this.mask=(1n<<BigInt(this.bitLength))-1n,this.n64=Math.floor((this.bitLength-1)/64)+1,this.R=this.e(1n<<BigInt(64*this.n64));const e=this.minusone>>1n;this.nqr=this.two;let r=this.pow(this.nqr,e);for(;!this.eq(r,this.minusone);)this.nqr=this.nqr+1n,r=this.pow(this.nqr,e);for(this.s=0,this.t=this.minusone;0n==(1n&this.t);)this.s=this.s+1,this.t=this.t>>1n;this.nqr_to_t=this.pow(this.nqr,this.t)}e(t,e){let r;if(e?16==e&&(r=BigInt("0x"+t)):r=BigInt(t),r<0){let t=-r;return t>=this.p&&(t%=this.p),this.p-t}return r>=this.p?r%this.p:r}add(t,e){const r=t+e;return r>=this.p?r-this.p:r}sub(t,e){return t>=e?t-e:this.p-e+t}neg(t){return t?this.p-t:t}mul(t,e){return t*e%this.p}mulScalar(t,e){return t*this.e(e)%this.p}square(t){return t*t%this.p}eq(t,e){return t==e}neq(t,e){return t!=e}lt(t,e){return(t>this.half?t-this.p:t)<(e>this.half?e-this.p:e)}gt(t,e){return(t>this.half?t-this.p:t)>(e>this.half?e-this.p:e)}leq(t,e){return(t>this.half?t-this.p:t)<=(e>this.half?e-this.p:e)}geq(t,e){return(t>this.half?t-this.p:t)>=(e>this.half?e-this.p:e)}div(t,e){return this.mul(t,this.inv(e))}idiv(t,e){return n(e,"Division by zero"),t/e}inv(t){n(t,"Division by zero");let e=0n,r=this.p,i=1n,o=t%this.p;for(;o;){let t=r/o;[e,i]=[i,e-t*i],[r,o]=[o,r-t*o]}return e<0n&&(e+=this.p),e}mod(t,e){return t%e}pow(t,e){return o.exp(this,t,e)}band(t,e){const r=t&e&this.mask;return r>=this.p?r-this.p:r}bor(t,e){const r=(t|e)&this.mask;return r>=this.p?r-this.p:r}bxor(t,e){const r=(t^e)&this.mask;return r>=this.p?r-this.p:r}bnot(t){const e=t^this.mask;return e>=this.p?e-this.p:e}shl(t,e){if(Number(e)<this.bitLength){const r=t<<e&this.mask;return r>=this.p?r-this.p:r}{const r=this.p-e;return Number(r)<this.bitLength?t>>r:0n}}shr(t,e){if(Number(e)<this.bitLength)return t>>e;{const r=this.p-e;if(Number(r)<this.bitLength){const e=t<<r&this.mask;return e>=this.p?e-this.p:e}return 0}}land(t,e){return t&&e?1n:0n}lor(t,e){return t||e?1n:0n}lnot(t){return t?0n:1n}sqrt(t){if(0n==t)return this.zero;if(1n!=this.pow(t,this.minusone>>this.one))return null;let e=this.s,r=this.nqr_to_t,n=this.pow(t,this.t),i=this.pow(t,this.add(this.t,this.one)>>1n);for(;1n!=n;){let t=this.square(n),o=1;for(;1n!=t;)o++,t=this.square(t);let s=r;for(let t=0;t<e-o-1;t++)s=this.square(s);e=o,r=this.square(s),n=this.mul(n,r),i=this.mul(i,s)}return i>this.p>>1n&&(i=this.neg(i)),i}normalize(t,e){if((t=BigInt(t,e))<0){let e=-t;return e>=this.p&&(e%=this.p),this.p-e}return t>=this.p?t%this.p:t}random(){const t=2*this.bitLength/8;let e=0n;for(let r=0;r<t;r++)e=(e<<8n)+BigInt(s());return e%this.p}toString(t,e){let r;return r=t>this.half?"-"+(this.p-t).toString(e):t.toString(e),r}isZero(t){return 0n==t}}},3819:(t,e,r)=>{const n=r(8103);t.exports=class{constructor(t,e){this.F=t,this.zero=[this.F.zero,this.F.zero],this.one=[this.F.one,this.F.zero],this.nonResidue=e}_mulByNonResidue(t){return this.F.mul(this.nonResidue,t)}copy(t){return[this.F.copy(t[0]),this.F.copy(t[1])]}add(t,e){return[this.F.add(t[0],e[0]),this.F.add(t[1],e[1])]}double(t){return this.add(t,t)}sub(t,e){return[this.F.sub(t[0],e[0]),this.F.sub(t[1],e[1])]}neg(t){return this.sub(this.zero,t)}mul(t,e){const r=this.F.mul(t[0],e[0]),n=this.F.mul(t[1],e[1]);return[this.F.add(r,this._mulByNonResidue(n)),this.F.sub(this.F.mul(this.F.add(t[0],t[1]),this.F.add(e[0],e[1])),this.F.add(r,n))]}inv(t){const e=this.F.square(t[0]),r=this.F.square(t[1]),n=this.F.sub(e,this._mulByNonResidue(r)),i=this.F.inv(n);return[this.F.mul(t[0],i),this.F.neg(this.F.mul(t[1],i))]}div(t,e){return this.mul(t,this.inv(e))}square(t){const e=this.F.mul(t[0],t[1]);return[this.F.sub(this.F.mul(this.F.add(t[0],t[1]),this.F.add(t[0],this._mulByNonResidue(t[1]))),this.F.add(e,this._mulByNonResidue(e))),this.F.add(e,e)]}isZero(t){return this.F.isZero(t[0])&&this.F.isZero(t[1])}eq(t,e){return this.F.eq(t[0],e[0])&&this.F.eq(t[1],e[1])}mulScalar(t,e){return n.mulScalar(this,t,e)}exp(t,e){return n.exp(this,t,e)}toString(t){return`[ ${this.F.toString(t[0])} , ${this.F.toString(t[1])} ]`}}},6670:(t,e,r)=>{const n=r(8103);t.exports=class{constructor(t,e){this.F=t,this.zero=[this.F.zero,this.F.zero,this.F.zero],this.one=[this.F.one,this.F.zero,this.F.zero],this.nonResidue=e}_mulByNonResidue(t){return this.F.mul(this.nonResidue,t)}copy(t){return[this.F.copy(t[0]),this.F.copy(t[1]),this.F.copy(t[2])]}add(t,e){return[this.F.add(t[0],e[0]),this.F.add(t[1],e[1]),this.F.add(t[2],e[2])]}double(t){return this.add(t,t)}sub(t,e){return[this.F.sub(t[0],e[0]),this.F.sub(t[1],e[1]),this.F.sub(t[2],e[2])]}neg(t){return this.sub(this.zero,t)}mul(t,e){const r=this.F.mul(t[0],e[0]),n=this.F.mul(t[1],e[1]),i=this.F.mul(t[2],e[2]);return[this.F.add(r,this._mulByNonResidue(this.F.sub(this.F.mul(this.F.add(t[1],t[2]),this.F.add(e[1],e[2])),this.F.add(n,i)))),this.F.add(this.F.sub(this.F.mul(this.F.add(t[0],t[1]),this.F.add(e[0],e[1])),this.F.add(r,n)),this._mulByNonResidue(i)),this.F.add(this.F.sub(this.F.mul(this.F.add(t[0],t[2]),this.F.add(e[0],e[2])),this.F.add(r,i)),n)]}inv(t){const e=this.F.square(t[0]),r=this.F.square(t[1]),n=this.F.square(t[2]),i=this.F.mul(t[0],t[1]),o=this.F.mul(t[0],t[2]),s=this.F.mul(t[1],t[2]),a=this.F.sub(e,this._mulByNonResidue(s)),u=this.F.sub(this._mulByNonResidue(n),i),h=this.F.sub(r,o),l=this.F.inv(this.F.add(this.F.mul(t[0],a),this._mulByNonResidue(this.F.add(this.F.mul(t[2],u),this.F.mul(t[1],h)))));return[this.F.mul(l,a),this.F.mul(l,u),this.F.mul(l,h)]}div(t,e){return this.mul(t,this.inv(e))}square(t){const e=this.F.square(t[0]),r=this.F.mul(t[0],t[1]),n=this.F.add(r,r),i=this.F.square(this.F.add(this.F.sub(t[0],t[1]),t[2])),o=this.F.mul(t[1],t[2]),s=this.F.add(o,o),a=this.F.square(t[2]);return[this.F.add(e,this._mulByNonResidue(s)),this.F.add(n,this._mulByNonResidue(a)),this.F.sub(this.F.add(this.F.add(n,i),s),this.F.add(e,a))]}isZero(t){return this.F.isZero(t[0])&&this.F.isZero(t[1])&&this.F.isZero(t[2])}eq(t,e){return this.F.eq(t[0],e[0])&&this.F.eq(t[1],e[1])&&this.F.eq(t[2],e[2])}affine(t){return[this.F.affine(t[0]),this.F.affine(t[1]),this.F.affine(t[2])]}mulScalar(t,e){return n.mulScalar(this,t,e)}exp(t,e){return n.exp(this,t,e)}toString(t){return`[ ${this.F.toString(t[0])} , ${this.F.toString(t[1])}, ${this.F.toString(t[2])} ]`}}},8103:(t,e,r)=>{const n=r(4115),i=r(2357);e.mulScalar=(t,e,r)=>{let o;if(n.isZero(r))return t.zero;const s=n.naf(r);1==s[s.length-1]?o=e:-1==s[s.length-1]?o=t.neg(e):i(!1);for(let r=s.length-2;r>=0;r--)o=t.double(o),1==s[r]?o=t.add(o,e):-1==s[r]&&(o=t.sub(o,e));return o},e.exp=(t,e,r)=>{if(n.isZero(r))return t.one;const i=n.bits(r);if(0==i.legth)return t.one;let o=e;for(let r=i.length-2;r>=0;r--)o=t.square(o),i[r]&&(o=t.mul(o,e));return o}},9115:t=>{function e(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function r(t,e,n,i,o){const s=1<<n;if(1==s)return[e[i]];if(2==s)return[t.F.add(e[i],e[i+o]),t.F.sub(e[i],e[i+o])];const a=s>>1,u=r(t,e,n-1,i,2*o),h=r(t,e,n-1,i+o,2*o),l=new Array(s);for(let e=0;e<a;e++)l[e]=t.F.add(u[e],t.F.mul(t.roots[n][e],h[e])),l[e+a]=t.F.sub(u[e],t.F.mul(t.roots[n][e],h[e]));return l}t.exports=class{constructor(t){this.F=t;let e=t.t,r=t.s;const n=this.F.add(this.F.add(this.F.two,this.F.two),this.F.one);this.w=new Array(r+1),this.wi=new Array(r+1),this.w[r]=this.F.pow(n,e),this.wi[r]=this.F.inv(this.w[r]);let i=r-1;for(;i>=0;)this.w[i]=this.F.square(this.w[i+1]),this.wi[i]=this.F.square(this.wi[i+1]),i--;this.roots=[],this._setRoots(15)}_setRoots(t){for(let e=t;e>=0&&!this.roots[e];e--){let t=this.F.one;const r=1<<e,n=new Array(r);for(let i=0;i<r;i++)n[i]=t,t=this.F.mul(t,this.w[e]);this.roots[e]=n}}add(t,e){const r=Math.max(t.length,e.length),n=new Array(r);for(let i=0;i<r;i++)n[i]=this.F.add(t[i]||this.F.zero,e[i]||this.F.zero);return this.reduce(n)}double(t){return this.add(t,t)}sub(t,e){const r=Math.max(t.length,e.length),n=new Array(r);for(let i=0;i<r;i++)n[i]=this.F.sub(t[i]||this.F.zero,e[i]||this.F.zero);return this.reduce(n)}mulScalar(t,e){if(this.F.eq(e,this.F.zero))return[];if(this.F.eq(e,this.F.one))return t;const r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=this.F.mul(t[n],e);return r}mul(t,r){return 0==t.length||0==r.length?[]:1==t.length?this.mulScalar(r,t[0]):1==r.length?this.mulScalar(t,r[0]):(r.length>t.length&&([r,t]=[t,r]),r.length<=2||r.length<e(t.length)?this.mulNormal(t,r):this.mulFFT(t,r))}mulNormal(t,e){let r=[];for(let n=0;n<e.length;n++)r=this.add(r,this.scaleX(this.mulScalar(t,e[n]),n));return r}mulFFT(t,n){const i=e(Math.max(t.length,n.length)-1)+2;this._setRoots(i);const o=1<<i,s=this.extend(t,o),a=this.extend(n,o),u=r(this,s,i,0,1),h=r(this,a,i,0,1),l=new Array(o);for(let t=0;t<o;t++)l[t]=this.F.mul(u[t],h[t]);const f=r(this,l,i,0,1),c=this.F.inv(this.F.mulScalar(this.F.one,o)),d=new Array(o);for(let t=0;t<o;t++)d[t]=this.F.mul(f[(o-t)%o],c);return this.reduce(d)}square(t){return this.mul(t,t)}scaleX(t,e){return 0==e?t:e>0?new Array(e).fill(this.F.zero).concat(t):-e>=t.length?[]:t.slice(-e)}eval2(t,e){let r=this.F.zero,n=this.F.one;for(let i=0;i<t.length;i++)r=this.F.add(r,this.F.mul(t[i],n)),n=this.F.mul(n,e);return r}eval(t,e){const r=this.F;if(0==t.length)return r.zero;const n=this._next2Power(t.length);return function t(e,n,i,o,s){if(1==s)return e[i];const a=r.square(n);return r.add(t(e,a,i,o<<1,s>>1),r.mul(n,t(e,a,i+o,o<<1,s>>1)))}(this.extend(t,n),e,0,1,n)}lagrange(t){let e=[this.F.one];for(let r=0;r<t.length;r++)e=this.mul(e,[this.F.neg(t[r][0]),this.F.one]);let r=[];for(let n=0;n<t.length;n++){let i=this.ruffini(e,t[n][0]);const o=this.F.mul(this.F.inv(this.eval(i,t[n][0])),t[n][1]);i=this.mulScalar(i,o),r=this.add(r,i)}return r}fft(t){if(t.length<=1)return t;const n=e(t.length-1)+1;this._setRoots(n);const i=1<<n;return r(this,this.extend(t,i),n,0,1)}ifft(t){if(t.length<=1)return t;const n=e(t.length-1)+1;this._setRoots(n);const i=1<<n,o=r(this,this.extend(t,i),n,0,1),s=this.F.inv(this.F.mulScalar(this.F.one,i)),a=new Array(i);for(let t=0;t<i;t++)a[t]=this.F.mul(o[(i-t)%i],s);return a}_fft(t,e,r,n){const i=1<<e;if(1==i)return[t[r]];const o=i>>1,s=this._fft(t,e-1,r,2*n),a=this._fft(t,e-1,r+n,2*n),u=new Array(i);let h=this.F.one;for(let t=0;t<o;t++)u[t]=this.F.add(s[t],this.F.mul(h,a[t])),u[t+o]=this.F.sub(s[t],this.F.mul(h,a[t])),h=this.F.mul(h,this.w[e]);return u}extend(t,e){if(e==t.length)return t;const r=new Array(e-t.length).fill(this.F.zero);return t.concat(r)}reduce(t){if(0==t.length)return t;if(!this.F.eq(t[t.length-1],this.F.zero))return t;let e=t.length-1;for(;e>0&&this.F.eq(t[e],this.F.zero);)e--;return t.slice(0,e+1)}eq(t,e){const r=this.reduce(t),n=this.reduce(e);if(r.length!=n.length)return!1;for(let t=0;t<n.length;t++)if(!this.F.eq(r[t],n[t]))return!1;return!0}ruffini(t,e){const r=new Array(t.length-1);r[r.length-1]=t[t.length-1];for(let n=r.length-2;n>=0;n--)r[n]=this.F.add(this.F.mul(r[n+1],e),t[n+1]);return r}_next2Power(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}toString(t){let e="";for(let r=this.normalize(t).length-1;r>=0;r--)this.F.eq(t[r],this.F.zero)||(""!=e&&(e+=" + "),e+=t[r].toString(10),r>0&&(e+="x",r>1&&(e=e+"^"+r)));return e}normalize(t){const e=new Array(t.length);for(let r=0;r<t.length;r++)e[r]=this.F.normalize(t[r]);return e}_reciprocal(t,e){const r=1<<e;if(1==r)return[this.F.inv(t[0])];const n=this.scaleX(t,-r/2),i=this._reciprocal(n,e-1),o=this.scaleX(this.double(i),3*r/2-2),s=this.mul(this.square(i),t);return this.scaleX(this.sub(o,s),-(r-2))}_div2(t,r){const n=e(r.length-1)+1,i=1<<n,o=i-r.length,s=this._reciprocal(this.scaleX(r,o),n);return this.scaleX(s,t-2*i+2+o)}div(t,r){if(t.length<r.length)return[];const n=e(r.length-1)+1,i=1<<n,o=this.scaleX(t,i-r.length),s=this.scaleX(r,i-r.length),a=s.length-1;let u=o.length-1;const h=this._reciprocal(s,n);let l;u>2*a&&(l=this.sub(this.scaleX([this.F.one],2*a),this.mul(h,s)));let f,c,d=[],p=o,m=!1;for(;!m;)f=this.mul(p,h),d=this.add(d,this.scaleX(f,-2*a)),u>2*a?(c=this.mul(p,l),p=this.scaleX(c,-2*a),u=p.length-1):m=!0;return d}oneRoot(t,r){let n=e(t-1)+1,i=this.F.one,o=r;if(r>=t)throw new Error("Given 'i' should be lower than 'n'");if(1<<n!==t)throw new Error(`Internal errlr: ${t} should equal ${1<<n}`);for(;o>0;)!0&o&&(i=this.F.mul(i,this.w[n])),o>>=1,n--;return i}computeVanishingPolinomial(t,e){const r=1<<t;return this.F.sub(this.F.pow(e,r),this.F.one)}evaluateLagrangePolynomials(t,e){const r=1<<t,n=this.F.pow(e,r),i=new Array(r).fill(this.F.zero);this._setRoots(t);const o=this.w[t];if(this.F.eq(n,this.F.one))for(let n=0;n<r;n++)if(this.F.eq(this.roots[t][0],e))return i[n]=this.F.one,i;const s=this.F.sub(n,this.F.one);let a=this.F.mul(s,this.F.inv(this.F.e(r)));for(let n=0;n<r;n++)i[n]=this.F.mul(a,this.F.inv(this.F.sub(e,this.roots[t][n]))),a=this.F.mul(a,o);return i}log2(t){return e(t)}}},4115:(t,e,r)=>{const n="function"==typeof BigInt;t.exports=r(n?7915:8187)},8187:(t,e,r)=>{const n=r(4736),i=r(2357);t.exports.fromString=function(t,e){return n(t,e)},t.exports.fromArray=function(t,e){return n.fromArray(t,e)},t.exports.bitLength=function(t){return n(t).bitLength()},t.exports.isNegative=function(t){return n(t).isNegative()},t.exports.isZero=function(t){return n(t).isZero()},t.exports.shiftLeft=function(t,e){return n(t).shiftLeft(e)},t.exports.shiftRight=function(t,e){return n(t).shiftRight(e)},t.exports.shl=t.exports.shiftLeft,t.exports.shr=t.exports.shiftRight,t.exports.isOdd=function(t){return n(t).isOdd()},t.exports.naf=function(t){let e=n(t);const r=[];for(;e.gt(n.zero);){if(e.isOdd()){const t=2-e.mod(4).toJSNumber();r.push(t),e=e.minus(t)}else r.push(0);e=e.shiftRight(1)}return r},t.exports.bits=function(t){let e=n(t);const r=[];for(;e.gt(n.zero);)e.isOdd()?r.push(1):r.push(0),e=e.shiftRight(1);return r},t.exports.toNumber=function(t){return i(t.lt(n("100000000",16))),t.toJSNumber()},t.exports.toArray=function(t,e){return n(t).toArray(e)},t.exports.e=function(t){return n(t)},t.exports.add=function(t,e){return n(t).add(n(e))},t.exports.sub=function(t,e){return n(t).minus(n(e))},t.exports.neg=function(t){return n.zero.minus(n(t))},t.exports.mul=function(t,e){return n(t).times(n(e))},t.exports.square=function(t){return n(t).square()},t.exports.div=function(t,e){return n(t).divide(n(e))},t.exports.mod=function(t,e){return n(t).mod(n(e))},t.exports.eq=function(t,e){return n(t).eq(n(e))},t.exports.neq=function(t,e){return n(t).neq(n(e))},t.exports.lt=function(t,e){return n(t).lt(n(e))},t.exports.gt=function(t,e){return n(t).gt(n(e))},t.exports.leq=function(t,e){return n(t).leq(n(e))},t.exports.geq=function(t,e){return n(t).geq(n(e))},t.exports.band=function(t,e){return n(t).and(n(e))},t.exports.bor=function(t,e){return n(t).or(n(e))},t.exports.bxor=function(t,e){return n(t).xor(n(e))},t.exports.band=function(t,e){return!n(t).isZero()&&!n(e).isZero()},t.exports.bor=function(t,e){return!n(t).isZero()||!n(e).isZero()},t.exports.bnot=function(t){return n(t).isZero()}},7915:(t,e,r)=>{const n=r(2357),i=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];t.exports.fromString=function(t,e){return e&&10!=e?16==e?BigInt("0x"+t):void 0:BigInt(t)},t.exports.fromArray=function(t,e){let r=0n;e=BigInt(e);for(let n=0;n<t.length;n++)r=r*e+BigInt(t[n]);return r},t.exports.bitLength=function(t){const e=t.toString(16);return 4*(e.length-1)+i[e[0]]},t.exports.isNegative=function(t){return BigInt(t)<0n},t.exports.isZero=function(t){return!t},t.exports.shiftLeft=function(t,e){return BigInt(t)<<BigInt(e)},t.exports.shiftRight=function(t,e){return BigInt(t)>>BigInt(e)},t.exports.shl=t.exports.shiftLeft,t.exports.shr=t.exports.shiftRight,t.exports.isOdd=function(t){return 1n==(1n&BigInt(t))},t.exports.naf=function(t){let e=BigInt(t);const r=[];for(;e;){if(1n&e){const t=2-Number(e%4n);r.push(t),e-=BigInt(t)}else r.push(0);e>>=1n}return r},t.exports.bits=function(t){let e=BigInt(t);const r=[];for(;e;)1n&e?r.push(1):r.push(0),e>>=1n;return r},t.exports.toNumber=function(t){return n(t<0x100000000n),Number(t)},t.exports.toArray=function(t,e){const r=[];let n=BigInt(t);for(e=BigInt(e);n;)r.unshift(Number(n%e)),n/=e;return r},t.exports.e=function(t){return BigInt(t)},t.exports.add=function(t,e){return BigInt(t)+BigInt(e)},t.exports.sub=function(t,e){return BigInt(t)-BigInt(e)},t.exports.neg=function(t){return-BigInt(t)},t.exports.mul=function(t,e){return BigInt(t)*BigInt(e)},t.exports.square=function(t){return BigInt(t)*BigInt(t)},t.exports.div=function(t,e){return BigInt(t)/BigInt(e)},t.exports.mod=function(t,e){return BigInt(t)%BigInt(e)},t.exports.eq=function(t,e){return BigInt(t)==BigInt(e)},t.exports.neq=function(t,e){return BigInt(t)!=BigInt(e)},t.exports.lt=function(t,e){return BigInt(t)<BigInt(e)},t.exports.gt=function(t,e){return BigInt(t)>BigInt(e)},t.exports.leq=function(t,e){return BigInt(t)<=BigInt(e)},t.exports.geq=function(t,e){return BigInt(t)>=BigInt(e)},t.exports.band=function(t,e){return BigInt(t)&BigInt(e)},t.exports.bor=function(t,e){return BigInt(t)|BigInt(e)},t.exports.bxor=function(t,e){return BigInt(t)^BigInt(e)},t.exports.band=function(t,e){return BigInt(t)&&BigInt(e)},t.exports.bor=function(t,e){return BigInt(t)||BigInt(e)},t.exports.bnot=function(t){return!BigInt(t)}},8856:(t,e,r)=>{const n="function"==typeof BigInt;t.exports=r(n?4755:6733)},6733:(t,e,r)=>{const n=r(2357),i=r(4736);t.exports.stringifyBigInts=function t(e){if("bigint"==typeof e||void 0!==e.eq)return e.toString(10);if(Array.isArray(e))return e.map(t);if("object"==typeof e){const r={};for(let n in e)r[n]=t(e[n]);return r}return e},t.exports.unstringifyBigInts=function t(e){if("string"==typeof e&&/^[0-9]+$/.test(e))return i(e);if(Array.isArray(e))return e.map(t);if("object"==typeof e){const r={};for(let n in e)r[n]=t(e[n]);return r}return e},t.exports.beBuff2int=function(t){let e=i.zero;for(let r=0;r<t.length;r++){const n=i(t[t.length-r-1]);e=e.add(n.shiftLeft(8*r))}return e},t.exports.beInt2Buff=function(t,e){let r=t,o=e-1;const s=Buffer.alloc(e);for(;r.gt(i.zero)&&o>=0;){let t=Number(r.and(i("255")));s[o]=t,o--,r=r.shiftRight(8)}return n(r.eq(i.zero)),s},t.exports.leBuff2int=function(t){let e=i.zero;for(let r=0;r<t.length;r++){const n=i(t[r]);e=e.add(n.shiftLeft(8*r))}return e},t.exports.leInt2Buff=function(t,e){let r=t,o=0;const s=Buffer.alloc(e);for(;r.gt(i.zero)&&o<s.length;){let t=Number(r.and(i(255)));s[o]=t,o++,r=r.shiftRight(8)}return n(r.eq(i.zero)),s}},4755:(t,e,r)=>{const n=r(2357);t.exports.stringifyBigInts=function t(e){if("bigint"==typeof e||void 0!==e.eq)return e.toString(10);if(Array.isArray(e))return e.map(t);if("object"==typeof e){const r={};for(let n in e)r[n]=t(e[n]);return r}return e},t.exports.unstringifyBigInts=function t(e){if("string"==typeof e&&/^[0-9]+$/.test(e))return BigInt(e);if(Array.isArray(e))return e.map(t);if("object"==typeof e){const r={};for(let n in e)r[n]=t(e[n]);return r}return e},t.exports.beBuff2int=function(t){let e=0n,r=t.length;for(;r>0;)r>=4?(r-=4,e+=BigInt(t.readUInt32BE(r))<<BigInt(8*r)):r>=2?(r-=2,e+=BigInt(t.readUInt16BE(r))<<BigInt(8*r)):(r-=1,e+=BigInt(t.readUInt8(r))<<BigInt(8*r));return e},t.exports.beInt2Buff=function(t,e){let r=t;const i=Buffer.alloc(e);let o=e;for(;o>0;)o-4>=0?(o-=4,i.writeUInt32BE(Number(0xFFFFFFFFn&r),o),r>>=32n):o-2>=0?(o-=2,i.writeUInt16BE(Number(0xFFFFn&r),o),r>>=16n):(o-=1,i.writeUInt8(Number(0xFFn&r),o),r>>=8n);return n(0n==r),i},t.exports.leBuff2int=function(t){let e=0n,r=0;for(;r<t.length;)r+4<=t.length?(e+=BigInt(t.readUInt32LE(r))<<BigInt(8*r),r+=4):r+4<=t.length?(e+=BigInt(t.readUInt16LE(r))<<BigInt(8*r),r+=2):(e+=BigInt(t.readUInt8(r))<<BigInt(8*r),r+=1);return e},t.exports.leInt2Buff=function(t,e){let r=t;const i=Buffer.alloc(e);let o=0;for(;o<e;)o+4<=e?(i.writeUInt32LE(Number(0xFFFFFFFFn&r),o),o+=4,r>>=32n):o+2<=e?(i.writeUInt16LE(Number(0xFFFFn&r),o),o+=2,r>>=16n):(i.writeUInt8(Number(0xFFn&r),o),o+=1,r>>=8n);return n(0n==r),i}},7008:(t,e,r)=>{const n=r(1029).F1Field,i=r(1029).Scalar,o=r(1029).utils;e.addPoint=a,e.mulPointEscalar=u,e.inCurve=h,e.inSubgroup=function(t){if(!h(t))return!1;const r=u(t,e.subOrder);return s.isZero(r[0])&&s.eq(r[1],s.one)},e.packPoint=function(t){const e=o.leInt2Buff(t[1],32);return s.lt(t[0],s.zero)&&(e[31]=128|e[31]),e},e.unpackPoint=function(t){const r=Buffer.from(t);let n=!1;const a=new Array(2);if(128&r[31]&&(n=!0,r[31]=127&r[31]),a[1]=o.leBuff2int(r),i.gt(a[1],e.p))return null;const u=s.square(a[1]);let h=s.sqrt(s.div(s.sub(s.one,u),s.sub(e.A,s.mul(e.D,u))));return null==h?null:(n&&(h=s.neg(h)),a[0]=h,a)},e.p=i.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617");const s=new n(e.p);function a(t,r){const n=[],i=s.mul(t[0],r[1]),o=s.mul(t[1],r[0]),a=s.mul(s.sub(t[1],s.mul(e.A,t[0])),s.add(r[0],r[1])),u=s.mul(i,o),h=s.mul(e.D,u);return n[0]=s.div(s.add(i,o),s.add(s.one,h)),n[1]=s.div(s.add(a,s.sub(s.mul(e.A,i),o)),s.sub(s.one,h)),n}function u(t,e){let r=[s.e("0"),s.e("1")],n=e,o=t;for(;!i.isZero(n);)i.isOdd(n)&&(r=a(r,o)),o=a(o,o),n=i.shiftRight(n,1);return r}function h(t){const r=s.square(t[0]),n=s.square(t[1]);return!!s.eq(s.add(s.mul(e.A,r),n),s.add(s.one,s.mul(s.mul(r,n),e.D)))}e.F=s,e.Generator=[s.e("995203441582195749578291179787384436505546430278305826713579947235728471134"),s.e("5472060717959818805561601436314318772137091100104008585924551046643952123905")],e.Base8=[s.e("5299619240641551281634865583518297030282874472190772894086521144482721001553"),s.e("16950150798460657717958625567821834550301663161624707787222815936182638968203")],e.order=i.fromString("21888242871839275222246405745257275088614511777268538073601725287587578984328"),e.subOrder=i.shiftRight(e.order,3),e.A=s.e("168700"),e.D=s.e("168696")},8300:(t,e,r)=>{const n=r(6193),i=r(1029).Scalar,o=r(1029).F1Field,s=r(7008),a=r(1029).utils,u=(r(2256).v,r(65),r(4194));r(882);function h(t){const e=Buffer.from(t);return e[0]=248&e[0],e[31]=127&e[31],e[31]=64|e[31],e}e.prv2pub=function(t){const e=h(n("blake512").update(t).digest().slice(0,32));let r=a.leBuff2int(e);return s.mulPointEscalar(s.Base8,i.shr(r,3))},e.signPoseidon=function(t,e){const r=n("blake512").update(t).digest(),l=h(r.slice(0,32)),f=a.leBuff2int(l),c=s.mulPointEscalar(s.Base8,i.shr(f,3)),d=a.leInt2Buff(e,32),p=n("blake512").update(Buffer.concat([r.slice(32,64),d])).digest();let m=a.leBuff2int(p);const g=new o(s.subOrder);m=g.e(m);const y=s.mulPointEscalar(s.Base8,m),v=u([y[0],y[1],c[0],c[1],e]);return{R8:y,S:g.add(m,g.mul(v,f))}},e.packSignature=function(t){const e=s.packPoint(t.R8),r=a.leInt2Buff(t.S,32);return Buffer.concat([e,r])},e.unpackSignature=function(t){return{R8:s.unpackPoint(t.slice(0,32)),S:a.leBuff2int(t.slice(32,64))}}},65:(t,e,r)=>{const n=r(1029).Scalar,i=r(1029).k,o=r(8269),s=new i(n.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617"));e.F=s;const a="mimc";e.getIV=t=>{void 0===t&&(t=a);const e=o.keccak256(t+"_iv");return n.FromString(o.toBN(e).toString()).mod(s.p)},e.getConstants=(t,e)=>{void 0===t&&(t=a),void 0===e&&(e=91);const r=new Array(e);let i=o.keccak256(a);for(let t=1;t<e;t++){i=o.keccak256(i);const e=o.toBN(i).mod(o.toBN(s.p.toString())),a=o.padLeft(o.toHex(e),64);r[t]=n.fromString(o.toBN(a).toString())}return r[0]=s.e(0),r};const u=e.getConstants(a,91);e.hash=(t,e)=>{const r=s.e(t),n=s.e(e);let i;for(let t=0;t<91;t++){const e=u[t],o=0==t?s.add(r,n):s.add(s.add(i,n),e);i=s.pow(o,7)}return s.add(i,n)},e.multiHash=(t,r)=>{let n;n=void 0===r?s.zero:r;for(let r=0;r<t.length;r++)n=s.add(s.add(n,t[r]),e.hash(s.e(t[r]),n));return n}},882:(t,e,r)=>{const n=r(1029).Scalar,i=r(8269),o=new(0,r(1029).k)(n.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617")),s="mimcsponge";e.getIV=t=>{void 0===t&&(t=s);const e=i.keccak256(t+"_iv");return n.fromString(i.toBN(e).toString()).mod(o.p)},e.getConstants=(t,e)=>{void 0===t&&(t=s),void 0===e&&(e=220);const r=new Array(e);let n=i.keccak256(s);for(let t=1;t<e;t++){n=i.keccak256(n);const e=i.toBN(n).mod(i.toBN(o.p.toString())),s=i.padLeft(i.toHex(e),64);r[t]=o.e(i.toBN(s).toString())}return r[0]=o.e(0),r[r.length-1]=o.e(0),r};const a=e.getConstants(s,220);e.hash=(t,e,r)=>{let n=o.e(t),i=o.e(e);const s=o.e(r);for(let t=0;t<220;t++){const e=a[t],r=0==t?o.add(n,s):o.add(o.add(n,s),e),u=o.e(i);t<219?(i=n,n=o.add(u,o.pow(r,5))):i=o.add(u,o.pow(r,5))}return{xL:o.normalize(n),xR:o.normalize(i)}},e.multiHash=(t,r,n)=>{void 0===n&&(n=1),void 0===r&&(r=o.zero);let i=o.zero,s=o.zero;for(let n=0;n<t.length;n++){i=o.add(i,o.e(t[n]));const a=e.hash(i,s,r);i=a.xL,s=a.xR}let a=[i];for(let t=1;t<n;t++){const t=e.hash(i,s,r);i=t.xL,s=t.xR,a.push(i)}return 1==n?o.normalize(a[0]):a.map((t=>o.normalize(t)))}},2256:(t,e,r)=>{const n=r(7008),i=r(6193),o=r(7462),s=r(1029).Scalar;e.v=function(t,e){(e=e||{}).baseHash=e.baseHash||"blake";const r=function(t){const e=new Array(8*t.length);for(let r=0;r<t.length;r++){const n=t[r];e[8*r]=1&n,e[8*r+1]=2&n,e[8*r+2]=4&n,e[8*r+3]=8&n,e[8*r+4]=16&n,e[8*r+5]=32&n,e[8*r+6]=64&n,e[8*r+7]=128&n}return e}(t),i=Math.floor((r.length-1)/200)+1;let o=[n.F.zero,n.F.one];for(let t=0;t<i;t++){let a;a=t==i-1?Math.floor((r.length-200*(i-1)-1)/4)+1:50;let h=s.e(0),l=s.e(1);for(let e=0;e<a;e++){let n=200*t+4*e,i=s.e(1);for(let t=0;t<3&&n<r.length;t++)r[n]&&(i=s.add(i,s.shl(s.e(1),t))),n++;n<r.length&&(r[n]&&(i=s.neg(i)),n++),h=s.add(h,s.mul(i,l)),l=s.shl(l,5)}s.lt(h,0)&&(h=s.add(h,n.subOrder)),o=n.addPoint(o,n.mulPointEscalar(u(e.baseHash,t),h))}return n.packPoint(o)};let a=[];function u(t,e){if(e<a.length)return a[e];let r=null,s=0;for(;null==r;){const a=(u=t,l="PedersenGenerator_"+h(e,32)+"_"+h(s,32),"blake"==u?i("blake256").update(l).digest():"blake2b"==u?Buffer.from(o(32).update(Buffer.from(l)).digest()):void 0);a[31]=191&a[31],r=n.unpackPoint(a),s++}var u,l;const f=n.mulPointEscalar(r,8);if(!n.inSubgroup(f))throw new Error("Point not in curve");return a[e]=f,f}function h(t,e){let r=""+t;for(;r.length<e;)r="0"+r;return r}},4194:(t,e,r)=>{const n=r(2357),i=r(1029).Scalar,o=r(1029).k,{unstringifyBigInts:s}=r(1029).utils,a=new o(i.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617")),{C:u,M:h}=s(r(9771)),l=[56,57,56,60,60,63,64,63],f=t=>a.mul(t,a.square(a.square(t,t)));t.exports=function(t){n(t.length>0),n(t.length<l.length-1);const e=t.length+1,r=l[e-2];let i=[...t.map((t=>a.e(t))),a.zero];for(let t=0;t<8+r;t++)i=i.map(((r,n)=>a.add(r,u[e-2][t*e+n]))),t<4||t>=4+r?i=i.map((t=>f(t))):i[0]=f(i[0]),t<8+r-1&&(i=i.map(((t,r)=>i.reduce(((t,n,i)=>a.add(t,a.mul(h[e-2][i][r],n))),a.zero))));return a.normalize(i[0])}},9771:t=>{"use strict";t.exports=JSON.parse('{"C":[["4417881134626180770308697923359573201005643519861877412381846989312604493735","5433650512959517612316327474713065966758808864213826738576266661723522780033","13641176377184356099764086973022553863760045607496549923679278773208775739952","17949713444224994136330421782109149544629237834775211751417461773584374506783","13765628375339178273710281891027109699578766420463125835325926111705201856003","19179513468172002314585757290678967643352171735526887944518845346318719730387","5157412437176756884543472904098424903141745259452875378101256928559722612176","535160875740282236955320458485730000677124519901643397458212725410971557409","1050793453380762984940163090920066886770841063557081906093018330633089036729","10665495010329663932664894101216428400933984666065399374198502106997623173873","19965634623406616956648724894636666805991993496469370618546874926025059150737","13007250030070838431593222885902415182312449212965120303174723305710127422213","16877538715074991604507979123743768693428157847423939051086744213162455276374","18211747749504876135588847560312685184956239426147543810126553367063157141465","18151553319826126919739798892854572062191241985315767086020821632812331245635","19957033149976712666746140949846950406660099037474791840946955175819555930825","3469514863538261843186854830917934449567467100548474599735384052339577040841","989698510043911779243192466312362856042600749099921773896924315611668507708","12568377015646290945235387813564567111330046038050864455358059568128000172201","20856104135605479600325529349246932565148587186338606236677138505306779314172","8206918720503535523121349917159924938835810381723474192155637697065780938424","1309058477013932989380617265069188723120054926187607548493110334522527703566","14076116939332667074621703729512195584105250395163383769419390236426287710606","10153498892749751942204288991871286290442690932856658983589258153608012428674","18202499207234128286137597834010475797175973146805180988367589376893530181575","12739388830157083522877690211447248168864006284243907142044329113461613743052","15123358710467780770838026754240340042441262572309759635224051333176022613949","19925004701844594370904593774447343836015483888496504201331110250494635362184","10352416606816998476681131583320899030072315953910679608943150613208329645891","10567371822366244361703342347428230537114808440249611395507235283708966113221","5635498582763880627392290206431559361272660937399944184533035305989295959602","11866432933224219174041051738704352719163271639958083608224676028593315904909","5795020705294401441272215064554385591292330721703923167136157291459784140431","9482202378699252817564375087302794636287866584767523335624368774856230692758","4245237636894546151746468406560945873445548423466753843402086544922216329298","12000500941313982757584712677991730019124834399479314697467598397927435905133","7596790274058425558167520209857956363736666939016807569082239187494363541787","2484867918246116343205467273440098378820186751202461278013576281097918148877","18312645949449997391810445935615409295369169383463185688973803378104013950190","15320686572748723004980855263301182130424010735782762814513954166519592552733","12618438900597948888520621062416758747872180395546164387827245287017031303859","17438141672027706116733201008397064011774368832458707512367404736905021019585","6374197807230665998865688675365359100400438034755781666913068586172586548950","2189398913433273865510950346186699930188746169476472274335177556702504595264","6268495580028970231803791523870131137294646402347399003576649137450213034606","17896250365994900261202920044129628104272791547990619503076839618914047059275","13692156312448722528008862371944543449350293305158722920787736248435893008873","15234446864368744483209945022439268713300180233589581910497691316744177619376","1572426502623310766593681563281600503979671244997798691029595521622402217227","80103447810215150918585162168214870083573048458555897999822831203653996617","8228820324013669567851850635126713973797711779951230446503353812192849106342","5375851433746509614045812476958526065449377558695752132494533666370449415873","12115998939203497346386774317892338270561208357481805380546938146796257365018","9764067909645821279940531410531154041386008396840887338272986634350423466622","8538708244538850542384936174629541085495830544298260335345008245230827876882","7140127896620013355910287215441004676619168261422440177712039790284719613114","14297402962228458726038826185823085337698917275385741292940049024977027409762","6667115556431351074165934212337261254608231545257434281887966406956835140819","20226761165244293291042617464655196752671169026542832236139342122602741090001","12038289506489256655759141386763477208196694421666339040483042079632134429119","19027757334170818571203982241812412991528769934917288000224335655934473717551","16272152964456553579565580463468069884359929612321610357528838696790370074720","2500392889689246014710135696485946334448570271481948765283016105301740284071","8595254970528530312401637448610398388203855633951264114100575485022581946023","11635945688914011450976408058407206367914559009113158286982919675551688078198","614739068603482619581328040478536306925147663946742687395148680260956671871","18692271780377861570175282183255720350972693125537599213951106550953176268753","4987059230784976306647166378298632695585915319042844495357753339378260807164","21851403978498723616722415377430107676258664746210815234490134600998983955497","9830635451186415300891533983087800047564037813328875992115573428596207326204","4842706106434537116860242620706030229206345167233200482994958847436425185478","6422235064906823218421386871122109085799298052314922856340127798647926126490","4564364104986856861943331689105797031330091877115997069096365671501473357846","1944043894089780613038197112872830569538541856657037469098448708685350671343","21179865974855950600518216085229498748425990426231530451599322283119880194955","14296697761894107574369608843560006996183955751502547883167824879840894933162","12274619649702218570450581712439138337725246879938860735460378251639845671898","16371396450276899401411886674029075408418848209575273031725505038938314070356","3702561221750983937578095019779188631407216522704543451228773892695044653565","19721616877735564664624984774636557499099875603996426215495516594530838681980","6383350109027696789969911008057747025018308755462287526819231672217685282429","20860583956177367265984596617324237471765572961978977333122281041544719622905","5766390934595026947545001478457407504285452477687752470140790011329357286275","4043175758319898049344746138515323336207420888499903387536875603879441092484","15579382179133608217098622223834161692266188678101563820988612253342538956534","1864640783252634743892105383926602930909039567065240010338908865509831749824","15943719865023133586707144161652035291705809358178262514871056013754142625673","2326415993032390211558498780803238091925402878871059708106213703504162832999","19995326402773833553207196590622808505547443523750970375738981396588337910289","5143583711361588952673350526320181330406047695593201009385718506918735286622","15436006486881920976813738625999473183944244531070780793506388892313517319583","16660446760173633166698660166238066533278664023818938868110282615200613695857","4966065365695755376133119391352131079892396024584848298231004326013366253934","20683781957411705574951987677641476019618457561419278856689645563561076926702","17280836839165902792086432296371645107551519324565649849400948918605456875699","17045635513701208892073056357048619435743564064921155892004135325530808465371","17055032967194400710390142791334572297458033582458169295920670679093585707295","15727174639569115300068198908071514334002742825679221638729902577962862163505","1001755657610446661315902885492677747789366510875120894840818704741370398633","18638547332826171619311285502376343504539399518545103511265465604926625041234","6751954224763196429755298529194402870632445298969935050224267844020826420799","3526747115904224771452549517614107688674036840088422555827581348280834879405","15705897908180497062880001271426561999724005008972544196300715293701537574122","574386695213920937259007343820417029802510752426579750428758189312416867750","15973040855000600860816974646787367136127946402908768408978806375685439868553","20934130413948796333037139460875996342810005558806621330680156931816867321122","6918585327145564636398173845411579411526758237572034236476079610890705810764","14158163500813182062258176233162498241310167509137716527054939926126453647182","4164602626597695668474100217150111342272610479949122406544277384862187287433","12146526846507496913615390662823936206892812880963914267275606265272996025304","10153527926900017763244212043512822363696541810586522108597162891799345289938","13564663485965299104296214940873270349072051793008946663855767889066202733588","5612449256997576125867742696783020582952387615430650198777254717398552960096","12151885480032032868507892738683067544172874895736290365318623681886999930120","380452237704664384810613424095477896605414037288009963200982915188629772177","9067557551252570188533509616805287919563636482030947363841198066124642069518","21280306817619711661335268484199763923870315733198162896599997188206277056900","5567165819557297006750252582140767993422097822227408837378089569369734876257","10411936321072105429908396649383171465939606386380071222095155850987201580137","21338390051413922944780864872652000187403217966653363270851298678606449622266","12156296560457833712186127325312904760045212412680904475497938949653569234473","4271647814574748734312113971565139132510281260328947438246615707172526380757","9061738206062369647211128232833114177054715885442782773131292534862178874950","10134551893627587797380445583959894183158393780166496661696555422178052339133","8932270237664043612366044102088319242789325050842783721780970129656616386103","3339412934966886386194449782756711637636784424032779155216609410591712750636","9704903972004596791086522314847373103670545861209569267884026709445485704400","17467570179597572575614276429760169990940929887711661192333523245667228809456"],["6745197990210204598374042828761989596302876299545964402857411729872131034734","426281677759936592021316809065178817848084678679510574715894138690250139748","4014188762916583598888942667424965430287497824629657219807941460227372577781","21328925083209914769191926116470334003273872494252651254811226518870906634704","19525217621804205041825319248827370085205895195618474548469181956339322154226","1402547928439424661186498190603111095981986484908825517071607587179649375482","18320863691943690091503704046057443633081959680694199244583676572077409194605","17709820605501892134371743295301255810542620360751268064484461849423726103416","15970119011175710804034336110979394557344217932580634635707518729185096681010","9818625905832534778628436765635714771300533913823445439412501514317783880744","6235167673500273618358172865171408902079591030551453531218774338170981503478","12575685815457815780909564540589853169226710664203625668068862277336357031324","7381963244739421891665696965695211188125933529845348367882277882370864309593","14214782117460029685087903971105962785460806586237411939435376993762368956406","13382692957873425730537487257409819532582973556007555550953772737680185788165","2203881792421502412097043743980777162333765109810562102330023625047867378813","2916799379096386059941979057020673941967403377243798575982519638429287573544","4341714036313630002881786446132415875360643644216758539961571543427269293497","2340590164268886572738332390117165591168622939528604352383836760095320678310","5222233506067684445011741833180208249846813936652202885155168684515636170204","7963328565263035669460582454204125526132426321764384712313576357234706922961","1394121618978136816716817287892553782094854454366447781505650417569234586889","20251767894547536128245030306810919879363877532719496013176573522769484883301","141695147295366035069589946372747683366709960920818122842195372849143476473","15919677773886738212551540894030218900525794162097204800782557234189587084981","2616624285043480955310772600732442182691089413248613225596630696960447611520","4740655602437503003625476760295930165628853341577914460831224100471301981787","19201590924623513311141753466125212569043677014481753075022686585593991810752","12116486795864712158501385780203500958268173542001460756053597574143933465696","8481222075475748672358154589993007112877289817336436741649507712124418867136","5181207870440376967537721398591028675236553829547043817076573656878024336014","1576305643467537308202593927724028147293702201461402534316403041563704263752","2555752030748925341265856133642532487884589978209403118872788051695546807407","18840924862590752659304250828416640310422888056457367520753407434927494649454","14593453114436356872569019099482380600010961031449147888385564231161572479535","20826991704411880672028799007667199259549645488279985687894219600551387252871","9159011389589751902277217485643457078922343616356921337993871236707687166408","5605846325255071220412087261490782205304876403716989785167758520729893194481","1148784255964739709393622058074925404369763692117037208398835319441214134867","20945896491956417459309978192328611958993484165135279604807006821513499894540","229312996389666104692157009189660162223783309871515463857687414818018508814","21184391300727296923488439338697060571987191396173649012875080956309403646776","21853424399738097885762888601689700621597911601971608617330124755808946442758","12776298811140222029408960445729157525018582422120161448937390282915768616621","7556638921712565671493830639474905252516049452878366640087648712509680826732","19042212131548710076857572964084011858520620377048961573689299061399932349935","12871359356889933725034558434803294882039795794349132643274844130484166679697","3313271555224009399457959221795880655466141771467177849716499564904543504032","15080780006046305940429266707255063673138269243146576829483541808378091931472","21300668809180077730195066774916591829321297484129506780637389508430384679582","20480395468049323836126447690964858840772494303543046543729776750771407319822","10034492246236387932307199011778078115444704411143703430822959320969550003883","19584962776865783763416938001503258436032522042569001300175637333222729790225","20155726818439649091211122042505326538030503429443841583127932647435472711802","13313554736139368941495919643765094930693458639277286513236143495391474916777","14606609055603079181113315307204024259649959674048912770003912154260692161833","5563317320536360357019805881367133322562055054443943486481491020841431450882","10535419877021741166931390532371024954143141727751832596925779759801808223060","12025323200952647772051708095132262602424463606315130667435888188024371598063","2906495834492762782415522961458044920178260121151056598901462871824771097354","19131970618309428864375891649512521128588657129006772405220584460225143887876","8896386073442729425831367074375892129571226824899294414632856215758860965449","7748212315898910829925509969895667732958278025359537472413515465768989125274","422974903473869924285294686399247660575841594104291551918957116218939002865","6398251826151191010634405259351528880538837895394722626439957170031528482771","18978082967849498068717608127246258727629855559346799025101476822814831852169","19150742296744826773994641927898928595714611370355487304294875666791554590142","12896891575271590393203506752066427004153880610948642373943666975402674068209","9546270356416926575977159110423162512143435321217584886616658624852959369669","2159256158967802519099187112783460402410585039950369442740637803310736339200","8911064487437952102278704807713767893452045491852457406400757953039127292263","745203718271072817124702263707270113474103371777640557877379939715613501668","19313999467876585876087962875809436559985619524211587308123441305315685710594","13254105126478921521101199309550428567648131468564858698707378705299481802310","1842081783060652110083740461228060164332599013503094142244413855982571335453","9630707582521938235113899367442877106957117302212260601089037887382200262598","5066637850921463603001689152130702510691309665971848984551789224031532240292","4222575506342961001052323857466868245596202202118237252286417317084494678062","2919565560395273474653456663643621058897649501626354982855207508310069954086","6828792324689892364977311977277548750189770865063718432946006481461319858171","2245543836264212411244499299744964607957732316191654500700776604707526766099","19602444885919216544870739287153239096493385668743835386720501338355679311704","8239538512351936341605373169291864076963368674911219628966947078336484944367","15053013456316196458870481299866861595818749671771356646798978105863499965417","7173615418515925804810790963571435428017065786053377450925733428353831789901","8239211677777829016346247446855147819062679124993100113886842075069166957042","15330855478780269194281285878526984092296288422420009233557393252489043181621","10014883178425964324400942419088813432808659204697623248101862794157084619079","14014440630268834826103915635277409547403899966106389064645466381170788813506","3580284508947993352601712737893796312152276667249521401778537893620670305946","2559754020964039399020874042785294258009596917335212876725104742182177996988","14898657953331064524657146359621913343900897440154577299309964768812788279359","2094037260225570753385567402013028115218264157081728958845544426054943497065","18051086536715129874440142649831636862614413764019212222493256578581754875930","21680659279808524976004872421382255670910633119979692059689680820959727969489","13950668739013333802529221454188102772764935019081479852094403697438884885176","9703845704528288130475698300068368924202959408694460208903346143576482802458","12064310080154762977097567536495874701200266107682637369509532768346427148165","16970760937630487134309762150133050221647250855182482010338640862111040175223","9790997389841527686594908620011261506072956332346095631818178387333642218087","16314772317774781682315680698375079500119933343877658265473913556101283387175","82044870826814863425230825851780076663078706675282523830353041968943811739","21696416499108261787701615667919260888528264686979598953977501999747075085778","327771579314982889069767086599893095509690747425186236545716715062234528958","4606746338794869835346679399457321301521448510419912225455957310754258695442","64499140292086295251085369317820027058256893294990556166497635237544139149","10455028514626281809317431738697215395754892241565963900707779591201786416553","10421411526406559029881814534127830959833724368842872558146891658647152404488","18848084335930758908929996602136129516563864917028006334090900573158639401697","13844582069112758573505569452838731733665881813247931940917033313637916625267","13488838454403536473492810836925746129625931018303120152441617863324950564617","15742141787658576773362201234656079648895020623294182888893044264221895077688","6756884846734501741323584200608866954194124526254904154220230538416015199997","7860026400080412708388991924996537435137213401947704476935669541906823414404","7871040688194276447149361970364037034145427598711982334898258974993423182255","20758972836260983284101736686981180669442461217558708348216227791678564394086","21723241881201839361054939276225528403036494340235482225557493179929400043949","19428469330241922173653014973246050805326196062205770999171646238586440011910","7969200143746252148180468265998213908636952110398450526104077406933642389443","10950417916542216146808986264475443189195561844878185034086477052349738113024","18149233917533571579549129116652755182249709970669448788972210488823719849654","3729796741814967444466779622727009306670204996071028061336690366291718751463","5172504399789702452458550583224415301790558941194337190035441508103183388987","6686473297578275808822003704722284278892335730899287687997898239052863590235","19426913098142877404613120616123695099909113097119499573837343516470853338513","5120337081764243150760446206763109494847464512045895114970710519826059751800","5055737465570446530938379301905385631528718027725177854815404507095601126720","14235578612970484492268974539959119923625505766550088220840324058885914976980","653592517890187950103239281291172267359747551606210609563961204572842639923","5507360526092411682502736946959369987101940689834541471605074817375175870579","7864202866011437199771472205361912625244234597659755013419363091895334445453","21294659996736305811805196472076519801392453844037698272479731199885739891648","13767183507040326119772335839274719411331242166231012705169069242737428254651","810181532076738148308457416289197585577119693706380535394811298325092337781","14232321930654703053193240133923161848171310212544136614525040874814292190478","16796904728299128263054838299534612533844352058851230375569421467352578781209","16256310366973209550759123431979563367001604350120872788217761535379268327259","19791658638819031543640174069980007021961272701723090073894685478509001321817","7046232469803978873754056165670086532908888046886780200907660308846356865119","16001732848952745747636754668380555263330934909183814105655567108556497219752","9737276123084413897604802930591512772593843242069849260396983774140735981896","11410895086919039954381533622971292904413121053792570364694836768885182251535","19098362474249267294548762387533474746422711206129028436248281690105483603471","11013788190750472643548844759298623898218957233582881400726340624764440203586","2206958256327295151076063922661677909471794458896944583339625762978736821035","7171889270225471948987523104033632910444398328090760036609063776968837717795","2510237900514902891152324520472140114359583819338640775472608119384714834368","8825275525296082671615660088137472022727508654813239986303576303490504107418","1481125575303576470988538039195271612778457110700618040436600537924912146613","16268684562967416784133317570130804847322980788316762518215429249893668424280","4681491452239189664806745521067158092729838954919425311759965958272644506354","3131438137839074317765338377823608627360421824842227925080193892542578675835","7930402370812046914611776451748034256998580373012248216998696754202474945793","8973151117361309058790078507956716669068786070949641445408234962176963060145","10223139291409280771165469989652431067575076252562753663259473331031932716923","2232089286698717316374057160056566551249777684520809735680538268209217819725","16930089744400890347392540468934821520000065594669279286854302439710657571308","21739597952486540111798430281275997558482064077591840966152905690279247146674","7508315029150148468008716674010060103310093296969466203204862163743615534994","11418894863682894988747041469969889669847284797234703818032750410328384432224","10895338268862022698088163806301557188640023613155321294365781481663489837917","18644184384117747990653304688839904082421784959872380449968500304556054962449","7414443845282852488299349772251184564170443662081877445177167932875038836497","5391299369598751507276083947272874512197023231529277107201098701900193273851","10329906873896253554985208009869159014028187242848161393978194008068001342262","4711719500416619550464783480084256452493890461073147512131129596065578741786","11943219201565014805519989716407790139241726526989183705078747065985453201504","4298705349772984837150885571712355513879480272326239023123910904259614053334","9999044003322463509208400801275356671266978396985433172455084837770460579627","4908416131442887573991189028182614782884545304889259793974797565686968097291","11963412684806827200577486696316210731159599844307091475104710684559519773777","20129916000261129180023520480843084814481184380399868943565043864970719708502","12884788430473747619080473633364244616344003003135883061507342348586143092592","20286808211545908191036106582330883564479538831989852602050135926112143921015","16282045180030846845043407450751207026423331632332114205316676731302016331498","4332932669439410887701725251009073017227450696965904037736403407953448682093","11105712698773407689561953778861118250080830258196150686012791790342360778288","21853934471586954540926699232107176721894655187276984175226220218852955976831","9807888223112768841912392164376763820266226276821186661925633831143729724792","13411808896854134882869416756427789378942943805153730705795307450368858622668","17906847067500673080192335286161014930416613104209700445088168479205894040011","14554387648466176616800733804942239711702169161888492380425023505790070369632","4264116751358967409634966292436919795665643055548061693088119780787376143967","2401104597023440271473786738539405349187326308074330930748109868990675625380","12251645483867233248963286274239998200789646392205783056343767189806123148785","15331181254680049984374210433775713530849624954688899814297733641575188164316","13108834590369183125338853868477110922788848506677889928217413952560148766472","6843160824078397950058285123048455551935389277899379615286104657075620692224","10151103286206275742153883485231683504642432930275602063393479013696349676320","7074320081443088514060123546121507442501369977071685257650287261047855962224","11413928794424774638606755585641504971720734248726394295158115188173278890938","7312756097842145322667451519888915975561412209738441762091369106604423801080","7181677521425162567568557182629489303281861794357882492140051324529826589361","15123155547166304758320442783720138372005699143801247333941013553002921430306","13409242754315411433193860530743374419854094495153957441316635981078068351329"],["11633431549750490989983886834189948010834808234699737327785600195936805266405","17353750182810071758476407404624088842693631054828301270920107619055744005334","11575173631114898451293296430061690731976535592475236587664058405912382527658","9724643380371653925020965751082872123058642683375812487991079305063678725624","20936725237749945635418633443468987188819556232926135747685274666391889856770","6427758822462294912934022562310355233516927282963039741999349770315205779230","16782979953202249973699352594809882974187694538612412531558950864304931387798","8979171037234948998646722737761679613767384188475887657669871981433930833742","5428827536651017352121626533783677797977876323745420084354839999137145767736","507241738797493565802569310165979445570507129759637903167193063764556368390","6711578168107599474498163409443059675558516582274824463959700553865920673097","2197359304646916921018958991647650011119043556688567376178243393652789311643","4634703622846121403803831560584049007806112989824652272428991253572845447400","17008376818199175111793852447685303011746023680921106348278379453039148937791","18430784755956196942937899353653692286521408688385681805132578732731487278753","4573768376486344895797915946239137669624900197544620153250805961657870918727","5624865188680173294191042415227598609140934495743721047183803859030618890703","8228252753786907198149068514193371173033070694924002912950645971088002709521","17586714789554691446538331362711502394998837215506284064347036653995353304693","12985198716830497423350597750558817467658937953000235442251074063454897365701","13480076116139680784838493959937969792577589073830107110893279354229821035984","480609231761423388761863647137314056373740727639536352979673303078459561332","19503345496799249258956440299354839375920540225688429628121751361906635419276","16837818502122887883669221005435922946567532037624537243846974433811447595173","5492108497278641078569490709794391352213168666744080628008171695469579703581","11365311159988448419785032079155356000691294261495515880484003277443744617083","13876891705632851072613751905778242936713392247975808888614530203269491723653","10660388389107698747692475159023710744797290186015856503629656779989214850043","18876318870401623474401728758498150977988613254023317877612912724282285739292","15543349138237018307536452195922365893694804703361435879256942490123776892424","2839988449157209999638903652853828318645773519300826410959678570041742458201","7566039810305694135184226097163626060317478635973510706368412858136696413063","6344830340705033582410486810600848473125256338903726340728639711688240744220","12475357769019880256619207099578191648078162511547701737481203260317463892731","13337401254840718303633782478677852514218549070508887338718446132574012311307","21161869193849404954234950798647336336709035097706159414187214758702055364571","20671052961616073313397254362345395594858011165315285344464242404604146448678","2772189387845778213446441819361180378678387127454165972767013098872140927416","3339032002224218054945450150550795352855387702520990006196627537441898997147","14919705931281848425960108279746818433850049439186607267862213649460469542157","17056699976793486403099510941807022658662936611123286147276760381688934087770","16144580075268719403964467603213740327573316872987042261854346306108421013323","15582343953927413680541644067712456296539774919658221087452235772880573393376","17528510080741946423534916423363640132610906812668323263058626230135522155749","3190600034239022251529646836642735752388641846393941612827022280601486805721","8463814172152682468446984305780323150741498069701538916468821815030498611418","16533435971270903741871235576178437313873873358463959658178441562520661055273","11845696835505436397913764735273748291716405946246049903478361223369666046634","18391057370973634202531308463652130631065370546571735004701144829951670507215","262537877325812689820791215463881982531707709719292538608229687240243203710","2187234489894387585309965540987639130975753519805550941279098789852422770021","19189656350920455659006418422409390013967064310525314160026356916172976152967","15839474183930359560478122372067744245080413846070743460407578046890458719219","1805019124769763805045852541831585930225376844141668951787801647576910524592","323592203814803486950280155834638828455175703393817797003361354810251742052","9780393509796825017346015868945480913627956475147371732521398519483580624282","14009429785059642386335012561867511048847749030947687313594053997432177705759","13749550162460745037234826077137388777330401847577727796245150843898019635981","19497187499283431845443758879472819384797584633472792651343926414232528405311","3708428802547661961864524194762556064568867603968214870300574294082023305587","1339414413482882567499652761996854155383863472782829777976929310155400981782","6396261245879814100794661157306877072718690153118140891315137894471052482309","2069661495404347929962833138824526893650803079024564477269192079629046031674","15793521554502133342917616035884588152451122589545915605459159078589855944361","17053424498357819626596285492499512504457128907932827007302385782133229252374","13658536470391360399708067455536748955260723760813498481671323619545320978896","21546095668130239633971575351786704948662094117932406102037724221634677838565","21411726238386979516934941789127061362496195649331822900487557574597304399109","1944776378988765673004063363506638781964264107780425928778257145151172817981","15590719714223718537172639598316570285163081746016049278954513732528516468773","1351266421179051765004709939353170430290500926943038391678843253157009556309","6772476224477167317130064764757502335545080109882028900432703947986275397548","10670120969725161535937685539136065944959698664551200616467222887025111751992","4731853626374224678749618809759140702342195350742653173378450474772131006181","14473527495914528513885847341981310373531349450901830749157165104135412062812","16937191362061486658876740597821783333355021670608822932942683228741190786143","5656559696428674390125424316117443507583679061659043998559560535270557939546","8897648276515725841133578021896617755369443750194849587616503841335248902806","14938684446722672719637788054570691068799510611164812175626676768545923371470","15284149043690546115252102390417391226617211133644099356880071475803043461465","2623479025068612775740107497276979457946709347831661908218182874823658838107","6809791961761836061129379546794905411734858375517368211894790874813684813988","2417620338751920563196799065781703780495622795713803712576790485412779971775","4445143310792944321746901285176579692343442786777464604312772017806735512661","1429019233589939118995503267516676481141938536269008901607126781291273208629","19874283200702583165110559932895904979843482162236139561356679724680604144459","13426632171723830006915194799390005513190035492503509233177687891041405113055","10582332261829184460912611488470654685922576576939233092337240630493625631748","21233753931561918964692715735079738969202507286592442257083521969358109931739","15570526832729960536088203016939646235070527502823725736220985057263010426410","9379993197409194016084018867205217180276068758980710078281820842068357746159","20771047769547788232530761122022227554484215799917531852224053856574439035591","20468066117407230615347036860121267564735050776924839007390915936603720868039","5488458379783632930817704196671117722181776789793038046303454621235628350505","1394272944960494549436156060041871735938329188644910029274839018389507786995","5147716541319265558364686380685869814344975511061045836883803841066664401308","14583556014436264794011679557180458872925270147116325433110111823036572987256","11881598145635709076820802010238799308467020773223027240974808290357539410246","1566675577370566803714158020143436746360531503329117352692311127363508063658","212097210828847555076368799807292486212366234848453077606919035866276438405","7447795983723838393344606913699113402588250391491430720006009618589586043349","7626475329478847982857743246276194948757851985510858890691733676098590062312","148936322117705719734052984176402258788283488576388928671173547788498414614","15456385653678559339152734484033356164266089951521103188900320352052358038156","18207029603568083031075933940507782729612798852390383193518574746240484434885","2783356767974552799246444090988849933848968900471538294757665724820698962027","2721136724873145834448711197875719736776242904173494370334510875996324906822","2101139679159828164567502977338446902934095964116292264803779234163802308621","8995221857405946029753863203034191016106353727035116779995228902499254557482","502050382895618998241481591846956281507455925731652006822624065608151015665","4998642074447347292230083981705092465562944918178587362047610976950173759150","9349925422548495396957991080641322437286312278286826683803695584372829655908","11780347248050333407713097022607360765169543706092266937432199545936788840710","17875657248128792902343900636176628524337469245418171053476833541334867949063","10366707960411170224546487410133378396211437543372531210718212258701730218585","16918708725327525329474486073529093971911689155838787615544405646587858805834","18845394288827839099791436411179859406694814287249240544635770075956540806104","9838806160073701591447223014625214979004281138811495046618998465898136914308","10285680425916086863571101560978592912547567902925573205991454216988033815759","1292119286233210185026381033809498665433650491423040630240164455269575958565","2665524343601461489082054230426835550060387413710679950970616347092017688857","13502286133892103192305476866434484921895765252706158317341618311553476426306","686854655578191041672292972738875170071982317195092845673566320025160026512","9315942923163981372372434957632152754092082859001311184186702151150554806508","17166793131238158480636170455452575971861309825745828685724097210995239015581","4443784618760852757287735236046535266034706880634443644576653970979377878608","21470445782021672615018345703580059646973568891521510437236903770708690160080","6932852445473908850835611723958058203645654625170962537129706393570586565567","17078326120157725640173982185667969009350208542843294226397809921509565607842","19251873001736801921864956728611772738233338338726553113352118847732921831266","13062907978694932362695258750558734366820802962383346229947907261606619788585","16576609187793673559170206379939616900133457644695219057683704871664434872406","17140499059660867342372156843620845644831519603574612796639429147195776838516","16226688173010504218547945848523900236290532501559570164276462499487632388445","2806068123803905806401128967330263340459046260107112845068533446899070326517","17788735370835052317224182711467216134690146479710634688273650370951230404901","9840665370904113434661468973557421114403401847108482949465899631150766783733","17357287363046228581837055771327121704742940914150998420465281177406182088510","8956082469997974864521346025916496675956939495318858500685756691488425559998","10583741436561099911914917245130852199607666337956354910388730829023746895549","15241902639811607164983030447109332729761435946009172128089506810551693978973","10889882303914055687481932975789161945462141459528413507160087442461090813788","19789561133254944544821898921133697408237804586549835559829396563401674817160","20741336668287037026472434608739333171202674306575625457456116338034432647230","17864073449995977742930566850933082711031717858550870842712972350665650521079","6017691253505466300212182439349954426085752315661098358839308909771637792741","5209125836207196173669497054522582922896061838702136844305036341250990710540","8138726312837322624537330169363664364899441867118983214176695868443641051381","15491983986041746833254372934846748393213690608865689646440909282144232382678","5054332867608171303802774230688792431028169804536607979111644888500809938980","15427030776591294577308915282298854681562344215287630895931797573417982096417","21754057982677295571284116502193272661309010996970316384923307174180521790164","16265286590463120486705206231835953324076688991892805307349612983237844034032","17679791107777049796013011282788633179411040182820636236163074053597517790779","4281652562868629887097957174897458165728741859103571825874408386197225591996","9168010397863299719604788533602757515513214141450093775967322808686129400625","17584182367226175071087689123358883902969885218985589531538416263709138156515","15671512310414658663135385639435845966109237059155734764323312289873534719186","10536294659491685326297777845632759824567028904726211134518740400643540109527","13431319759608247201135260841651365578663315527795431484765940626659812285319","9584697124715190200241839387725546204368618031045071660911490086723434692561","5180327104839158483066851400960171505063442195966219343315555549982472660055","18888217223053385111625483360538133292128748730565502371803782424772027937822","19535732913737027522540340630296365525208404217634392013266346283017745945894","8577759627886344995887423695190093296190181539234301534326157005220006624466","16793670928407147476673650839110019799844249677846432113010280456483595763987","13926032620965299897272071104154310460519723329016284975305942957859374938463","4794697578055472890255676575927616606591024075768967985031137397587590174501","3529566190782060578446859853852791941913086545101307988176595267965876143250","3975008029239568933166738482470827494289192118694622729549964538823092192163","17739094873244464728483944474780943281491793683051033330476367597242349886622","7367136451127531266518046223598095299278392589059366687082785080179161005418","11175297939460631138047404082172242706491354303440776362693987984031241399771","21687543815463985355165197827968086406938428974327951792877419032069230058777","21156136641989461785420005321350884477682466566148802533375726181416623358719","17347558768803521970212188258074365309929638984714303299899732035040892048478","16293716234695956076322008955071091921491953458541407305955104663269677475740","4206144021605871396668976569508168522675546062304959729829228403361714668567","19988050626299122864942213847548542155670073758974734015174045163059179151544","747972634423324369570795147739377097591383105262743308036321386836856106229","4612470951309047869982067912468200581649949743307592869671537990797895413707","9630852913694079049153027193127278569487291430069466630362958024525616303220","17941539917430916523930519432495442476511211427972760202450248798031711471474","20332911350443969653703295317915788278109458962706923653715140186132935894113","21764801803055897327474057344100833670291402543384934706514147201527191846513","18792043166429470991157980448329308661526906138700725174612608941551872082876","12308177224490762720061048892842527800271687977085172836705858261595655154325","6234555076867437297776538521925679658360922070165740193866337972293380196151","4651047048822067434403056477377459986292934655827821636179452835839127581305","4762047093602693619418269784972874862577325737690375448572644958129932507374","12373514879531674477721132062882065826558811149582829246378921774344318418269","452512704634345955634014968317367844987135264395068376894497483188243356523","21642936370936057063268550589361090955573362743817395689260298777690935495218","16170209200627740434842090607802586195654207376087117044989637541681675086276","11682826760471401430136435257946377996085824742031456481961511737883954750045","20628055165039718158878805520495324869838279647796500565701893698896698211929","16438375313036818694140277721632185529697783132872683043559674569424388375143","4855690425141732729622202649174026736476144238882856677953515240716341676853","11680269552161854836013784579325442981497075865007420427279871128110023581360","7052688838948398479718163301866620773458411881591190572311273079833122884040","10339199500986679207942447430230758709198802637648680544816596214595887890122","16310974164366557619327768780809157500356605306298690718711623172209302167675","4572051236178600578566286373491186377601851723137133424312445102215267283375","20933392620931420860078756859763708025350478446661033451436796955762857910093","10145870387395991071594748880090507240612313913083518483680901820696866812598","11173854866888110108878560284050142518686158431744851782991510385755602063727","3895357290105797542988795070918100785105415165483657264407967118738833241858","16358886674154007883356717944805100413481233709808000948036974385803613296849","10544067501284177518983466437755150442726536257903869254459488412549270232123","10495171258604974589451578238018388630585794890815982293891430761424812600427","13820724103604550843562070971473423552484851063169471886037640613650155173554","2334954333435579600152488915208745055087482119087065911968347050969338669409","15100284614446277058846085121308897497066957549089629374506920751044105723791","8493821960754696376711287628276980042183127459347650448500304251148421115590","18612435536889941393944858783110719304584209891406420832295898519317994950798","362101794940079733974215941991047456600874474038781578925062694203564740952","11020033081956343850903875701444955317664141075326494650405276926536449284939","9396289482656518627529185765935649373549564165735162258912975312413185691167","6879055176150676925438486069371149089824290576271090206945130252868108043422","12466610601804566637227883322591924115458766539177061670432424956205788935144","6570302110526154075173287644133038486970998888099669190857256824048085590052","20997862990590350605775941983360263378441519274215787225587679916056749626824","2642485040919927233352421501444361753154137311893617974318977215281720542724","18832940311494549247524002614969382413324906834787422940144532352384742506504","18751288968473015103659806087408412890105261892140397690496125593160830694164","13938622158186434739533995447553824444480420613323252752005511269934155122652","12878982657080117316101160964182202074759312554860119090514406868768962707099","13757859113119127982418426758782225628393556023865807897214601826218702003247","11817871682869491875135867072669251115204978941736982465520516648114811792373","11336448548896065624515261709306933490181794458266726453198857687608284871020","194970717714150352477887371297168267861902418496792228400198694925721020795","4999282817977533227652305360183045040853565298259070645110453061034932285549","17094174197873140035316532568922652294881600587639905417701074492648767414173","8484251464872873032022789624790167173458682056313339863651348894878144808746","10260366716129057466862964875306868898686918428814373470382979997177852668590","549263552864476084904464374701167884060947403076520259964592729731619317724","10052714818439832487575851829190658679562445501271745818931448693381812170889","1735373362835209096342827192021124337509188507323448903608623506589963950966","7998373949540733111485892137806629484517602009122941425332571732658301689428","9035170288660659483243066011612158174896974797912618405030929911180945246244","6458619567307414386633203375143968061892762498463026121155477954682976784731","12314261817227551876673777186352972884847144237148169773300066404053441924532","19869454329688183813243851218196625862680921049019496233616575272637276975230","20326917073492686652690019138603910654692396590122884746951129061818467704300","20403270805536666081472738304916561119325397964511536801752236086414818653063","2865941730880218719188224311916978807415673142487507504983320505748719154068","20614246027521726470902405957496110178017768563127335842405314212897493119848","12060194341463088508348622863463208827312128863463014006529428845777217660299","1128906798719793375274166820235650701301189774851381709919492584451845983197","19670876372911656158743764425809421400123168087389888660308456184201759209723","5647230694522866559497222129254930524469944430191328619422533907417776118543","318629082509194371490189248876734616088516535434806492900653650176451776632","13685970881538585172319228162662520285656571966985351768743970447782846353365","8283840607829148567836919316142994745766280854211662326632930274668867638198","8968895518159422029900464138741638511289476298837958524156654785428413265371","10061801991000917366002570579819627134666386452411986168205986791283562415829"],["6652655389322448471317061533546982911992554640679550674058582942754771150993","2411464732857349694082092299330329691469354396507353145272547491824343787723","21491443688002139478732659842894153142870918973450440713149176834049574486740","20196926676989483530222124573030747187074792043523478381149800153065505592963","12986278951352369831003505493892366673723882190521699331613883287145355738793","21126146258242782643168619000295062005037298340836817770565977031890883232034","15509665795506578582538177431401381655815033647735781734613703976071034655246","6989769181472743404364681671283889685042701491627165526899522083327752110839","7062179885254277466334896166987547257487047183881628199983668518000910197987","13842521112365108087725039904948872289730786568469683976372377853164252494752","3830559505943186272618534143266118508463381443414165428900505002474439179836","17704863473432653834041116667846189591617394753001613253930974854399793083900","875580502229441633079974792778818749112423694973231971690365132230865385439","1971134273535892826573832061354985059300866001765691176219451252512658771248","4865738840363990164915013008693722144676933915103280504727326977328013515878","1148603338028060679975883868174895825055359423662532941509525326937127571764","17506086433923270253695698017062834613463718526046463655503742220257039588796","21580033018107258179208198773211859664893072138803756118939260252922297665067","15411900706973212043830142913959920716501447427702082030760032355626616412240","12219699506725448409610279620972339448030565224304464695714944121760832152291","4525719544192047521328360848269156485222470829314314216955024799558286708479","19667371373588322336224317159113441765198420040800065314868656839300028747331","18916925604689704279265158984702141998345424765142129953154245912230835240445","12789343981741773931665143789673052782408749041041266509485929045869073416222","3094428508959717445577232225505810354980663487713729230015754183012845687401","18544590634480965569098056786078005630500574069468005220462377474861119476492","20990087440247450018723844204951613913840993427110495085701200965767234569705","17552251989761134508416634118845221324472178264364440017634233349418103869223","21000797802575507763447855752602183842956182733750968489641741136166640639409","19292751508591545849778577901067988044973302547209758604667395356943370737868","18314088316445539319869442180584299715533304874169767778761887632882728399870","15003745150856597539000559910957155642193629735521291045949652201905498569732","7839443900003691950104175747634267110464104444913379977500178134209666299140","13568305490393393394812598233983935295266242465548739772708079888867621061127","6453005227995051361096639028742707098785560656441339640433794156400437698140","1420171596348195609536167209221442141824294918625468780931400849866478645240","8347329128252205996443084339884155586061343024498283583400215109265013719709","7893774494551056447960817286805128884970061671041428326788899872964096959040","8970476243368194065341537088653900235777512204874037182428362347342487241690","239049405935404678508864874854718951364753739466303321590415544572014148257","15772878921699764223771017074289335629553777447709755479885293350677783703695","5416082112919155131434995906647355834510201879607888732259087164602171650389","4384524908062410354304345761652962203632712291085564157560146286207296352050","4210984612917608245844011498198864216639269565627982123611519493203177283139","18816442907032290878644773027005263628136050677095986565400687355912498966559","21443510232279945782338486087712914668515437675585863788610958361560172084515","3234314779308300525339049581669531363375743827111579883853941968586490182859","11029499234949696730080035941750777601416171837281021031653841244636590396063","11145210633226924132308292113124660576759662647204939721872338908644906571564","4583160563963432761409369246361117506465307518522062239686649163525543782173","9813992026757562966842771727657080117609486122615087352428596024939855084450","10084171857039480706430282187972782725948479260179367780776125786119489581409","3874212709197875589640151274548083098712939093643165182881681226579903752816","21595542491397091124739711708612983479307589335640792812157875295064235960610","2068530815441314105493629066002923150651375034543842424822712297257260726954","2673459852071215292298131389250564595426361004231758522146794940265552265806","8591046256746588406353455230465605224309754008961178558834659065898923355164","1020055192431352394776887540248098706183934464205704158014904833376067287118","11085709480582865378042656141271006552092494690130782253913953070642865919312","5673844083530503489429922596812992664928167369104420134641855283771127716005","10492199162275168254265892158402955076490959375050993042712629236807564461542","2280843393156259739329331366624245275580688891778782679394848304764573859886","6807797027131305026345508953353882265754363485246407959111359919046340709440","12692191384043938397944633973317584101723715998700063415107128429315536223446","19818676957110967644349139912613239435706480354664804036688552936554140369382","18055602608192644695569077694296748842203151828348990995792087204755925787339","20934555391215769430553078793246717148484784880715746179415906355043590089450","11420705181439111353998210442417752592951340005396931802449360401461783159557","19878854521263746227125001670931867821366047088989510542865511663910116386085","8568201846715449867087132677683368912214864824182424933182820310911278496552","19198701614488576617610339232794062430644024620523684127268879880793305460015","15262122764244854433806270478871594904740306012582364033343126589996733802868","6412758421155818207287638337822550233376667015263373809976157264137577776202","17371585001641430978766734501830788427263945848682170096055857509304472649262","20262970042379497707724791203314262108784948621691331141565359315001027736581","3859750447119748295302212198327542106766447958113540005985799287718502362717","1172269945800307665458943534144481495673510885455899148864236015097947176746","8164247467959680477306326470118519335673181279975551434197731340070491876250","4513977811114181395323888111232002391599397736872779927267726121435887238972","1075250595927474080680862736233039825365918646878264905022213616210377518447","18658420120424372681792175914064174056413842231969276203770574969914576681364","17769673440848360838244654765103041739044212539359630263894092078288342647801","4319086204044362848967484441065231939136453667264715596505827197873119273506","11221173270629292820060668122527062274557317856738971635698169204652845111606","8635411372759272135249379415383299350267629947167809163276219879514948820576","926977621651476360285369760355547766944001783780761167546467658394097283069","17702143780592866375901805387463459229828093905183622296234691441436877570082","629612289140842594504574984021125242351317893847688437087866691775821981724","19990548577495092294245865870717186004301934545721835081514347926537975465539","7124830628609719908679298707909792306162298058570958688501370177898647946696","14620227791860703231425817538142948793892390269806790476396226159679984968174","18495581997440241868332244230687799183899751339442721677540757155760745277888","16922065056093401385376103551657968760602009001905886435813054626317776258714","9969610601962874779035054685661667941954971427956866645694064022029705170229","15281641269114187762159685323068136816556739502211864119670902056596295644116","12114994625438879103001132949163961965524612903017200394727056658298824651596","4840986177718281128440833017205097196672382395936939379498412745183060615212","12847307562796769659308999092658905656250954898192781948610713494470441775991","20290096217351155282642224215178246911041509999959311313223857240001143893317","16151664509646153154405691138084115125600386733136285504828908979176781265710","13848845391482751436287906247470303487958950799995701248612703022979890932133","6335716166231441585596963683321661194889815181545222079376536449814718259931","1824302750039354704619545544386637317858342555634601563660279997221547953768","11327469654081586239268713126961534952233559223228327222485848924908493444712","10077703415170135154603829433031861799853903739210136452726077323833067256620","16368073884579385814331927334821006319227867093692644942500207970751483237405","10621580796499573269115131164341885791299038227955222944695715163010783205295","2099241376651019397894434242565225315652133572870234550073686122343103853816","17104632243449417396641550271977294699471083572885397875525767745512335891599","1935453754847256492223646005402770357836971113012418013930273797463411526183","7492761611332930896292052363224494314920390056637668407353957465667515477934","16836705924460095689555600825174696605443212968244843485187771119291716736958","16995495500678141665340056658079449793587669420913589967848082091551329904176","16097379973857697753436437302681608056543122759719328497348770844548177814262","17476569537128329379528694049566216604638194592812108658767104922628767500420","17997217989870184804787026924935938133194070033518938653831611194683423549591","17573343771046232580761295935281170028624495346579002725814597714902588657750","2450087639204541254902859018960918562514681200270997307467560465282168310665","17288084325555056222618040923753050382954155896826087372317882602328092535440","21837047676579063581498107773514419735425738753079336764356909012851439336687","370061273472837873736743292149368449614309676635341873070086681342317566380","420725183996224279379885018872359102189091670793820517618337092091910692771","4966571645678139143731798992823327185758562224229132271884647901363447388530","5039558223429273757296118284876763395391635773837549121798873235133698166026","14663152729953724779401067486012084029581847325524052152795817923033297673686","7201040456590575809960214033959496417566605177095808543357813677845263237276","16872945504528960415453618286121813996587432836152082188694652370255998768595","4914824783780909279212078186433590922437371437384817332713271291839616026466","17503018483514413315464207189113334433424965178631599286655188843769810245465","4087750571011463387872022799241315348852213278729592692674275176152296405923","4006961923780091252337105595934918049936238157468198971234322013673884171131","4481908842184366902145805444001507554481032302978790080019710161108326487967","13532316826436461968093937893872910736305115143550039673102602344678825540956","11602986656925867325907196773754426955346837006705269228226729102186031417465","15306992574062791537454541745213815567999895856471097922112648012979731636068","4497571735611504561173050536899411999551839050319538712220770383407135602945","2571242673174714867278075260451133687893879636121064640779554188161591611843","7070272070524747733177730083966686149849667613589868731851816020060781720851","1308310289745495626002351437755820460104812708071634598163946330870933261232","9483468192990391193401121929514821570714432121414330663623018046165053411090","7317568349845215930675847155716598288688799068821709820024570206796617676748","1918505733423704616434273602054555051755671749253598966287072464475922854850","15158168161084905689406532256983805923258003804476527617207287404280855731962","6855540174355511438343304861678411868002455139032857270673849263857877330771","5989863238360846166935911112885654223487221280254816980802479355446167746774","20283337058688740322296928691341300752003492063748410749625272920572074851396","18957132189629332408653055312790838576277703952267542471751593810468444454136","15764518568966520670995753676429154315765754748131847346608706222194564055358","7192524197002826721654253762628934164676539329903087107420445743247046038858","142950766663597487919643890566358241353679421113406309294925836697585309311","15012262168187689680572958978610204856600235635916074406168861726626292993057","20795666834671497603181209610179324236645779324677512349797033323222380300794","12650341271833683789775531792948185319868795529390391267833516836256688318306","5597700232877580665749288204589530549415282468176625525368428476461504532052","20949303924691159143653175365242293984396858344688574262804199947001630916385","10746523145835332938672833282581864816136388045771578294905302886974358762209","4998982766221590779170630035756820066555357949247521575936385387288356143784","6936999580131731861735955554005106460473097800566952971315565150681540640020","6670695360676548472482680016233507548657051302712214051977034166870814430578","12210816592786563975173850937247594401582085430897698766795696447223454826466","14933901149105284237676334791785996160108290333321693498322435129559137152007","3848529433916624869590379003597911090976938589461403388133685310398004369431","12778805225074604003024964969486878839359935515509480774809299341511161183802","3288267180428684202786697419666969564766921974531343432588030535602163038467","1272672432174256751826350693883913844502039730140570583479554071765667798207","21130828804874452930669244946376257892693846272313548250936991077452679117587","21254559353072473881932828401787134230282801383134765683324465204971002861493","4116075860631781527931204624078712926526805345818156200756399332393348685924","17435888597009729827411190999389277840088354756277916760187756022854497211746","15837398163415665169712832984380121382150588321621493928953938599666110830812","17988638446757562417082379159769772097890681265659458369075768452342579854303","8144561030363576879343874888624208577604401139613622673042754207987577727758","20020299925602421262203305284307419339160247406220693128040712457114283033661","2945951415037890626891130390523013930737768652394758977777336357159436605764","1505954324723537402640844232704189835623922400329086438898375859826553573763","11851584491756305117491374581845512067704002072833714119284164514457248861803","14471204965036278214508938537949717553799007630471016532866101610339050785912","7163557293233604902868673807221391042191134560333950452577270522828534690707","17291625782465108601367695465389799786592304061550212130987221355832952230827","10240907112109243116543462081552827576656826251172050843989873656917271396422","20702261919346727858635106264046787321170414155594199951578791234276181642650","16678253307828004252292273162411388452019952018258857370242272543091326285541","19810917631941180098047817620026253706643400683524412974923209268916769874447","3357220165225360610202375608872621445880880830154732998557832689480921421791","4392285438534542495332422274902727975330102148971785438164412161504066619105","14642025133729666610167675086855441462580619607677226879159952689184960379911","18142623439987890999821892559271093087005885278955082040377769578204898750505","11769399023330099592616157336702104329646487200891911089287290893650532639221","7261353756299584174448625214367175510387913706095214313669922259027644778060","10406994568199070863112470594593301582798997458844791396920771226539013327304","7475277967562870216712397220016587384793504784585573136176313471517144184018","9598064630327104406929367986473441777975480987434868213697837347643980267620","21137410002545951849752865514437404724653771608225272412595423069852350320648","12345612867231779996383303763804719815752861524077922121654106906093103051400","16461750199070055335468534730937701659470268635084522644824623393184528879703","7829250842543018165409887731515254191943527926556191989558018633300783421935","19801151644322693878208767560968285812646931156576102755771403150148125880648","808770634664491371274943928223981161442027957963181999892266696287962813461","2298122748772261447929855283951027113218922003687701626762072351622993276571","17407798064458858450209051887305178872029674498718760624162479511390762310526","18585562277464562541666582720366573863334618817908062612923861658144918595030","733976598693219656339731904831283238690050114241501938501377743874139460889","11316063986696838098122262534148335669847478050407756877728672233736962269417","17614529714381496379478130066245111825610297227468263851608027100133421612826","12110694197729365219340374599835523099651939156213930558791147158357810646901","4337343008663255658976574468931581484970687989356019720784093082313510905405","1379188959674402095268172673987199124815512095460112504778179157481327937561","3116148242507754420428768481157196067508084836097458698846114802493377512591","13306507137873332434793374848948087993544118494881134631519748904811343155566","18496878480807017010077624766326681523549495609998881196570603040242554712562","3940126764022508707486095199473913866137718790062498893812401335738707507732","10030078765792498033316282784150304209584388923549357286679864120250994473810","18519871685760382462428068450331593474924737719734568498029727699878543899254","12599428893576891013523136950822667754415283296587096197120138265392279834128","16038578953099895530943034305356008247313649524436132877362941968861459073483","14319233878082524834510736727226054073026413911339853399113450188859080424272","13710161613540579690732775978855380876556751245265568031703536595040993113748","14958726446649273856607176275240008023824615720456760403465034344703779274727","20935428111942360630758629263346308597806819928838924586682307174931367773605","5826394436548487315966647466017047216786257295199620110266250301500717796281","31401797997389676486806123612280306684597605608110075525648021056710776011","10784171495708237485952707518956314344821522727746927291389338644844400581452","11604345371765580191117799693565193618158448665352599382713281103552305960442","1378145039624937931836538950217364481423707761527018494355648047365613434790","10284294167221806561993937798090888689421933711157676807977401896199778472860","8233695574758520342808807499924062869636681352769371531557726871630696672029","6570581391072134029876349038190171593169496519436674767949949730275868319732","4026501263908027819614805027945064360196399012004574117767831931274788631138","21091098569404004244061462065218203986433580687172854429523306262593782053656","20711772916118045406356429185975897495222240215931761100801599257137350834799","3165519312799351250309462589160165591299333587158531489859211268084164422251","16470663723473939739601217501478624726068461799539012562455639586886033078064","15672299304945968727435591100602007503785845873606917887638890765525875123857","21393538327627889838198844493522533627143658125568123117776524944297103649079","7688819203734248199049004650451546300187194458173935784579101984183800649342","6609663518412297884695057080546416278366560290439222127471462938252865438638","3476303650597281786976907813110835564442121684386467570637538230409080744769","20633582549754495054832414039299188930065286005370053173386561254823483851717","18067076834611402459142612082327591538480657933568191619109271502102126814407","157209609820117793892254328219308970217366919934739036156851508233236414461","1848396116513925340973398423998379465460554039715233953825786874352442451413","188642786730195655565401615804782553245486295156304142809552609651873793325","540089254487190924787439362270708251103955915909358626209177199653451469720","12796274768956950589847157187031845061404119522843128177103898080653493269942","1785666356337148874573621868025910291826158842346617719666738769156993598966","20649919247042517528354490854561347316237285929352042389729444382153378749538","9568390566108569727471722677925269460696523515877621230569682954652430518787","8590683334740232786825518158771304803451657249486419816607179533515442407283","9321198393538172042803957409292145345834077448228642847843261373640165958582","3651905214805616378360839954289447530035139753215923648216350128870943481828","1324345422558073117779462079218851558068746895262914344818945294328678893083","6666363895154434021620869731925915051086919707989020578203743660669796175288","9850757893972463103359995012900314323213006625927501272997539940766979170137","10214293226445704940138790188111862069675188797488928722469679760666574484266","16862124085118494177559484642483513597285992646267864845521573612482278871023","9172340118369291059693735314505606817316211450324955429310200429408035954801","1968992755714619414656181112336357119271845800144345284299978250769356388249","17192498940296212027365280042755701662136570107224000496521552617655679821443","10063385968535643122430064779260670089120686456635080613693015398478175344193","20101961459945738562625328882763768836449780661345042148985756598106706734632","12704305975772252539534386080950631076046431529894091327218544197389260775334","3008242816727585639441748210631464697850194693570485141354082562181236010097","7797705698071555811456747812384107102104184812467361013142453143842134807658","19323240331433203844038522035479659453946066968727795017745942269828428751105","1698137797127320576751729191866734754105401103859852376273763815257758421427","17656850887825900397821271738817912328294075224643535784810269137125067875996","20755447986835730799031196367323817361150623932048563112034040627213597261325","6221130271964372280138992636208062417325313096379273438539556580491430711297","11042709376363248213366896208587241517252100440844476816212498352999929578287","987361321094619571176752720390429919723900732295551211263814448408232028205","15077982986114392945859048373768437818569856001604485167476360943078774679228","6278894644165961404521866714059972066255652200107181684047812674333675794053","2649747800006903047073625320829560088088800522557851927539477888486006072675","2636278052351769676017824297717609512488651850924228608531372135635042762078","816232991472315395984098922575496846552245086608787214581606973359616326446","14372687274434205592004117128588852491871014819273428668840779210928924573820","7351401720390274950322621121981079413650308506660552567079785209176949174210","10275293929161727274572318228903710245677747557851999483919909420098936352013","14869686444606195206734119702227763209172799407142930791211203702643805341518","937617196362766626935279232045712623531859540210120280128165029613358941709","21331527351771920568751070369057714014285398281585036009305608379072813379081","4305436470381074948146072259605215282335211631970525440530773004228212378618","5894273721571292784412707230481346442881109207745969297947253583203466014760","6512250441044591603946512492071171861967500633638753443182294740883123881284","20863871952569294813936866452848141274047362082838805921071316386912981651979","18788566662709810970880679984141390717017951403407913908833463086244783373013","7784927597396249543149135503684024377171301321636804832597181795981969626201","13818519831569592521516488188127966399245767953522268350556654747680372036664","10515208647860053151690062640705322684876580250632027862984821874343071549235","797604926079325807488629085866693514275115789253871397971708541758696512985","8741784289526985522570446847275649913333939699807282742190607491216732972386","20966712704043418981047968701828936463778140093909973286855779694780086635828","11359697297415630167449040380538108774924967116147664240213257348125754475868","8070907838094569287067982462230761680706116783989613960066342967469297961118","1868550288036217638713133945402464194193242298015503906068429633793800456561","198709459347510170000840600179608479136663571567208109852828485236018304733","1601154135701845545733926027872374554514541574822026314034696802419388627041","4363994778006302991481199477873248350039564117453810275561422974475581105893","773054378219982710451611471050404495804413666789496412742983455527754059148","5209426340109575519362014651321132459061755868557415513439993327176584352934","16124961412020675839394907565568143713078242978522632778625312854364651991011","20812496670075231301471694692369245988519082317145989298573032859079075730004","3312489967581906638742585802390894285073229440039144559060030129184388053832","2967475373447822846542676378804990140732835322255774209561143670843223463335","19744585401442299381952694102570931935735276268739851233412754166721728873141","20026293345566344685499234599699178313754630774489046573312844763673073616936","2611303659034102517884318354550433047021831422518437228002960700934925644951","6230291832603218406134986471162106408091661326026848531605999413028246206577","9126162046556730019959291776456914453189657463686708035601186672661595109020","18827736146609035067773173111376739253733288103277133456626928961785293662143","2328703958261360872869074208611873245571971231035163763965210852182760438390","13796410059666172174899788866809560044715551934510722965495280798363043241416","1593663256684781552813616365605526150610454082601584196604084376715746899324","1565874145189898288764434737762721576951043839540107044892767693968417810945","8709849304563896945461696717753976956465219721409993781555147204068634555572","2994256803561260177499267243802460581941891553208150783951937342406846377191","10452746656507347152042187616753027475507881362159944564077673851918869542550","20130580998875572619695450234900655050996104101008767761546912649074040426200","18926933358104691474037431437316089682088433006245222723356764715400831411716","3783551594057498940671877156409957274854990650480535806320220142873170375307","7919031943604095374667473717154511882451510130166237539514111182596247372692","14518552587329209714850286012780632801030157943402419401997576700600952906519","4770764028263701271241862755569969531641408032906982530346384375773459918490","10866502826034731763529371496585294375373238783964914673031891984092997621879","4234148117462322266937279401468367908013627589417699250592523530383852950379","10747942066055887965185603234524367638106812660210378090215017248140719240336","2587411532912868255102795810490361867789634574022411742057853375399270197531","17350061113113681344498080520518808976916692173267298878258722510332360424059","16490282364669098969805528215926442920328903121380947471680517193373377657129","9274691782659584680377375192682066090127280485689527337429804211265749864190","7630965482352419767782717986075793694403609453648729580916814032587325374653","9483872310024003776681196467845329825094379763716541754956796450187787638623","12182966986735661215639970080491757244218854808156498220088212871061979325833","1853790963611367149183440339188924598268644281518961106776656221408171642714","17425077915972423995335545370701802959607559878032910147159424242864219303096","14571075346526399549826264845894977639678567831720652860528738036970272895919","5627701855249158721927849603102149698163511782011562166637339712383551336091","3620805686755372260289125555061886982808014642356719556961142525373021656729","11556995641752009899073583627136467840237831247117281278719511600076965602980","18960242154096055221658318882298412299294886669455506299567210308762501113202"],["9174141306060971809979631725764298697615039980311809306145004207410652431953","4847693924685156250211477469465516228032151306221739650606132660616428517315","19669833054057639609249840291533340493211768292967819468538893000195036768991","19800508893433268850924828171290876015556093796000695603651522426066333836892","8244699449852279148780456022144420353408196866113049322676048275081354214716","1563672068712965454176533719400672258364596155638916268717470967009721945171","12723223712027468580318230235559705540011996847167975439677647504573149248849","19944398841194165937952509356635863229327574447452745793253427406349161295763","21218058308392585368594275702746106483411305671883946244077923955757637296177","18442884961885927579732373746933397748806426938144021013884176466434407012116","11138408360119814115926439449668526422561003790198269766757675305576549475808","12724564576884231109847024566806896391934587839830522481308995309797961575379","4897733190252075532660075013731462724561461746919488679609618967302541674417","4797748331306263412471031924618974997396620231469532262170060449304337691527","8626839560132907403537141283531395025838110825355541158539075100658769738351","6096293906324574249636975851522292408228519044739444932687579741964974917617","2351617695830568421216396081605990689071283678701192113347036659596049514149","3045682390398203085155257535118136303069379656645406266260961816947178911890","6935829264874515341379952008241845470659188886156484974987865751370715745075","19847439266968955911971997829840067368072860877451092633069920565944933744280","12795097343831149148337906863235678514689648096503928066579129201713661539889","10424580232112390318877053133877999442988769389050776486274146627765228950235","11651452649618223740363812212607761589812354035139843126315028745587570714609","21307929358023177131550002602820591970791247513576735567457471459920519084552","2579908580162153663820021562014873149811195641589016321720930006635393981680","8198198178555784054784079137247244121807775986273563786249987394640289859893","17176088986876377315956611075288620878117708836881362200541916957398026761276","671389874397910339333118510595007038137908096657753354622355890021074216004","19161949137729278558310070194809106779119877882343914445178348849980058405327","10827554013954037091657804154642286174226562252063767377995268439458401752538","11693672899474469123468133710607776304784343543318650064064636202512816205843","7026547767612627656560992117440221331093280829523426249915938274837157551621","14422968137896343032446633683271253661000603582016449215470992885331170459671","7685352543184863430081115767111935982586458632527708735083385591291346555502","14089009391529192464370954954330128327830078875414722902347666490457756695535","8424161061743752192085022963953944100289245618074575727145394775891645849043","9809236779073852557054640507912802523501426410996355424610807253990040160483","14100245203768962710288059230665566265892855964739454261791429988929622355986","7775683622333704945225255741567928967674629526812606133980425422182282014012","8739247215686497264451630351996892836638898510934389758205488381695687859658","9431876969679115468275053745264413939426444105271849398322497961102606290132","257914055321743732506701382989022126153391940932933566664491918941925247878","21801414068435960590201256257290267142214176965736081788536576642934903066059","9465495933537134443327560834432669768951376466867005153580146079082722525723","7862366214258716333873810314803222267215825847232397599183717032713290878315","10701164906390193792620967030790214270231326273599373762943959252633779929633","11951628827727068395937910010248864431667047516686609553745879936868276916066","14268744039571470490378560085356767818183790841094115879980723591887874138419","14468215915818797151199796266933432577607248341385185700017147731054148927023","1523824033338639123415809477892820349580561577160869448927791050266158538520","13559991428776910947424645696251487328999214391124402586267086012691140984198","18151203063828433535061866995346135260543721730169485344610433976436663085882","13436242600153492361692256644258899977135098134175123174795293078081801647137","9384556671429507406657070680351030238568956203341356106463890924933167416522","20321079285577981781556986944841048777999006905303986053275199507771332527205","13510502130738135726695195328780836716597947131948116750163533622597187969844","20903049289119144354363108865308751668897757360882852151457514926552553533040","5611953645512225417723205546533389174830971368309601830751921473015551069534","8816886019615642422040038431962872654062471314244185285424018745071289038220","16751828354835345790163611999302863949792305206769993810746019449909446216365","10421654749141018171116296259626916395875529220250947127973888230084671091757","6065225315766552671037285757918350882361743810888619479819895087632281975681","5737755346739850738724717271213687543479332312420206954339242459110768587128","14770522272891919220644639305274656491731294860310497013287297810648680944682","2777394791070450473479179489594969793054480209411136328689318984981401732197","10039559932930709555975364107098145624058027439566384376771787183526929807647","20757756003754261934858081777796652436155530474748550156383127600004580439167","13253166894715452480712170898662712132411702335275401581167208877688374856806","2037004052447343668129085129987646907388123739343356363273464870501805506884","21829471491172175426560705585746893969222010633542962882847909490991398830669","5130395545419191392223692116621486075405299333195732914002649716762739787586","20333821730990393095934147177227294218344864602777744425090741435432040213391","13629653802252084129446975515814037702423511189484562534040643669977716900228","18489091892360842692678715136565494502607711254719045543684163289077857041829","21380328601365035012832876315565064374684993115210423862017233170195286906080","2280052193465635727584791148501382679094142036232980037838088033232747821762","21415541711468815972744677841317235994302058341802530962394281077076174148777","17146992672828650459975820445250769505470616910596779130798889014378635881076","21676475584514120109058208398560066698690773910598518925936412952356431597439","18337052978997482578725645166749278142628133291693686105612531426715865276143","14864089429815580405957698645045711801464462794754089671996837547347950054532","10834607317840698149140890207826430113987295440254355899459691878793978994131","1157143498448645320415276909137008396665083714591338741616893578930275511205","5027542104048754930085470328670427788489455916338375169351586496298129661248","1922685817237874482932428650501872692326329693528175054457715565489676406535","3071473720617798005831658342971536643616129392641449174655528578463370685788","21091078808046042460442535848913779439792606439995062001271357804782672390627","19773167374024045118471391738750949555178717045037157435777574972149053404157","6418695831178793575992210834992785624340084513619644969535805236049937971859","6317875495482489567338519005308431806047606843913867465201005132273298011425","18001249545956637376455848019549801116909661454019565655561439372098476761813","15530167556609139699164228289904946047951254183080358784988008899829027775935","8702757129830652230304011519426558036441096750485189115358314568895250616455","6369986882953061252605652398893489899416599935424066958291402945530517772170","6842894437627604179732847187262933342846269043996061072487488027804029200046","20951621154051947571647917571547811655800779287153833018533872651413529893817","1219277535080749134805291725937516331501172121638812333911793209536894469364","11704605822590166851511022757496386950530399074796545751042566537118336773236","5983427701962592508775640503988144495847156070437130549832329402380170245893","20169091361583397776908351163571343158517532527313940288212943504015977979442","3347733015762117176159731683196584632702931062411889821726902331981723958255","16217509027282489850987935065936382820558307489954122630844029918951230268972","10781269196927764524006466217779648732772805761839205677745819812868343369087","10568911823766972365218731330080733630028238366288098114239172953421915095075","5568774544682750792074131352530555554984876659733959079036284517928264996437","17854353469028651373397049175548228061144941710027186166132671198740388767529","6573034112757039329551886086829829282007989555105157401271097204633906940776","14069627287078359391137554212536883450595451640858724555679971658981340584258","21119713641590541511025673864154852875977162278614553796484277752677323191505","12802116677235410441672624559825044917295689876859311183079161588690810005363","16037054471696658545113065872215787085337497333273419984439267709950724531124","11698654309680908244303850432833183602706804558317993513795996394673734185716","15147889780127043019188099948246961619198549928908180192590946633702778981583","3657342516407201801006680507925024451922115018712017224805778401726428603983","19776786467141868744713630352693556348834540992018636838044610844396164981103","7980994848490005281733955776875257044050741738176865989521982608944874160873","12415191330803073018395217955802011585094769098717180100014182475381600382452","9300986814650530426668152137665814177758578011365736727321578452726378799933","4412208980274764197258090802604347599791567698589180187154608728755887977460","2582317668924231956058541757507620542434237159213236485179804217989764223164","19860814395849792324574773787600734118308975251437485131415273418632757301303","2765909129639570206766170018363951893338720647679193401532780051354569922989","5402210382809272147099442645489124829067576777592680891367494969197685281513","21011104174655621871977821285307554463403659856745964274018020456838460357574","7018364707286303918877589672878574811337524823085078243421192184715151775983","136380103284908296988715215087018020601815024625535396780012012453684253071","15953315437474610448052466140270091879233956524793052736202793153707558909889","5912305909658884889781037379491781973092020933879206417274479331390062715252","21575635295587180789566592951559325743281772394055590203112195979769645712827","1541325805478255472079288730846072146731241030100908414806224735345400173350","17207219201921814683730773200330679841907450967511507012179337438654141678023","18266907794578843029196926509122804272900478710738403531664855427655744759655","1204224895193276222782842236712348692319665277014183965830735736728887994581","4023246588034712778784328407820569751989619386134504404739514704773521558127","9064437981037864995763386367268294611921404895425171966596873454090899491243","18733802217274421976148972926716884457128521840010001893311936746027998476583","684088380644531080099595788833220377905013807951051638705160997709156627273","11994830816367980341637110785269531718699655485484715851375754143223090344544","1831724566362300629700078416489434571462666430381219293205871349415506993475","476710745682537342427691635955087951551678644045621275039835625280220347951","3586272766499559446129476613035465343616602918105042144185864609818186807939","21220348736799044560439132291243370111879983677197111626309132298278891334631","13683795063599185801186093771702503913590598475095473714851383723199050309401","16118007386401646906425171859166434660243697555307927508268622819509657450614","20930641024767526790605168032291665313905337763598128831404465184891980632233","8098646212401100552303711812039666794078834386731698810205195111722330322418","11585783577173465460243373201831086724911159484415020913089605532852648999143","6939053275662244505087635417541857793206828446247848992283188764105131966721","12798043540382494855660472922674138947867597503468216532170157050160462426199","20713389801600667412553956346192236970217099413304167366340548074880917096741","8708207547232102069057776099666995672015399188924281674772351753887161579745","16016293152251662056020528248861487281148011452459422778601663166015837379163","14324897997637439510797191208789711173129460994362368408063402682894248793270","5652996184880208428967511742390474289004021508049280419259474250332590598159","9877106633097964013050071703002221796318046172981334418310092241450453368579","5385816971548914185604875069230499528103133871233951354186676373318036241822","8683091293306949708478955451280670950858818602696102489349595054818146782362","16854975838650963077652189417311897888852709425835763860743171659164792100482","2485160816649177905834265823672532710299580013309324666453183278408904845122","13571692148185502188613896013359942531817915076247598483272449919094247957149","11899399615412173136098732970606292047945698835588882297719609812145308198009","16827672312681684936590464376780346837611857292837989006980972390576065571472","15588237822592586948064701827497915157359094833395277985658706133691498343174","18356642512438827417103800170157877145465512961188328254773957819312191285168","21642368145757804795143182901389223409544979732781450480847315495418822041608","13104082060493963869934085622104709047787444250961437496674916673804812287386","1561532086277971111804773016487251313460788916643968126116038406859074212104","2718320602791009266532615731130512762296058687816604986701989820504700684864","6182683520717583142027400659687593712743548729948584058329789905227082638908","5757242145794370726637363237313640925174531077560764545993554185332488520899","13688467192244237790806289073845563960119021610896694359815485764764608925981","12528461541936459922472167643986446262977222390263675720335825628163511159437","4897268894447399415795897967133432014527122426051771866816059363418177665482","764332419588242767884018802335623760055144509861323437945071732931233600264","11755468878196093893190753985692714003062307843033761257593209352165323938879","6006022813561851182403581780143813226749481175437001910923100661321563995672","13901542382190510449243772206670622017835690746895066410475076631498053123535","17648853891656481911225897080296737974064729032668806126284849597245044343224","15106333841965710929952896897521673254279668876709612770907537801609875568099","20899315415025260484895459315726322363345188136910564549344894025053466430346","1409310408943258102775009950750654615881913956151269414096059752250092035807","3899088673345731523976816322438172722785832982334214339521575164464706226294","21406686765584824639201351330529610299177537976609066339927938099572420696135","9121591670793901722224770893633585291275002987585289305307167711146944200595","10711764678410479049841945177317023555168593838022414378232020467195337241279","6599257303974597452501135281719536074294806740553273627128065549267140155175","2142616913275380526921597026822750992917222975992774063376747381991404337593","16361086527663411948363284957489078505159658832010445114438602510508720771278","17122647864721668762640781848678028227021534122268561738445496382823789619088","21708018685042482318786273055293241752114005312590172460099480713746031274624","8303630654111760473056607545365338851734309857718959193970615705292826806179","3658686547507488906491014260011151850549759409901579684176172268581462329020","7720024124908065424512743488999250878143598904717873371853608249805302871508","8805244918657836956533473437651380347005779399042661429698187314657501156241","6303681354794120075893215838935586592706844702088252970663343726024171795351","21512507181643408509426104627003618425209526633080701556628608990726677651135","11835373417333287523801757951049679177935522717858158305516568595764125190183","13059698839045014411602727811400239840163533672024084777768305507840091151855","17635240655824524168378284083397931667938326555447077097306236826752492079430","3374412791113107178205006579112630099131939030015047870738873452427211677886","649711083340882271985565833699379436167716866997851102439037906608755280128","20002805138014565226408902156524463368767807620908543995020210484077706418135","11071355197960433041624284534649121637702414580710232237233568479006159191217","1105441595020980635809093220782460032826849883993030969714432603468135735502","9652765957610682812348919340146799318537766051849796416434577860126024594091","19248299650856496267902926731608572596705132576830681367365128976226233392929","15285802367070100569572399512275861017714681455564415244982064571963339715277","19970416835730683993734843405673457882587154729456022607061085470691843864556","1017865638757684714433500504002748241987153668285974836527484933462490771227","17284848056169793253916338792235498052654877955690514601079806604278964099314","11718277105372928962350331838305733149270432706448484259807630484543527733952","6670793378364949883511003949124179112275066568088468958915163969545409700112","17088789393958965094855662340742013087397643056458490270185660553870734946796","1930788514812600942005320214284180860980345276633471423966020111188605196111","8844343159753729614645407314580317697758296041737296276765583948670245312842","16657939543606018325703787748629433167511611178952563626096990460124133990109","15333343644239485619497914931918504163396626751908652058758135581206765801100","16533875915742793452819179569144271760125646811168930162441077117553849625884","19679534317472082858641184998487299940737032844519038845860980362664393659234","16385719932525604857740698205965045007053424961009717093945644387917936681719","14490521084213123170781774542655088188106794646066074998587858678154251198444","6386781978322405984893078797365492485297499058328348606653460996474947075858","17508047533433736707046937662428611868296556965172642086594091783148965906980","14904597000414815084666285064575232635645852687797347860862157463159487771060","14979972442969995336727018758631782107138089738395941038626891064816880204567","5299243186271864957800928637599294208954109271450189950375274196644046222516","16189884555052883188473617525411302750109401983487269295700675997730645714379","1645560170870292006287241616671417605853047420339675073261660626733726665673","17866745974872498136933906591373095763114066893081150553715211393380040095383","5744849574386643500716045532645657520001448510343827372577217716983339773799","14021966200238971589811034967347517039341058556783068950884921208853167419283","1201178089866013320759085637098781870734315826415474628546655403142858044361","5875644793836087035760988842421852197052681650818034527831700615895391179258","10875065950479466897559006840696567433921014267247530366235539292597441428702","2221662399199449388725697795500999209427453463134383582414172135385907744785","9758513532658579204941116584445291102215928928145103503086996542188799521709","20879593323317766577775570558015407573466986714590017262168011643343469361329","17225846522404915080676699509636264825833159640824918876741681229188434930856","15189442986691997434021855855358620506645387296294217783597931695143376252483","15973617135551858849206811241799666696907820418171736027820254766840973764431","11888113439449420418408437784450952639345990804839507528208325036625374967083","12365920814385241227394825974928370916184942218042429533600397623369545597697","11966175169612449906889690852332416255478894176917636726028104087408060623141","11163554022908212145274813635928762748847331295589087669583554722521180712379","15273476004030808005186443499782264987539818978741159793745891769358221570633","2013969196885866182480519514425192091338553670034650196068995589691938248955","5008975446746271526106846692137145404766553748264648461545948417006052208130","3926749194225734582453671614337621250954608160208554883789519551411469033731","1635544156808471185144068767649088695307748439189898784051754434524720057896","17144944482517962143604430553750908864860079758005337246916094084534304051981","13823503533305241872793740090687668844401004819859520464168798913603662683770","16335911272023134851779534303717879370955813837529588982953758998930285394340","14467284210444150699969889681308566002886261365990840091849371665183151060295","10578205764525658336257882813734672799527733392763965031628376897794294290414","18771425328697137255453620743509164311086906349726510394566012237817674245865","21804626093983212038528370352039806004465345685985435415809095637323683466452","12056805308954301132385034564357716323176447186932453788072119595595483786736","14307195735327805282612857510308008767450554777122724855715789120735513378827","6848201070063637295416045855906784325422580350462489495889308309540335269587","631364713487758647973016689203003205602593076699875191323345338325349259049","16214655556434201961140525501007839859074077768660052713461045928979956365067","20940788212183642266181811368870506130164462254923655617893660245551698033523","8257440848494309435270838240795567828478627302119374684511017376568090372435","13701089242130867705897643891164147923878521147124165292045879194108024940909","6895272953337895406509859406973110417619874994579965619097329249292199573333","530437169778092455975584310016745919549274205817234464915791595041990209639","9008612822403008353420189298381046023002474279157557733428254452507266389025","14863423501786052071018008300345884780479084379412157784789951872243409629758","20091026239041315645045502002997446404106877721183777765607724358538559881231","11103877261161399045807234470901399725912406134008627937945079980590775715243","21529163495181909351665093277427712610965764606448489357319207727176092439794","19540446772694448035410067193880900774391072899517686330271100773183944540294","17549510450820803306426739851959754252204444648959723652883552677325100583689","12252518814610348662318155253547558779974557529822012236107550517806390105567","8058115132085119666951861652409945532276905989404523986413207631657437321956","15916100116790431839835734530362130437167135501074855072245598938219364570910","14256533476494466694764843270015662315303617568641801280831873052211753536970","17865471381417606502707639037418669122823481329049436020149405646709537112534","14015711483636570179335132940981982618090553643653746531174110949872682031017","6075776171664976866533080327142904134938121198707020111533599997509054627652","6357981809351565370498807027309828058036389418343890944791766504532174516243","15145296985037303761634018005118672316118004891352906450983918852209191841446","2473672396516437070485250176897956191104549656554290725379242542480862701754","11059085933391482002269653121188853142706883316754376424538662772943167665341","14804069155713123448375113552227724310276294677318593116834685772120057819258","10146378656966122923223443263705119557842694560695035707977826044606938090895","21828309590915152213768434346306434851424116996828875020020066586363340244814","15568879616082229996551157805731419126872501425454775741945679993142071548779","17504079509060638501918729619244098692140123800571022969294759717277257664716","2998311560047298465700351970612785742605093777116697796464434026101441410385","20229972737818088327107446854254558628041027965197447598027135778783710740259","14884874200763033520375899992902136897590350894844904733314191389520252900641","9619409751736964504139815024141276029474791187139050183491749032619248817404","11534029087676783672833531415041588991838838078174102967049055562568798961925","17106297093375816944137015955705541133308466659538554159312635106186252148471","21676736161168806529097919794022110433487869702564846859065695507460463414524","12596447704589377083704857810305080195761099125652005594925931498073219198049","310943124066162607352831846280730445558498286205117614171844835745706684432","16013029710570597613246104892930389004941711962070683476555063566372534206859","14282564976066063966062366540992448474634085812789771416509095817495183298269","20757241092771652500911491636894210910134068426068355089789205706892703219255","17084251309147907751212619949757520468224028014308500329099194408342072624132","14680350698112448759886861002622963534698534998651150537754386791270019720748","17739512731440543100681958009173086667000199263945053345384367808940651002571","8967486063900234709994801661246451094429250620940593387993430620369318619734","3906067814916986286272005884942051451306945488494283077675304366798199289520","2517004675157816404807349457307096161030587393097616279110332574293494030636","9995302877359286298434340810356550712107485295049220989690824504445305103587","12849909876017357260683411536833847986127911582040960825577300322066595609115","18074515800779889507358182860997188274134395074469953155084226981497567860114","6692811728183968363967959295970424292426462800383828091752006855360167264617","17859827663908740084792157440799065184931609649811664442236242315795442091367","12243409340804252499520308602187370739653046835019551522661290645230850934962","3009118420068966587115224335717185828292538080040896739662684632413054772046","15856202298588272962175258696610233941787471472716811521132004805327415486141","7549804594729480554341356998842376772514802673462970334329441043324983960866","6390806437030742378988258255983502109201709511321162596105974797942236431761","17370236522182003753669946647208335160124999930136364231371998757664000198520","2261672244214630177095236704932243497157963117166120717011661647779055001646","17325026196605130064689259977831126468940872193987407658419640959345091161632","3631641025220845885502691330008982895233731506600778684638817282531001457735","8656561399441987116927438675277763317789561532507396244334062468892541066084","4069166732330197412844703565599514109399373916243310212229125901351402003915","19808198732373520522982274785888742523226720967259539531129335924093928174880","8555796834031869022510134190573521699378201702450788201649007358450530423866","17759660636058865290579521740750449606781204755231964378855563896473545202303","1335826395218609619260020055566056869243760115287254209950063597653055872566","21596200365241795669701682696176077888309278223833581800772036945674858315765","12619752319673193899296833725747186284394167228468888029626464753793997178599","17420588547980145067421969830249755561311178399975476925894947008643385243007","10337481272389772505654575850886249605422739785111225132545740838911222864209","17928431631046752749930349099366498612885288622404560316665023363985966878427","3075798659324203306711977985120251896073145961913793478792728028765206521425","4639500613932181914847461422373341918892878975546430906324216810326467690534","15396322795715441250300995201889120935591602515487993982711884319616897970533","6391276937505284102735701938724106665734769352007891548547667448647832351929","6811373320779057384916660178551330838095673247430496448933336925226142036083","6590973140323934807800215988687710942074412987201753370126190631819398102173","19364648614154949386936259588484266535262135334799266379433252509193375956715","4702754284612371917466042550086249683933140314858807272591351280832918881874","1081036249074169248236179367049085684430282426446509768147097371368406374049","18548093223441988703029589168425055383154624592689171393242936199350770119589","11098999608073377668352846814752381891400020647878345005629685447730764310163","16001262992680194260590639872321865154716987495605624862471107193457192704714","21696229443869118415905915570780926763029898831113534481730746953640692230062","11716215712634983607563947056324900205144202447594949676250978337464771243867","1778908113733035314726603632369389424542091991692308812147944884836647395775","4019081204388123040098634987844274011285321286777408246805308194144238418480","3473266952388383063447927231564219811787341139731701190625605897592140631276","10457881304788072618845101933412333126160339089704353596608910674508961127232","14926101732700077295531234099443522459232814784151318061435025890154852791802","4036967072197259618286839959572768559469665646019907384624959071646231971399","12776716624632228928613396031717959431597335742467953143594165782617234803915","18894783424164609284436913400522166453255844750192864579927645453695213022195","6303809107919167113924303987533838414137996606980561570652539716097058487126","4729698693443803882717817492985796053343431875965792864932005291979914613160","1645790034267553926884568714540144778649055395816210525904813567839945991808","8138260225269705405100573121045873922755899939885385491610389913906979427176","680936760009829486282006800072001712155424246576949107399338687767760991887","17240357869291182045663678468827695873425113788704614245279840174870850373113","19100963939745621863641468371111320143895293700517367016077996431570157414340","16188989656090417148189510820963186890780289777598053654241741803194118100843","18027402882394597868782011288920739982398714370069420860949975937357531046151","17780529984916796963712255733293310230026423072958099290880849386941451922559","20004531511171838591303710792081846238092292916166965045929062171308088520097","13855731634251510230399834192704620793850325654395687428672253016405315169901","16872938837392115669581040432902657478544143723662502779821325505282093696739","2541555081244462826761076743762714962901590548271316707071685417008817634653","5136424039269088350807839181761422963254683236279333039713142751702136147963","19216238128964101420135465007632926445321991494181045543846024053552797518994","18868537488540023742258053821537824724371813776839672880900985865823137839953","18246710415801024039719497716350501105591286880983169809863166130543617917249","20608694004331631709610739723463009412162748201282986294016482926528443868949","11318113915971658853560322943565673154831611543653209084299774855226816037778","16240989418312335385576389959938922684406585560688799437547298624184839261343","16171299673760267132909753100946681733778389681324959987573199154235691694977","8036823955656422391918380552495301547890420665617977624790236120392727764522","20269862530534739231936251654244170650781428788816658397167110617927916774329","2368678892744667199202318323282128737449992006513656480477288092472671147090","4618078962163037429845764284139891171861860687111566735174912070413086829215","12695350627501306162901105159009497730633599768443844225981772758225613194238","16356283146491744069785034066388746989409816380917535719898337817088223419024","6407893217596287850421377738867081146106659458551198123106454022096864887316","18168868018352364136212098098453930600797374324006271488950341490483455519349","18352629174410142476418438008157117497168118524562206830585500251463010761689","4344169393287991961961456515301754172943022039566219343212376057129143739343","19424839806870716108478074501405697296961947409763509419111261767390677718987","5796037897847804302272999466834285170265203646465480652521088328457333766863","17402105801450379889120987010453669096275392789725153915905747267778100864362","15540989618743824352651126288511222263828123668208146479603617243655978402205","945810410725426921570254447269595873973858272778720657523509910503434094174","6962323734045776666289031609372270190654631739266635759799844631053633876675","11382945272742312954364642163371436855283161775445664525053938433459897196647","18940251871958826726849623572811640436342841713786099464305053400421580490631","13969540696178305383564753026163726563325318478290740131984853424331762285147","4841983966001277917879506889862519614692143906356361564304719688757862622407","8939049562492171082419559182596894186639203815268680721033389307282239000385","19265363396776097866041313346787101192508520582744521467413665478819721956884","337106861429123598189388456471513480497137213511877011021531147545809512194","251367482782327915297484770356856386307188967585026711663629212746150191478","19506616511267234489421548744907283107923549136620297132842391511025844759064","20633589633280372440758096707466273580151526293980868749421563697429194761212","18833062060138888612708634036427140134887774731041742144004707524569102994071","2927291160590267909596732410727396533948837350308818016906834558527125752899","7095572562193114209617459307511041110255341231707924363346373597653253806883","14274988113217913224290208839851596837329960221329537670822013510325939323091","9965830780560026128320556230399915681196410289456547935188741323403719404039","10333365845496980935202034863900757172839454015352626511769637076650624839070"],["15193892625865514930501893609026366493846449603945567488151250645948827690215","8655680243784803430516500496316192098841666200175185895457692057709359214457","11710807066713707084726423334946631888369490193496350458331067367713412617049","15442364818086019103203999366702499670382575019009657513015496640703659810202","1358747428976145481402682338881091555771254635226375581638965497131373838774","15658002471767984962034589730824699545808755102240624650914676102923421241582","6420480504329990097173256112095253518339231893829818344055438052479612135029","15457172495394305353698644252424643614748461590123908880271021612601244389162","5745943350537490600340174787616110056830333091917248931684290284533019091654","3877253492903478989342845512796806320713689655633086736499730391667425329322","11257677301507982757739320943403112189613848490812422490591766717141506751601","16906586852467953445509312290627525856126394969718997799028223470195783329296","15263589725854108297280528692120758129000336125328939290924952731952242586386","21735940039489460025710098364749096267519151075908323637361429746399161905338","20023056608360522105358681147781839024069418874082333862551226466128829664291","5677500725280079960679484373333947430817198394184436922575072427342643665917","3080516739494460477657748111767941482024045797587058388950619118994388252853","21486496065617100719537932626843898998311175055335457507845650282870586541596","5371049178920102602305531530023787518286335086323221270202212974241707302466","3074817222296007572297581554183445947239252698770067839721345984255386069425","19180807038569629573914331337874446591506172622522351734982093457681161813141","16937785199372956273358037645552299688842385008757508130180245705952406225194","1688218397616770248184651775433764527272029131542529408516364801909017591719","16315958669815317541884966612581197291281164499674338063931623110684590850347","6218230753007070123505625054833158632732536069700963073464625252554943737669","17774528060285257656595928889288330429565059134928074258373583886985960212139","16197131592052727313460949906369199026477758140133103701908949020106767192893","13418604038232148873269488320329340508522225417123160144993642839875173062296","7265658443160253752317166706266927598319661172006072732797351716897681315157","17200150079219747370109251547638276280610591698078334228421747259741754887","8627121890622175767416692555014275717515106888840919734160364408960047296494","14546964505431549758350267964924534495477687922558528647552728692912697049247","17132720822762740343718421124251772119916072270451579802112353604446214831761","234333065870376500756753915306346778417056884715946003873280290982247600083","18375643491701271245209094287106352436174133929245169725584150600992143374298","5158448692161567615645197008737390561357077078129599243188536485308363800282","614161645152783610732075198073600394068518413590650990586931263981193439341","12661793104597977909223565537293318966803153852970198322604479648383643541371","13041905650419760925682179803296711066088286278603171065755078690359168540579","15006023590144168506070897325649191051975999212058008674224953860265667513015","4983349941266961584317889823965291023669365981564144622292227613558024302012","482274340065333833495445682213681402212945945150526736364263233985449810602","3966893131006556898236790392613869798057510088913626163333804949895810673044","20923301526284527685000591080290190641416245135554916208054502046381491809443","20838692384005825835959734210506718428443540957544929066941550833051093000166","8282357714606447781782716442854085217089572080066047419459610560432999443766","5410651444876169088887579490283094453001167796545260026969919887357676973543","15276966646285075387317940436655285872037988805762800567413073418506412856419","15066911464727337689573664613158712498015597773345106524271610486257089622849","14583790985054968382519116885383608902981814292128186470697458065499359610203","12059090796146479535492139954279038037217093044815277624197659219529427760034","7273811886044732271171500579064359282424476926867187108258957006777685922641","1463086899665237074608503061872751147444637332808872866814340325832200880984","4403177494620214359779479537027014449448686844655371530169401219256448130398","10860968418848589590932601250051274256181778387706764281989724391784015147562","5268786978207139542368199165627108325282167169564314266747401266496556301775","10683355823176907476704511935094343405052640940909677712096702771871787224727","12998090263935761477316698114799901126086030852595294916463464609721875730852","21401280461419124637791689956622923839426783908187419462727763377498739154778","9827224472048063173905906705579289843819400982583185823840008976971109664519","6215804144039763858354471461864183189301201862376216122255322421321775987311","15461308489200344015891625455653488930440613755785081602434124530381300882814","19336334695450889400681207491394600659946256404722006637851709906131899294790","1712331165786355540802697725399423752392267480553199895882357858951999960061","18153038525983970702748717571053178456148003321236490384959117581005013333018","1080183517033034908031748897211289245459330899463186432840251241943892326023","8948022108193679628295152361559653763100984324221629445749311939820327674857","9553342289560502306921915013446606435600388298465288181461633559299564421155","12714965617376828547637017050548818007690047452402682720666099310241001848988","10945704657865102635748104464461970844653553427083981539165832149959193156197","17511714411688352203059545713591160825310809755917403629838415797949261359373","9253691969419856285051096287845246422848295397226841130282244592511676512433","12218945350859454581754463621617733341764245716874083264842931063272433793037","15268139709971695434346690496076067658968455677120655340969837725391575270485","7948825129295102283421620705853168119104356217418364837218892682579042520651","6887299291348589691868712194070626390224806410428583073294593431810559288717","3610235157455454109573625364057240708256027358184031380521552355839155549623","16532488069063334064099666525339953823111673083177894678898823509406678724969","19317517725107761280217103201908049748015068578935276576200982249386084367574","14980901224290526859762385599553818204548992110637275324411078408232697158492","7741797285700915051013289492475875831764653137095445146268474269974647962596","11964233864746181868467810392101989052496076326472717372132104394243614334823","12746657111181947224582102380049766839578185276220682311596480990298620200286","6408726946032901840418309506578019708113712492100046332894630652186614300568","20959261828945984489015610988397031913577918654575078054490013338416801523934","3173674599420546165852740604987014294355430358334465189504551707066179193914","16110281513253204315524614633789708146700074483476149119440509845258215816735","17135377580103690088853370572199271964414896742342749305424508776150797285064","1405769920008485935711505753346340073052795087429311991287498566024570212365","19088073362945853867763169651582894739272002359692597239222895238839593467749","19897231284455588615416169252449008151349728648961637517447194842672488184146","20476415629812014715153863754869742189693986277342067785614833846523246536739","11074321446706734150375041020583051611133090415774365192315805856051215270782","15231367549323128694183572409135806408519505225209496441892541205465727777072","10515952069292929457050921929301902464262874744159361114100398880194109971971","3216370118771824418364829250073852356774095079734089790620447714552849459645","1940445924652458480775282556203659335417827058983719042726494187979000691704","7899310668555694144370607061960060230071621529123669746309839400642332452086","3125410912833939638823760577011271607678545358020637189655641109813198731542","2980079409624774815878860133121670095839651294537928173829312563570356348730","3766498515736372882285796238406751547889526137955288498682767455795237989580","21751217522789414135074956130080241003845828660310903627224390345319859795839","4947229586642010378772262640583556676497656670779800090478805824039760706318","2168676839236948809859825591626629233985269801981092020040909992251312517552","21172906642114648036685108008020762271569381607092920279879047961076646303327","882675742500939602754673078407141697482716600335919344527751158504426951699","20942968937722199705624825492102184647835614761458159157410261242387423597787","21880640497503102067412608072166388563991106464538369680846671301780353850077","17593472026567804917122179982860735087124786197105685847979050530954084564297","4492875530722152383516030266828166766820778742874238188105265500984280376666","6799763500412433367637987497601148507907071065930142757525839585946238894092","7812331664758167657763399273963290017340604299019483750344476103319142702775","2222332747647756867926707541092465789402467819000336747029352557749400316077","20438798382149666667185974604464532451975024544676922060351031604444896151494","16155157103796724378615022758633778903205872772589663310774455593497441785913","20281325298063880945091623185126257485818350714264176365501683813650871716911","4922178080989486450454493110764936742315495846015561426329316977670113220071","19579063976700768282784922967523980346960151903154507737857728349662090787824","2458828873355000645851832396764221987760639423132968569631493912353159373462","21166618206785010755521994106737991950548963896649678270059527421944129497211","9131643699583013708059191290958290089892787165715294157378879201986981390031","1820371114511473946932363841206094088983972935646887524223011276305844153307","7264184404232663540867032945940974372967974872966180860960243405462016972362","11228656105550475045610757902396386402555430893045183008968975441800824215261","7151503559113638565935009743218857812859208253653498318591469659718664783964","16876040581364499037941813142092448836399042253618385783944016186340703846779","10334125383426918152464737478646460879481305348617711177774418125714273980769","18900559046103390399749767994653107625464807708680067464279674225251110804100","18685667289312169245526749652972366835289568864080726348092618145885982989561","19970582871354083670567197978171723431124602481748785146813441774826500485907","15873472427137024971035326229485784626398898771525077832924901475242073457867","9090803292122260583635467396769157643561973206888822931647063181944243467413","10156295009710074552070572489422360071526675259143523597882131082376797944708","18600630374968456966046654667577076758720435487386724419578803020365834014000","21292291483064245088298314957584631356250347533568992016547598449487977536460","2784266893057214755054197979675795184619614089277590464548240934105557638370","21206743389683892419024645604723431382001453245850423743581664552645211926469","7915761821775326316473924816837591351530533394717381318596295803119061411675","21881095237485064870468603451853549262304643738646051878343976465227744077912","2011784725603622472271597952122938645154942022107573948889667939904597454410","21059869383015715705096974077910228193608826877524913363323189378554601804559","13660545486380051482020817701263881806531607595506890631732662177505270213284","10831091042775967380899180760062457635694790868286967266013231823406639854653","149288128407476550494800886735600251983375852319258454101603889073198917321","4032475033542195421623899365282946172767274020529645277615759958662043553317","17860535012887415629230166789742533149365132198763199254812432302158542514395","611194463774512114860065022851497908950074400927073001695280142990812150583","5518364261187313845085346561539515049557757056751872639492957432879259341390","783263978868449790737487156609432867806742277074765259237378374864740012575","19059339826992310300213673274315612374137067865428300882729551175173242291657","3179709304184015397125565132235783368222831063701934511986753856772139349894","10954198701843076039176000728742415722273043852061382139560487789741501275316","16411266672500930935370066093245284646483148609897099268661795671514664627451","14614816948231085620934132277599546641612327229810158468490195811014141518325","2458257206135880430320027516329707989817636936777744813891328347210486074414","13549483340434455515002570470395006683062583844603627042649952800864870013910","14465927800403373425828183741641078057513049263889255157342086762479739044711","4039391352709218793104596256671892882216573882631238721514928981154171136548","12750457082077152291009387792121930725761848879916565703854704756389714536037","20703941646953337308096638741387402857948436803334980867971163138332859477843","20148755487317949638981041809982361196106823990400472213765926589941031736503","19035096428824471222963574043396024781574056587456391309795571372815435282399","13597108420431213178364236660710194375344287228654817880431599113069659963625","16737817219786305757887002253067607822378794077688837656791543060369162185533","5164935079689729145670846016031605160169301936105766707946436049006171651941","21653381930704765824477248798502813954284378782353810890869232482999795586793","2062605478140760101860087118379474541965619844748678233207247884294051836812","6841505950265078437298089354417829781031272459823272323626556598403583002674","18723551101558427097952125661588457059960574026361073828482106612260297969553","7898804490983679270754258611113569895515918945891808074921872907759024464249","10882278698112390755842292529204069263813359338030917602809789513528936860051","19447560013395173052961224723195565400117958329259001072560983848146677205053","6251288025262210726686494480483550276704856797649458538460443509657307219922","13176666617050786358406074057104742181338809005466316548399895981897535342946","20703225796049910173111490454489910459787604528779911406172217267261190895618","20336720518722954780604743873837334696992422089627753769439653667292899832714","21420427865372074512365684526694872695798980614525900481233709853915806389425","2498895690812694987926199054702295457557454143930759961192198950277119149872","18753512301709603592612141197073246313430368834576850495154922324845448997662","13229612292359498096055458608547157785066962647476451239567069089111704445000","2690879919643532184588441383789963956137193400890598777054187145581183393168","14142396602342548413722428497204107502988046500369932366351553161157672540408","20448725195660080278132534867269279218381543910636641344871383714386318629041","2559459540570011016181396098001618067535109329950570139376049832813577592045","2209294835847631004298393339896770055851570184195462947318472391473531519454","14610669112573509857774678749257346364319969641690596877040685661582231189775","15281088465087253563674405311018738676067395725444151577815750152538449780965","8600553033773805414817363397077178137667131851961144771667772828459236208319","2748346039979601666392027583251905158817539034260921486084376270967628661657","6854960712378511006304629447898292218014632388505703802374806527561178043857","20207552563190343462280438839438087615024485494479390954719687107061991587248","10281541252271366635718295778088948309847900730867531177275273130071062184625","18855605847424121529776135453072696981767402526737712879984848146282568841809","4160214035780913418097601322951078913381556877408879904436917334405689553255","2122867135885631508183413043949777333811557914428796322029495785048111325437","18793959580906171893053069386015945646795465354959679615181136313144978078417","1043591673717355695648236328597936528752358227297053230241551190351813693314","15686469257015275311444450012704351019335987785561570672026138336552980987277","14048856209379833670666148034655599475317994357805584661156301746235313941815","1011563953969880478397969933799483261900428580241502003261587014788238280391","19240556623066672446907714818724971233422104071815927265423017590508305430997","2121904286573815063480388650799381683473766736407678915747169455786741101182","6724437969134367395210139771738563153857495313330774537559578422672993498270","20206855573383441961836932177838081339503382415601366823182724056749038447809","3659051978213562322887447057085386386485486575515693147713900345497451171308","21246119528547168535908718411570119652856799993958321864163737649108920924448","10446114322905404392321651684574668727564081327779662579984472408056125404335","10052242287865403393859620372179811039720807230902452334457123873762222543944","6373462744579965543231173757071025010089494620309953425653057223643612177083","11716070974813426833631730493593924834405915845847679294742728105127112594434","6451284530793440411577197006976867289209413848762574411101073727224316913966","20143217291446069633369261481904349401356557325260758866598205109039367201468","7741896897172494958877302103827661518814930985518070029789560123401964418102","7414486245715284930410091802521351113719159777210731898112598211035848096490","6480506916211642204624111742530825907262535747743645014149694168805302825019","18349725066341807634895742572304899830893334427067633858521634672944685466440","1838291082333887710851505844271184097051704051003105078056248035350245616867","19201915197596065583046168024521824662441686729039260890206806469763190071269","11253788423541320580105520117231178489492440242200599071301755928628199128159","6048832714406694444296771635481934823208451249770515560893368035838759154821","6398008918881249487422929614611145638894557821587972164243877575640548705346","7013037564266297435879776776659289982125632651326438965546874242685502904730","5942504790082366811245813670914617310604940200824079289270465669331434165301","14344789199380317440464969138686896230070901882253997360605407637865754361287","19920212380356573378521292048728904573841049083972983190424200459025557666792","8983390577894750782268266038315113359711163721228398686939390484499979421166","14953991148867572055684497824790735528852361750007063016470842397064705671772","5592033578501586280289038012647352732276003389059749788953239057845882297561","14076883072716069263619564306953450824526010844333044566762059693672378725675","11108270411921226463443318601950168860230077781212396032908932369105145901793","3681277588815101350213324449908372578846563884174807724121308021640034446476","7194753190480156904207319938161903897566477363779122267985209483435838216959","21241255448366937244332942306324590869759761073985963892514045368815880517382","6203071960722514588958553813186803009742459823360660333787981951206442471249","19041823565851118046937769551785013706136778514067168239416647071096062639366","4928136619692555022185087228378238193895894009623071873887735418398682287593","16266329364886004534411977872528706660422476743809029518681886596981922182359","8814684891729998059175829142248330760704444206534875755023421115211106199303","11072277000652722690981202459933101924925520292174200155471966778637063588914","15889576313969861857250394875354819627977602318110620311480656842740292435237","6934515229262494305594741689326968268143898236690173897991110238064230886755","16212991575388366798683594066983659236103186124339324856776288894513503543244","21100508914867482363389012032457112622475533432309937238082785660233880354422","10381104469089401657446748653199843213201270332853172509558263968565255702795","8849389605935865968361613766905708889092097013638425059146677490704442276611","4826404934194100291623537890117339503344940312401101713754206109744511979962","9981819567268652304810465083896863711149056310505889216307212434682251812603","16218484218588441290424553684558267080330286201433140852298971691458926313766","21317661296916247018967238829275056855142711494630067664736600708605437812892","19523923008662567951910986132173659591346561824926093935331274289896011695634","21439241836891927940168832009944210084078628922824257988298290967895179737163","3818036890597976956138669961319975835941979944306305168232209375279960168960","10212547715001519604442389033695156945619060410131175896383181616280631586732","956283172524544133830416114111944076629240232397666924807554743752464221045","8545109273807246425343308224167362024331960554428088718932211551700420545275","5647769597708100114837534314408246331518385631750569421373379085922684908872","21776221280695269311212391423788179027868152904973644113087833004348746215729","15989020831232836203074762591626149244364214836699154611339161287030952623233","9384665943619921791886218744024370375464874104981653298499433530463000935024","15469006121097295841026542766455781293432005131673839148320165243166330403027","16103671377537767724271717097892044266704736999841135349844319906338275108222","842367229428650719054831004741080336526228967970570607897528985803108607790","8752325400224955775788313769797750158375262384121380328719514077259567119347","4803861091350023344885030428100876947830986453029412601567992550504530969575","7917553047944370948250445233027936387189889293110390303835890604428798853681","16378323148632546424902611135263436821435778030958161546757828745002247975096","19873719885630097137106352132870659633926425645300622070145979694717581586592","20324790419158243246762098227260178678767896786893299456278167341205663612964","4358908354524026935988729716331497263147669784003421920394531784876541301801","14403952632095852077754539203207047943619815438482171213105824864831554185165","16410713482142323347391147127545553384558868490870150984280601225023662513809","7304216341846662695189617252648753140769311862815448449926830269690397729157","16792943782280077475956215580025612636120139194657275471595325031090407485768","18494329391227402645175320826355306995912366111176422593669423022411884295357","3277597348237827068690736756050060740435013727549848360800059544123155276133","9396765756719511114743964794180256605700037182617127755220919249774110852382","5637053961584389263881381098869862042993858662768294676971865632259649027245","1752142832257643043564515360000718468888861086573246457619082905919623770956","14504506574384680785750882507533398260948836347427103366421836731538357314790","18947994518078004413210940685748534988014581551965984303066903086446389273117","8931855168578615387850254663107425567403115805663142600825724478150698936342","10982092525200624040399870568387498905840578524691489797530932831401946309626","4738907023206802373255186532236849256768509848242049657234258536668430260775","10888145285628319545262252531874405309329869513560101920454793431198094714989","4767721624212785367044047554655794533816937807005608600525762243335180089923","4054394679973840378112083329204220302222586590732553688297938891619998137578","15390471663419625573793381445844013245022413344196724396864223784781333233143","690498740448849288977645176879593806019080276382495160049117613302192708860","3326968907274045758110436838010900592335267522219473049427145975873344598768","19461545874830130561487975864151403334363998126023624462211037468138940028328","2255249425919459031033123095731665691066980364231819200773725596456576056043","17139538647342063569964264947811360956712827863014723985947727876623459280539","262834317961189780923232082352297808796511874872711860311746704570027370416","17784213646586812350819691264737755884800773322574478474130308351003659945289","9206479615073686723914227166450906925650471865894639492301222855979337534393","5955379232184076713510750681781395826148323482009739159408415185190732125682","16345512244217240951729073298135981012471478596479891072149124888060645303490","20053701095030547796310908765544502773063879272854547881438596069907281565287","11519146559536679602608982593432194283609736022486509747046459824035493513614","10868663839942247532249591973192159672852196011910414460124452013501564199585","12668355291693420029179738224611760713369106517542315102687346083105601320689","4091011252347209563858280520339886760216002486858313383741839652119084430270","11416347683590132388448480763970462739172261435271326798646502987745949753371","4462763980178675172541782335457125059884067698347130082276003539434128058577","21728891122467658477520865529973242372850367356840114983386033432316519759391","9556106604731806817435679463077765288658189491612307664294729425381901530224","5086982973132652080709554654284904229374030594786774699435814748257879554118","2278505454992311041650060186856758463754878439802195559533882189615578260695","16123495070352975934848591912315341924608875638550779884194576881433498909405","13177225503435100563531015597038445430211235761527278782674200718068329833622","11626932451843299545922103072142674578946680165802341368625957942237790110177","8872973246419344365802198448930136062421718851114220299577394844231810068090","11920016786052130191738519934437207519332291620474831138559948859328822621221","2773753221970604083383541092979093729869734021029185810064937974430862835870","1194583082499114147792330367943150006952486615245506995832323057119894886077","15293312601348482070373672684782686300692505365845870624263228679370968807837","2292156760291800990693425534213440357167359161992251338587906324724034592198","20920049766730284147153707151387304988393631464951398563908410768221002588086","3587899345078220957148828249287269521408604837648269936718299413697642586126","5857527906708110948691023855516662527925762284342493618496858248142623857037","18312267494676788897591109008609888960798722042916784593521762607767538629817","18354455618287562133438807735729369657256664914390381320892039403006410339493","18594037435499535688023807489676900345345731643180370940972090155512943637000","6361231157299815359812386352981667048590510979947935475914610076041390336883","6503045850716008738909204934356093641022474278658078426701342798380459107813","15826908470360778431798326530563200301151807861414464213699967513881040969457","913167165738148713876672473302437265273760468892350716109373788573860454641","5163418960719047707254162004625467116036830361107107814320243058319914687515","1852750695670141634014249062360862036043602867770163972096325792863710036947","16164029969996795952250343426848596535809001568622155377829217918121790073916","42291476149937488089591434144089904529405222471677684973768504172369443350","1329340386229357940610579826659090359930768580941108555938139535621252899508","14087936453397725507000489457270864434699508074557952952329368237400407748133","11454917885298514922755456675259734718428103879515668717779418480236210705323","17749966508430836878443008025013283275306943216523661550528505419303121693213","16617298839486771009961431205770630163409905047728421465641369616889696635464","5622873871440608391107520706189063847917690892897751818294742462879871297589","13537715561706278379083684257583804567523085149672090320983273122424669242274","12609629910090871112615676094781247031353826207267723991911250780907380059468","11881347692420971451998583525696964339513193164613288356598017302547676912004","3620434358220496198439193226313617496907852030586214671337652678218740406153","16586456872124455799862826347901525401871594428044067424833235946565396779382","19602593015746956165116919928045364895525104709835703557292833702385934632182","2465427491077301663150648330772125184470808854603184374760649420983178107738","12521323976712195518272978277895155774288446093713549157148428964880747896725","361951232333654306694462853852464888974834703718677826403016226307188397185","20048343816024297162848487251896481827914904696805156112188099141327595641104","997638030405613623344188782838773314122493364653596616029491564227193697621","10932007654988104622042938184134556963651043067553327861790671211490960094259","47171599193060570819891696279547021610376047998583333086685382152080932821","14669115378939104862697280661831896914139331878760241858539421915983017116504","17868874372855679948405169936193924176514630305572838555185339642210810710203","10178296575837129106771098084407669500326673901243393867574658658064222502028","11497182727976130924559852428316615034304736115488257034951588831868596612725","18847036158089242140209840241495282890278502700082131513222116906134183113862","15514518995390761662346743876733004358408187550386554449789531199638765348953","11474102901522012346251529527050392650125347221410246734211005177721289856415","6612195415835443084676700243243174090072629504450965229103970796390091290688","11572474094368358234669561324969692616275099241307798860733942350364532366113","3855324911963410548772360326122995145790506408472649961229511965629894550308","8802640003128749594245736338745752744580147773009816234644244502373660889677","15676839305513015047736600040932186843826469281853634239081282896349443894145","11124722103091011602185413968164672678635980457394627450785290630813993266691","15087674670944618980358596427703842917302233637812357643695687556421910213028","457555060782651847600218200815104907046227486293278645126081160142069992497","5340353060455057701755599760342180989590806327490432497082435572367648024359","3289809733259936118731355294329652879189400852472418229718273887860572748363","1821386174933044868215348232606758690922944887434531299978498726875279584854","17399236630582894158137572250502674699298844870791766041927951699287421557453","16772722824042046255416248879357647708113647471330900665176012648038469814744","331374066696126093678097185404981758791664151917354547180452342655690460271","5482079579065945934120471179616600325379965440378196448353560421120276746028","11861638874356162254375133266687016527365630872709665703116365332534843803431","19751278476934230895840638614095718373810690662562196455711240141902305648888","21017623330912840225230534280017695045717261514215145256795880310933667407841","9692530233397639077769939390011937602190121885296235066426091743618448584134","7914031992737639503490179289412369887137436318696390718781298556229610513180","5046304088054212585035723354298412694927209198400753780585596829596665931980","12735457541003664856181534137486291132119134214862779086936585300598349629287","8144204472889944485922664106370529127382213990656088602566223875490414163362","5526161442679804982165840590640681348630369336752481706044759543203459722566","4665464612431440885211271075488840033628676516298384234452346107374012633528","8451965709652752887539585363308640999657377914501438391781526068371105983117","18990458193856163728406448194111866469438835810342179114684453609893347662421","14602960690767985987882800342208585041637986661619503513589079723840776294824","294650277854196485752526848096008214721988745350555311479128101695333774927","9930361494944692931597991649915857642608730961125454734483697613693272941776","17972565769620820679641368732920396905240248490243886868922250461473059009007","11842743032528966560856860268344505094861546674985872961254820091273444880060","2260251491209762630871337015316066081541066308706934094017641769176593121838","21336986809148977544823484666876006147697590184356254785752148187171367963063","15637234083283356311249527335446193685599985235080555266374006156231977517227","7637477891046186378249227336975234440873859617986704147458186423096226771577","10435340982947407847927678888878882924793449778165415690957335683641419176012","21071574044063633264442120715854514033847137356154103023224485568597330648075","20085745552872944745120547909310789275453780111307008151203836541147270866122","2369255222739182549768488367357061329939116877812397072967912842660453854658","3320710154094663715463854219978294133429318041799642537800174050047893035878","2437552820481788519744888712380245016748276158860265401041560980354471184914","6687580113987208531705167517979176727449238324356562435678492283111952291541","13835828959457330678345759960614663723017667326485961761361157914420441377430","1823843951353887792473925888956554516299304358703549730900495356152013614424","18229384804985230011714562427207966412342158903455811854157839446374012856695","4983049472282717134994110428470567601005310848076496400503178535459679438524","2047051967230753763135778305592853785901616983565528680886843131244871631064","17059505494771925862841990046823342770591010831955480339095397897088168520686","5845823714127413134610517798305104245114036685335948729450609519089263487144","19810252752845594230307894817800427820113926573704856490871938876757561680148","20741340243371419379519807725035036726040739024854919427690724405113594586449","17305746835229988220561638584011917989169628535378748397361130724475478785704","16273970657972145440112726408308019138099820274904080726219726815138597785735","4927605725478881247988642936459897069651251926499343645614635597380235002430","4076655226193629464789557616268492785057128805549395585385432329518368497686","18134767316186963456589895259454813585756254459227058992203617493951135964914","20798436806114056077588608064161229365173163847083955162560624566238528904361","8811900287453512972593412116532745098600991077158875340182906101108258578231","1611466530857794066271650650204918615746591649578992581483080164777650137733","19520757346022691586967284723955378385034675472244175822936613026597514818901","8258287931139503595713718829279050060190693609290797346704848518381891359704","13807143439443425137076128013998009581746894329904809421858222329599144124143","2034200548964915935625429760202284220693125881760822084201315022529206424506","20594375914400911567795140472107624446159181622166676420027082349633992663301","17773828019575037451999782968066986504577459910353828196403976545023426528432","10645884969014005687699860915213473815514464399964009808411811895545112650817","3135829883501342672772973577699379927756997243617424917654928164800203666496","21807676600134151299257078976418813484444183016737321278512745883771478511369","14168063038909284721702678019083222059818438340503980617872573468231611140141","19022539506931505257153342575586362988716958060936788031721967221986624233067","919797128086310623571009200546035983274688764270933413427846490906074137487","10651353481391913627770814216074873532920753703051075188645774021198634943682","21601553598752750925049978818528421110707879819831249175157596816870100048288","9544964974935674319204796617933096476421551193682156030394816088243121582636","17113833205578964054057051521784698139661258340576694677296240312431808476286","9889647672195559279745677506312894570402108521106900082889976819798270827735","16028191999932520938901585234936954312994452706490572504997534210876573833649","19224701772787524647172128751148104366752057774529591812815327738829591289117","8065294760892477625290114823800398061529770004833832691347498933238361039736","8385011404987806129246014860479833290406969218526611328586242951296814426438","17626526623257098006524211054563886193098683828265081734658432468695686509315","9760584950604786147191288118087660976225563461953070125437519145090832114537","3282956645059793949082172795607530130101621492305193365378997603911833418463","3788543541342252822847978185963388795825378340921321139695221828685330606335","5728277403393912877393143174229934529937061751983246730506397742038949251701","20532577038632159357383817240596922896191478140446876998140515404169184846609","6138500779693128517529525961343097735306947649093633133232282430353593175172","16387038830089541476468870208162294639575042754761542956218362331966004300870","10184264376398708852688445921404363179240954227345322711923845040842165453208","12576299651793170522912156101640799825541149618303513174146382191633847258859","1340015400080181141720946234858756484323564628916867888877667239334982793481","733959369856163480135680991009606990817015555938726628110611986599242143578","11467033813562140192244869512537566463715027496952375979909160849747976831918","4619667645046391146577435774790188488541561222783010406420406869960248783331","58552761198135931030902257754896948615688045302818928845814661296914920622","1199849881730507352706524556330002080538296688430736582840314007371442152147","7124502590511184113044595527748024819132713282667933641439666531514739645089","8623660134669459112474551498616256867375253975034970808437732784494772311361","12655669439191191182341423414424342421477486764113555800095493091893820045534","18432703875775002490514477493898870315422995231506677048275960580528644904682","15467220287938881354678249472400749704814316816035426814619089032223454845193","2851120240492392321044027263769720216640877441121430445737594074121655318176","20519914249934881206828098454303256358482675671718589102535780334267934987941","17275124961392392047135728713829752470490098022504524438869454049765356211723","3323710067527231515807603961736782048796606296990840839366613937968342331886","4468708240622802562056471128793253296493002925988003094771284205007772045098","9006494818135081033869830730030943407240565201693254355620348420258773924028","2624130417875598753127999576825019766166727976335690685433712946223008520912","164131399455376615654870570697119442360078693174350746600132391198500093412","14931668887432843139264972187415200544679230597820424081936926034478502874299","1638753880783574431267395352024193675000113296497173968722590753809640941864","15505380865926802396097545843811910443367233632805651511272732002583232431557","17973744614207669251901495093091561913998272050499760575282030108740677066624","6137688223696761009295745609563284204827706564566466060484103844265403078408","14774243062532823236792831566222119634320864630838624098798648826842418775856","15864970393171078370207775103899428499600152663946379517190945807315353544891","19010063123357565300336230971672519561204810737546730911549311353159512986740","12607162829921425080830052984475623157169603642577010527391007035133383807243","17803108634879437217723652777640120469990779759700458421844361066182881628345","10065874953507223318296028499872542865030107611981933577973812883589535269142","3276471432535144390388324850641020151392959100393035635141206272558418581928","7532054601401798035926415744768772852833516520318445183340725930886329458991","18893822928119227829016544343228228897166113682019317256005502643243867377334","15940597493253236451533839310728876441657428995464658827726295547815292644378","4268009387843764409267791203070919313017052533005657826253994943184768120896","21611251949238422413354051947529388972078300717392131751061464498329326474580","12516447001729804412674006874184731098280474050775388553768469608793631490618","49838549447142926741568525697026885045023997277705726329780325103507790978","19763902910323896567698991616245963026306943100978479625077573937114135803058","12029297973430627253212633299020402005457460023136429653800185001711727387314","17676997725594777991384952086633589048516371093397126876621255518370680168503","10567543371894667303450346380722020266352683222046730266924342174164712049360","14583364850544999818712646438016435003942847076919084667364987497592599663937","17348091487238815837308569582101875357715798351834275089190053280855958465528","8743083090296259283603789316855921930102444739264013461469099560398359267240","15114064505647935792598848256320570567717917317803629185764147361301698519005","18332675991829764561879941291908436508530604635608341316693114747813051532006","1757567731797951053080580099911774643896363235228742197150882457231133285549","6526388717947413328592956348507481629843816325885832861915399601868279124246"],["8243355230504186170667337521705529968548180153769821936979698914169521362326","21549235422807751640146583237936799392598740234259041629069949854834009192195","15309683586299089746803554818142261058154570215179112411063662706557055610156","12007539402495575255755232938576927941514879725482443887151392201585760698040","18793669376013417649313139054009540629720623019893420956495818743913188610515","6637074549079529416739232814950531409613090469922787253991308038219905474403","3042007484821627445120830225760006405192082634864137749621636257026891883326","5337388510268581167254715112479133594089770138749507073603490761032513368106","12325446798142239188409242319577957593792614990556679862642230477712636037037","676789245562467194073706116744095779362669155912771165373940448756070927910","5854747984773506278911353281567883752585612596682487681686710970786834920041","11245406467967785626327694659468342056789182160059009120973665143197638081760","10395601815816075071544509552592627172226369015806880764151195346316980080894","6756096862783612163697577917108261850810460757753491809406999449771712474223","1708595072322964393019739105130946639405776432058599259998973103484499438306","2817817145890818701877539103826217929456570347854153048034669346981432211659","20337270972708498869284875601749656006552838338471813066271573323209168221011","19192338172842323468707146045612196807750411464817516820711948717057036544820","17223253657227310295312621282100531845543865578630870272599545474783775759681","15004735209586276209064505708625280228119288986650187909395010184201059452346","3875652974956649356154345677088455126258183810851242537013757276075769588050","10514447960615206081458524578173743817818597124482828867666984705327684376752","2087647010835075851760610474040959236825470174942075295716631067964093542910","5927163251920754154392384551305623830535034440727310604898855074616515892551","20585333621997037505291454298836355589763292536744926081563336065939121006537","19320876518201905459682928158170419256739531666800973485138890064423348282196","15942638804716709831210239594904570403189415026144938623559274984027906868220","11197022744936474661934096628367688581641778841814728682794507017845346201383","11034020922250561671038205476395109731446686553549026383358725302157324264144","7574933006942933995255906769787776608010920618615581322603847524789684181970","10061361506744906780155460423367413099657465765582917482575074226383566926764","18611343221859570540963418999548488653944851224739716224660835306206658947980","17094203924957299390365889251598099482992645049968199405515681968938743421467","9407145832890449495071969940777105644547801064593141904558463573167881762713","10921438560879150587765515492087524756046482460218342400194862909363870270743","15101279960899220452674629307354995123411280418550386595937683027146194547144","1872357133681596467751878560069114718371273548294363719900935160833598069645","15505500304018853111989216259257978796595506623204851206292254759641600763191","2079667978353221447444850850900204451820443725835104896018664141845782871343","2852655320672908960411014862634757863509253400797831983637863741066632490909","2702824031197306101989338159138451445088523866133498139857862801497066633794","14553308731276493692643101846551382187575566516925133957384350697980935154102","4314969815396483242407853639218064117498232660761075778657880116870422414637","20236724297078811959918602376319440958076910292454596856154100774072250182183","6360017115980704736383763605019264589498600998515606807745670287390050560160","20856970531105411628054833058646203890148287930330473527735908484791842390307","17691356258507144960616314395885779533907781694329041597441621553108536658757","4464167934150673174817562382299722091160711333547138388803048452674668158635","11538922347277268848344412167140306567742076984016453903533772667841006045703","15558861252260038101730449864896864763293561339637017072015859069059083288561","931980552683520059135814229579184511049009637966018180567726214946979768011","12746506550979326220422215987591117730943427023997792332255149062957909690818","16416138987000536018990311324687201169959549714116951891693452597169869821726","7473835750915837381583185047008243788613524206396316652305987269933344653773","21223994082372071324452834147900730753626104062167370333103771844983134656961","11102363694946721470818933128034696027504133564649607436252022322296041603786","2666835000155694643357391634256423691785613060199379949509682292216642706081","16883033667413528795407641102416904598130659502290474063092941543309042023190","13093053604456598783294628038129487761924241298889312497497820946915331319389","7426349812936697309541457521193139970366533826612714195359894150484429907425","5243217285990182677741567384304278362485372018078770234262925321063263504918","21185490040917275396474067542756068684704036418473170810170344320388557093876","16181135763579884029508432324330748636846464150219757303321560798898398598349","18088358880437096005757355821526785623101357556483672471222924931365890201571","20418860027198053484245336569800730261127301261293595190270103940460998981236","2058948081811170389115771489993053947061173620273801887242248130631460165879","6353796008567532863300373986154930294334380098977007704532496889557690195858","15854609649070278722833415779491666201355987522519101725393408435189057056690","1355942327518086746604287131396672941922424788908995789539897301592998007690","10194046920666955610804398522181498854525794643476895032285888778350918459761","18342608728256650520630397534564293474806178807929639999068140223470256007117","16101948218093381908101491223075947943147313203969904451859930796280152622017","9866645853452683082481412876547916795343134459981103407915522925093474319332","9309485422719740772955698359258466728180120624442685713365406080485336040166","5201701081505060757054562398073722930344229781365241858092054974705598137660","5279555243870694216927790669819597822350327573071817682265773244733785382064","10661662716572743893824841881707597899963881485303936548294117975770384660590","4306964326426793675768869124893413588264762573088622132302954501394542576141","19945975928045383298785833694292459276727208605892865429301546022994613804030","5037834331249812829239656466783521330249138768989720606017856991559732121456","20693877087308232030611148201802513236570270737947270986743265610517665094074","17748932969923719316564673051784340920943155490113289807023660243301385585070","16950307665556055391386715682532553772527550247031548278958142572490582126842","15034211391483347494286112687349366897258989065045859280146461213731663274520","3455096385235320554100221104677124747996171720170690637998043454239897385610","11220329458242704347549150795173830262585759464331372299692251819012138352257","8230076319752658879891285909687940775399748755759819661970430769188439691274","4178690445391578185009939705412120505162313641744671740163024993195883735198","18632680236376151061913536149173846032710756800956417249233907621575802688710","14168747730472612819827430620596085566004981811676505988180237018638188025380","16777617016129912124437138351698263064579177499617525409625791377061066895460","403267570119386144603206457308168792379980670187570608148634410971295877610","11045890302538505532103216886575539246473207034538532950483165910580782953337","2632893274667647784827087132221744991131294771819888858265016332574437797556","14022461303364013571172470728150898521630042996798160127819093871974124417229","18349129573612583311962846403448135938849737390546876598640066736462315682295","8009723611300112743690923532773238474616291315457276539919568488041436720507","3287586297388209299132232426281031982329712892122181769502106059441842217623","19893256464101780566218598404932657965361824655069879954668551189408491121155","21779954643920608321663779655887581582907923850271820082121309309571440586162","13938145028737822338330333388496944993576078307754676998341398757402576278690","17280605833933949866452995551396279974325968699794264573823990818913515933775","11562775307500290654949270847967546133812416593099094805234457839659652146289","21556021192476590536800970202944195471695121915357500612310904064652863447972","17407055226077297021071802288772735837293135175537846248261973015744713174949","21295838064085671525042198277220548723525913660103018392096215316189390548013","14589917958236435754986191512564058641868109230240077937707647376289105324812","4538073055458854134606640263494592220617270326115451287834630189270577020111","21247609438242282269742265796811514090579388884916478939008977411932487423659","19263560475610984724826226948356735903574936974192558145730920786586162783055","1898614508331499418660051276594019416852890004788354240344418815409520758722","13346547977920686435662774643991891597826323722140876186086635239306340843003","12144969177194297999321084025481801838621405926243412487948189180755523714531","11624156909934489978766768065107924627236090741698411458481638802308500352917","8674349037900011131899280296161700067911742760618648557038290076406601619864","18627233188669469962636721109716646416813512041955577645627776298400086440228","1153719160094308748956884656041023320488424966635003188538565876464091909764","8000003066081501211900754070779689975656073731442793160620896624291841806771","12069801117560082050163959286673266840809976769131514316118288648293224324822","11694828863372498882861202648883355759680038037706633938668096525787115759720","1181495201505177954430275085371953511604847831716865494220845031383860562941","18321980275956746302814628602546438645691886543647725888694024551609678639266","2785661975937033521551267460848061931764727388015171856456622007438303671899","15557886094116287182932984983441793820379366058597052543066101158081817575352","175179830261452669822497364983291141568331314582563701393865403724263011876","10455128373814266139918350629083299308526836847946708764631040462916637941146","12622681406523708498691044494295298210175441851465578469593208754136900020434","9624138424345877000077746656879336097173254842107184716328214933320809030543","11726383465426411877912203592949370178096897707629953853811352568008881233112","17566146584557385507728086844334319515338136183689530813551207417981719751958","18423839150858891406289385710861955437811779173242111498197433255650436048047","17408376662161624435555256564084894291578222902661202310977717110546842356960","20995943422377609225953642092578140203148330329113983394181012996247925741957","10409490873284794620245703460832015892256721643100501421596423100640512505920","15047062105747285153444463303020356100177963702386173227676803770571846532695","4535940688608096040988822900684697329863791065464226849059470519882399535780","18980357680792173392910397806033731294240363676914829395702138582894418363978","16468042735091009392571235146440392007609078458297170996132218787642722263238","1869769403621899262774247370472546961521039203681166934356431996537822108263","6151829532330885020831674048300360431343535966534922988242884341920915237665","14373964388615044752046531046884609884388869283450342961030080770253954449754","21429869771065858399481388829822721985084474326196139156050788103070270663923","11836916222341149344359827526882466618136359738495035945807998286429671739008","4542193081188277792793758113018430324598765345700596639963408884670534634317","17262340128494663310404052919129368521415818617921877469042393034218456907650","11614110585474201606235056157412783071151951301104822431509283035322273244217","17241248261774133453753660970137875514052923171943595080766050681996607133130","2990875140768570679733810173464987023133165559726680992079139149034178002777","10032389096385585741539206260012253444831624820404318451026478423856181568200","8391217416130739565515338215591963109158836617019021044489286448654465296819","8553700889274799411012667201578367398970695661169430162294018618925895640041","13529692770771168133213371031275281478756443444824139121847596546264553079152","14478949636372928879378459122088894160202116364833386541382488835123981766413","18528743543311452855194545818079449921167163839226390851954136986727320245809","11724222260540829258562889360923785293478512718704276634048783603461995522859","2652532822068043785753514309321715043229885635900630208154874285707479247265","16473666207635815797882774885364997250503755116232911726426811919269547851975","12436631741803099512327160776479880302093882812091908650798222524569929954222","13061081443094122428989571162147084312340276850316867585582410062467362267361","20909566607465067204267258789556187669343825005173558971220332255443231196363","14278016202378252898173761523743422243750790190417896338147106476354187349947","7703701752136585609667768350038563449121231460368808945757767724712186009894","1622258312841010773225479468430896972269503924285598181547410615000034107894","4706114868510775588142857635375822293570353199661120256611528287780303504954","12723022498690150801900112713057006417552064300221766812928489357200260312668","7736508633931646965699972944684083339925061856252811104228904321699984469949","195095354858363944780141950724441876473553677166595890451203685104276178612","18877614091447727762374351623731936445361116363480970639310200637662433378180","17239262588506530491210045452642505719938421789517734104955853192075731537629","3391556611912995522919492308422471958888145521362922265487749943660431330300","10164629656754294522862462407441648133619259920942013682702008716587122474446","11939828733425435518898229234599966533928666730047925120030711579782543312731","17335155958861138542643885799966192412363788951639890938680530110842555336617","21068414996957890621467676209673805582866493104159841584377567318112060433438","18041291613104743972430309067462668732698702146146761776321539150844598296986","6149130772490689572076747194977244577047643214871016443290724757756394340290","12105848363324940274456322072887282559016226587661485273111872063034847034485","5683957548001811989600472365740829603387405501208071642225953069881259762607","16529542077365261070047716411124689196456625611983373158922227651721798753876","11961524596519782767188645738887896272947446382672325012202336646508449392990","9785728068011868312995387469680578201705397880590293454099364001157116688561","18127416268588083447440821307938591826251677223119815897950307944959875167560","19296461637807972438220899702591874518336722552660488565818484435311224286288","6801016831512114134395242293457679538495311188529990156831889204433183626116","2964298470426582070507861407971247200639242211740381994158541687335361446525","13485975887078791259342768620261671076376983307468484850600890777864999230190","18842264035089067687391583729082424222425351385494040849910540441253540345719","14703642210510851071131854548671393020078600676544458548174965732036621712435","21220214849253889952179905879367949668848598115028365535238742829171770487419","11808561815315084933226034934054773302447242219261466208644893422841430468026","13540888692913543742580940929469376532537583430034252053023468103862294761259","7244161097354558003276348625436123965060461415149286453943040900234287411785","14838699086047571226987010390426316539929576717533827724866261274778253262656","14556703155521968503536618488028548581329555701042498979115582733446728182407","7681623302896593715513288894378158777679657507901023568046253058158573848701","1088441387469941348668229287331864702951247349577784177659963097331109780661","7314603916265509104428110912296267885635061026393352039011815022900719549691","3986211915826218802854255636104488183733664187834078111248006041750140814882","7773946401984571616670752866609685859292708427659817737120107917606152933392","2842014599902358831415178364343115068084073955515903534808862171830738904933","5310724334723991338015239276468023426385678184604207589409781216959654582406","5255222348968955358505450804240823699077014235887887249383824524518164498567","4683270496545943333741165516340250527555279356319043788098737100323469078711","1419863943011284607504318632953959861647793372073243840131919334395882404459","7983638904317557271319561780754076927110887040374328063199742162092282580125","5569432847705373609838086039153225563020182698189928344759413994203981320990","15459233133041758499623402905899885787129812358908703405750502906067055055230","13557004098047782158753673078158469379829777184696159361573537670440394932233","15455882302725774286899673141535924396516348007554186719344822187820635072053","3420919058826876625284567898132572990967515410265578892047210512917031439632","20100418454140979684745740106982178755085746706837715848777042819378494283102","2569258507332519764813672456351707773863376375715947817185409500202699032309","11051426796304102496144764766958179671506736496976882366028801902480842422589","12740229748287653735988491742372785228070141556372656548689214318469788908817","21628842595664718258888324339774974922449098458375293925060310284267692457557","16339231976272978519029290439531768093693541721039081313180796119705575069472","40124736742096746520902512885311967045111742860721554225254094895613700655","17732965892472841235257958105891466451086090480423956940377743815006013439","21822629194074446176794925064792912534191501981075390813302606875002422233533","9308214945046921143097017249780654286051601646816113552080893008307002107495","1407926751839535775233537792971129618756456590720440342541085713782189375466","5640645423977029900985251540406734874840031539109774937559862819450972865688","5033216407501194252797695593441325021622991729008118693554186469034086370061","8067057037475400447259522316648004416684453970851364075976857314405950145375","3763719773038467529952189678629891209905984306908045328296798459182240539135","16939797418368521863388331657892541744299855742774206972703171911218723184714","4830944198856568835319759101429165879092462296316662230100861015921313890231","12704214658232136513943612645116991664417275945120192627735782298715562058820","9273823420095008025667777982828688153052061387261780450903573585273931011552","11055274871946976331353174512200687536982312509623944578515862663278819898965","6608499500253253446996042326570359354182967780655057286059057541317584758989","20888058022129906086941050692798413401844596394165346138911969309287247738108","13297667979268130800823342819300433555314639138313483863899090834749801969571","18968104066692458124571065270953767119743779337036553042450471941512165236867","14932841303199490878640323744926137685749952622800747995690439854118498001885","6250599214474930878673138968631643032807502364864165001640712550360147900771","13872044280192246670253542029636668414586465840988190477111017540404431909403","81456119668307937036914780206985985650137679027930766352442712034886058018","8178364156193615628946078892680068624209694278864784660439209878556857933585","20847565685305938921688196081711559611104247746032524045765048360946563554616","14790603163347071870110696142274029411377352843070075577069234486581346354229","18977464663780407707262531952390299277523056655145169930121579582916387871374","16780630803676794749613238124686604459373604071531057035207376612438682381040","20186476042367781999034353334494913683828163385175556939730585228743410724033","6782638209588187356802454014110236225878206067794807253486060610876934918759","8993456778572039939715813797180666624819850516232234360679317411311388323391","19966302498904269727099815984264954717659138861990152509516897188319443441697","20169703794592063233917650314404110898564218327366603108408586484609331826027","5979829627203584558315118820578826847995466683728103070319484562170838879477","8237679343008214539352062545936737645555361114339038346011678993504862443129","12382432100828502258569798167004899872248210099869176340581848176730802349663","1568185664985590267262857882936657784210740515169196983171026814738347336756","21214766447038120613598232832812136678657988502205964335817205381807920739938","7692941991237742474520327457310452870153482370889548010226143053981890424652","13595129445265049664221406027681079958478209116108739005508499004805469917071","19188096071580221579092496028987371780642557049389322053081699235155567772173","17975673380464001374676034638564230054429981676012676440863525293845130019904","20841685157342026757711329464299804445471940020955209397956987009823404283299","7510778644672212989684926383821874729073504800968951172295535413714975603558","5412964648109092367425127656145675316528154462488440576988541278054587052058","6998001450950528857399821530729656471745472711969582871968416561472553420135","10017795190513370580285083759517584035694996563220913850722002288744022757377","12113185651597474067026664715619946415749981707739597619454641751791169267554","20451540737363571466111039734160615184627155382583098695879349204357410296631","729116950403569953818905038668361626861855541652418271170712441039707291924","6874571610670154627346562968411422088198077609945741147515101915358108207688","20307824547105117373454598908217917152093200208838326389260620574762152675045","8758875530447210792904496135011086289851932865540018278850670496425499052683","13224694410602002105805224454797207933944742532123981533211431845662395381395","6621493224766717216701548708726891168784911176896760330321592836065310482866","13937858022779991611039558948054774910543950212969141252259896915615778617893","4917806030251482092362529677296731621677399228082641707762616055246746126061","16304922224312728276104330461175394847795848175925462853738047204383447573035","16678452722472429203861326329044632626530032631343862086351886162579978046420","9974691111613144697061424119079539196535411918411684404824080439336446439564","12391128852318795781829794456501239823062804741032268163807689059014957151322","16376931186038869228971542812469753097050036606517944132293138523631153279825","3057841358487505418761470758562979965285993261118087156094367416201750095404","15045409518037090814105826994439679855639635253710791541219370329682069820225","13442376736433669968016223589180307683361433436806777011753497283272674012644","18917174176736242961299708438032963296686220808211170958894252981698475343631","11380920704380401611525239094209208940853859054744619020167150893676619275400","5399632748693319676480270098239871368958944610827825094400876104909425716392","3072779406768337118240884091792704214322792415195488652476136252175179362880","8351873470285292321562674159922105545256148886389216816367528787141186556758","19039526722628732399365091326361517675801947890934047817293511021151913744591","11316453563295765895775061205389385485172841919365628835333993250531664655988","7850755275953939062184858524678116551304016605992491147837939252676680785208","189663666172994057560830062107872734380479327839628938168402275701561917176","8944554955574110171273295960753608410178793391130829960067372967633462961614","7116498249918759493875054905542634690892118438594298685578805598675410965669","2535963611074434631003149876163530430931993688129878286594756194015465278460","18022460558081751594574692271414706303627866472796139479944146908393139741182","15341193598946540230880135952221211503846552166425406354080863978843527894671","2942431717153385426545606490874257811230086292797817271859433296359160259239","3009774438756820489964746831334449123894740822794580986556997529296717581423","9496138301121689616049759054935646143502980987880350156990306735995260671175","4076156724842725224174300000468119057699244699381290980710548119313376968129","20301500572584246879220468905731058339249778940966192891128325027181404226629","12240449395531309263037726882974869058539543342019721791945417590157321444565","2734576041547526732946886809654954568832411068107541730145912482251139322538","1913611111144137178181099357504813610426696502807761974432419767623037547574","8323981703091520786969788588517080546120036429535328021157459160571413370125","17608089795804665912003122420873117027406690592641558991713120617999818930151","17954961401611739290579723858653246962839079599354059880628870682426849304674","7693642591048722104105715300765742636898670019493041402551952316778508785882","10925165536949195683545612102300879902373347522535838874708839717193999335745","16740598974035404805544189925980303793846400946043080633235004418045311113846","3028458114292500648266975052798389647613432243149006395166123161184170940972","2817600861932061603203157785548222970685465773360278995551965365313604217882","2811366666795973435332404603090484498270752802044239619104866535127344245139","6901007103297959557257110184636027233977945890205420866896244199105220459744","6811040256124961160848956238308470640308462502755753004833080999365205628787","846642049586630199735666112786431409696508103735494916428842550432654381594","13061166881718302681365231291832588791959186056326831853549555763101859584396","1581547457654855644173875819143310956457964952802128135344084991507959176621","12591698412731075291488515328885878994038884715020576113812619060374399968487","7129047166046749599109058206849766841261983329246180789653876287940952140294","17780920041966559015242418384239510699940753783778307759603993814380170147815","11411967002648206460094819913767451172535988461576286592244752756526683869398","6535147980143805768211908880661065989475773196469834562468932004056012068981","12872366293792794368642323198969017581196463071340612957009439105182673573396","3845096876544992085668616039795853840768469571100517631039776002796484609549","20386025860348257305841141103130861239832870083066852913792413739711579490278","5663975388273723452136125938377376330824298621841190787892884430812699456136","20880523335705106555101009571713688438858731841737802690910851430800496104934","8664815262171336902475127109386834836220742848950659183106085559300961747316","15212672296023611959246835252860546019670000046804751249547303425954183847429","3786255974807528210793957400325837912933369979823637013145025357556219775102","19646410587152058982763388053845872310164493339475512721275474101828150077273","14407426259630290801648546162995549804322572985407158009259933675410180400077","1275955073103101917295562169849127375209112030395179332033340866715396722452","5487750760448101899937260261898752719887276580825994742322208269609306618405","12414079753210256499611439235670285717945909010061941159696368398137523291140","18058271753030912252347026705895506604519018890772902865355002646910918153759","13935235821735626611156505080089322797654275868806802361406549798199236177528","17110498079878546324718511787669387410942622969712445909354000807236690314957","10687508266469903792000405420136150569946636272800228999781195239976105560612","1277956894120355360649091990517188151791867400124079104247693321263057601099","929982009519538400155920125117423265869657236620766216139182914925009802954","16559970949358997473575123467518158994842000800881347427572300986319432656507","863852544580033885106607226598354103099120172650200980695458006092725115354","436810575313416269983882563851323926836428928449351162094565391723605483516","6334913013691170767138698286357556285297887475783792365865857018173994149486","17785859069146472999908840832788077051672090890508101583397157534162626183973","427206014337914391283601765560115825767253196347193816620589108299037926541","15115704735938262072587983952645382098893412471333885175144579020987265065203","12017969315449748476118643575203596675122272214009056004034938899095907760206","20642434407226804845623813766397536183962927868804716012482833199686414302852","18982318327848493301474677819747807686491978396022748137991684529478469330097","2306193794828709014215315860179466106408084703631347012188232489780230095671","7060813397820173935956757571314686808083877731722252822508055423697679476893","9925864312610988474999359617458205534034473691089101964213562993662824159034","14036238569106986370932971272638702550236692459418895654245682921654874601312","9509048813859143088347263336607686057099400727479311504780670742158653486206","6842166521132564137619008158396211111980991013087076743268157882198576269675","10217353423046013950417213172971567565900229914457220187215408404202554351836","18220384419265532097596052952017594673237799959023133602933674050572298730193","17866822945198657177461453619458294532377313634196332518543246556611008452933","17694368679979949511817467967015330546905282492241200905890171992458134240678","18971922685739566979638356009544944454629162680819328093994329160719843056737","18684937612086669383439812199377945074448160740155966772829350355651237261795","9235876281667970051504588287667786944160228843888838710239865727309603061015","6187574163551283282357553100017400574873868151705871779659681332774938473442","17196369096305464930639002419417036905613312721767481044644254878990952814786","18296927216321111202881056198300973553112302777685079899199090840516364581791","4983948188027170589078739023086929105628955321978589464920358286161528573448","2276814237931645487686771259585160667452008745791625290365802841496721618760","4138273157833414032755498052453436990872835066620446328921138739885868998379","5835580830979414828575054128735121537583042482361311845838347096674448689116","20992630219061340843601881100837482710979119542034786928296223633950908472388","1118381353525339785976839119511758587763620520383755136959051018516094253090","10337002023922138844951367775712178432524190386722995225923120494344904079950","9765947418137225404722546740514250763898752374389411503005283184253024586058","15411836962046751164622748177831913963909013265942110958658714173394711125370","20722527012138131360820192152290968950993396481440050289358737370268218859591","16585853587281811014582898583977502965045639444130273779047322749735299560207","21436098743421172924014781240823435281025352300035264733201366114473419058727","14178112462860881459540462916598447735177675761773338824394753907217898488960","2590560710846804342662010467713568407285290476715663333366063002353018991264","17949223181156469858379065899254284317305309247290121304422294912030586532673","6940063127036366626640075420306454154706369567406835284901717013872681276911","13212339415583029091219180722363760875223983190396769244985733901171214077679","11143838426689049623360248250302972103117784521940658207527698432687552942591","4994693363062895106345077091869420711664571716019971952890352464184561249569","7785839099197795033948112451740381108555553042322704038905686323540025631473","15291655295654923849266753004503491258117644584862711291502217292211074445996","18223946690101945712849081159295298164630378278313069852577349403051751559726","13247893325056509281811135293440873471348664328435966021736203439379360560346","1838627965154116499570588511051176331708387980121591719463695143475045130831","21746931323535899361372833028120884537569529325326959379977185108159655128847","1569229799996373000993208676467175871896208509249271061977636872731081653113","18668959729045139805375896352501526759923123936419773886979446262254907152787","12698285530824454564359053510831159718450594302921296519937334733529589738160","5743752602883180080321224936560739109224279187008023590149271256478879997507","17615461436426765950762679333452659818080751337498512367037395397687644820677","4379963027402443949761342437016192165148025657715626365315450970388283739261","12622442863880120105122485141053297017921305018805552070109568547893924027508","16493349884995741255319414030015325273883108492981717376626952633010860098410","11501183900713163689133184470477728399861217340901493951105967658399341986313","13184464903575565740074003127437693743650101614906307232173855163739473476900","19056993236227362680720448341933549082689888775458266843506880469982452347227","1180947252747369471066257076205537751320494098262241412291924855089764608729","16229532924404554580195616835338949126663348103713418556119694233568376894947","8604714607572995451336310555882946070542334844212691610961393592348706930493","8362594100280133221998296898045505539071433915735634439526614339277300552370","16399159148365956463951582514857891684943332179297226423628752792536028483990","20791958918883897879651946680726738927333774947616022833294686415482396438838","6976099533465307077876553477341301102578695004868981952387720840685240842560","17588607896443047770053818219711270035985826074286753981361920802895326076124","12865981806811655044812914486873432317316688987331760480657262748139002813688","19080259696546964979932036247707282742365340353585423017939782931928015046575","5475353703257038456872747308072401784844227202792527428899399083236860900298","699444932025038530835460727165156424336147795146205258896894678525124927461","15695622674480818777943366659102932349783785381339274197766151422625765388038","7644428489984569999599080644830401450294253782967784792584750934960812468382","2484044190398385977417569061356693291812041338880061938702052957819048506706","8456986467797277421685766156179980502998860530369856189405630837033584471075","5054041625001826317568038929780665383894838531896986763764007995985738029810","5197336058480822437408118036219119090707158130910220019747427914262297331861","8896147437242770809876821567936215621570430903276974181159659855796295866923","20755757167342693300106178757642141909843395817794855978028122598254488316281","12495257799325917448205113238508489684392516282807104246531380538192500498286","17639970982424592615983334078785592256655637539816187733799215839326807071148","8140016957188286078776165555436655378303814378750387793587919949009492167586","17209468066776420206923060639618147772644663380208004030591040036263548572020","2619409586309117922582791327977378099828554504012201484641253637770276078843","11172679254412598275301264634812740710430873755458899712228629497147611473029","16829502099778629987235691213955928527920624415791356237580609633148661633897","592799060717298365629187138482067858694007427100574367745567028165989185342","16864381084532235865281462338072964457337415344658720676113860956416999505572","1015589663070446561434523645329239389344944669662180065723984179503017360337","9982212112174542265411457778485410853904388759147308861218634697975431894510","5412525702631618381358272227447367851318305617863423359948039591381065713581","9852930575259000100332996271562617389630146990442517175422889296173516799181","6036993105785310658467845672504384047591296265363803946714632979523201713762","1821500632172143873156399122734194851200445368324858351038486833883177057468","21556520116213603298246786137688925835788594639953568860110645708136881336676","658318860971707056155247027603536846915894897192791739866840963356575472681","602842622617647573132938965729563329852165494525296971607175031334298950242","1151063223719891516862415316972915766442753873652837551132768558136109394634","20030054542089253165409106868864476953251573918915762537158006593968012247497","14455078111822464502989472874268580626098857184523941794725425258923962713053","1699191450188970110166570608380346465689006650580298122024202987580198200132","13971136504849280501801880342723497383580392506287195375689019810750613223527","11259011415071078991947983706483998982146186263873384729739331890304233635860","17741270384736018529047001790810396141344433078911295725171243367964019815741","3617456068852846022110280599700245470402025130645759911795429861830057016581","18773989857774369564707484486703863617112883499664601804221477949481034222590","391101570414854801618801587626783162239406618115954162053108159404294160435","3752824438659815340558915518196975380567589032517034180452547083690665271869","13652227089592801810376789544861979384538590096633526007583054323554301421745","5753030785259259818058977992956569985665739253964735992489420513570911607","12794765444364718066463627091127875266371595037234762762560519184694440318642","1844165267423966444579133456200541636533189889959706801468771335509321515822","799352162562582415493264759184613437140226428304061991778193411771388762097","15915114786946818157476898276501926276831197920612814619300062353559927906953","13041871949144831370743756131359537126101784549008553888408794912277392285626","1684702427149441531010110315726002248751792272226034774456204740385384491604","10195318610969070608511028432066597876456281143783329459466964443360549551082","13714193389971576085579160116206487363436474313560046541969781285568217247624","12202470771012770210445954644081270058473831351768121852596394422757629850892","7784616613742667796197638965440313242748565680231200921682296807888993222090","18581613859576442652033888735999982405110741068271804741467526764394720805037","14828223806255884089537896775456938290494683211666564494946175120085694803958","6191868112332934762674478056112840408041237177775248347690069948259811627101","6055199518589075551800066499277675747934144570099354689629636497613775458486","20043219892592698889412649805669712950039510114250762278667968995416842502234","10591576812697540586115991527347511638405122244793393962099090930538459086772","8146910292072979142616688207315340017602882692938548874592904341871514175303","15451576003386544225828312996072681331940167554848966592330715947662789205180","21156998090948310800651324456525534600543417534335507361948830316109451323115","21421497039083336739241851024868234958744697872115637345287618993148799764131","8835309990713613011240324096693076755485475658999871502819747407829989219746","13102158958973358955423565573049580406238531533936309830903999596178966162490","19927703189662863743499379923522860979653455328626544661291243971618992342837","18417771183154820005238210056528713167003520086953806649233005148247829186154","13242250186667974182640987653516460478853973058739850129463954545512907574522","10971901023853281329361069638276077765206234747340067637718378767976633645829","20436550472837870181409690438226695091760115955076127106091878852797639823191","683842651763399941903331243661454687566310039977770092715404267515366625429","3304534668380354910105587611199035768704466410761708200478786163367382500984","14327892159763789670354328059011011973128878640806462164819794130243254129821","13712101990593648405837473744314130986494510088132644940425089514662460031793","1270386163717136732049662990020454155453019401464056820650142849751291739739","4559668312052315567004252521434018809625818725552950834596073025095274632653","10289456013947128246221059115194021747046925564818529566042034047888244657473","6981981682422059144716871555026845840161063380660424650450978975416029699739","13275723002453843398308458799872954358948259042779675411059905047590837397361","18372074965684100000331046096891533070433189717560527825752357282553296305210","6007153627662867365254986874716350833679184737288669421698890656788831322929","11557682792813633323168221751485510314542594132819842305598531070629168100143","10536598621155464430657941977974614272794233321865085717974545329727298277125","20566123440884795144385782557360498238445700080133152934423121801124172346047","5484210585392274768700243869223282957415576141086566136019633416151230114084","4675266041161206862174450141632759296562489084453522360678052892725376421684","14506966485061491552710372008504993235111668026216492386033611735228479487468","3682565950309631924420685101131217452257499881999322497664342243267291843503","16753306733039910894513530708776251948831720207834805689601646616427039909037","11892397629144764406188085785897237236955294380381710017192179450763501663923","17027229171478232498721421673139332166581061755210509139252013418924500461243","3560458480908782960366816146149753544371185355186140843210760460011482921556","2523290942811919827064721825289040221770310594770466909167316010377190569820","17586848354290518015476851435178627882600199642491204839902589087637701736514","18771893348474501482962831973790983143756587183687952333177929270650139940171","6788202157749582404834375771398928959748074435244246320016871403739257327326","11025631863450004428764861086496374449453982180198151399523240056816657483248","3256907622263919521402687344729539839835290137654795380148237049547054026004","729757374802086603625382264910105909740146180896096383332210024077887641124","19863253866253150070643618896444516678169346690564661550005769233120838139485","12468569017378925985548033310919519222810416238732327538088208928920140959143","712344748962578398623451251358410865586764243720605242158768608887082462846","8546087066371010720013920767653366050032317738437010080974697619001241722483","17144825509786899110344839698077839239721239583625175190269757913667929043953","10651563297701188942358589203989937961905153035428112097802788565849122022100","19602341346389413323180922571631527509531683866957468565049297030414658843948","9238186664745057178430953403953596421917515090260446457039212350976296818523","263640414028390180122517954487976369901122460517389747631764885875587715955","2311641918305077640172935641310996393584851078677397516017312506521775283636","12911852110192471656473443086611566556755106535388637084532737811151296554463","10436700004928765835031725654432267178079115705246966695358470216435798181674","12755555289896266917759922247555708737024386059041699214870911784508162783525","17390583422165077903045260639521919716984664232208360646931078032292219709718","7412526952366864882775200227476857681850213243362827192310877977391550357930","5016060582872027330190350728607317487069057897723717249157495640519710863591","70447200134990075406173842139872041532268968648265338736409860251327029352","1545500244158153586647380894391367444874762740407966854865957002078767363820","2082567114283705201161441383508830647153064041365131752708347264051557391980","7773933577113494097575644205473257493685202208592412633139277067190461074505","15907352821797623044340355088248954282080052141018731890243639338361458586983","2453390435048874114321626738320866552399505338711520013030652128583351121221","9182038581165182763924458518550360578443802241218652973210280653624820005202","13176557622325900598244222336641110473108400343854387783748570353220729582767","10599983241136666078578113335543683963633036808782400964809769571709020578918","1430816790456574892099931300141571059151141389317227589818258647628212654923","7207251746626434553568433426934231676780727971853793874008147862305418016123","3847365229378532841231862621068765430417579646617713430532944299440264931969","922422158589085666348657924088867593873646110588554410818179794404300446471","4298485174770134050325487753075508760849575591910135387686931072102416450479","9475141350581193757416877790061277619494551108434152557051757495614692231364","7750163624390542388958191386016094472536166330496081849246099823270737686866","14363173695671306304956071467171940429435853698217676411185837490356013810171","3402134714494071567155197273072160417049647120230862441840621369782667867977","11378968132153772980874973211734670604659991740586197794619174704886870525408","2500862781199005154907185089778932765489906994365960644306361544820582839768","21880931942133046355810983155922578513531850539420426025723154879488808270315","17850206894189265929807971665186479441938275634968267590809377452033564010382","18427883853363251276513100116480886898434829323430684895879968439179171503760","18758795974827407022563870795763356401215175366078230621502388363785425038612","15672649260544536516531393740985073476934112035694203841471047634286525005174","14497479780124030172334631091033639981498927489925809517218125709975200816290","11190855071574099336548308963044121660452976926988171712775481672446931541539","8339442292395337481335048552147626044800877206694030770577319544121541364092","2461178629683239975488518502624530284391365519847067341739449204945212652770","3972313936510404965199308344697399140590038866586718833591813109326652018667","3224811019580618549699828950033477378112059204060062023677479068506440937528","18443657715765406615721041820828109800966587434816919981514222787674698772960","666201271764511484388505793135876064418452477237751508215203932379618265382","4434899717815685275523711262432486808621984251515429736982413712108987655422","14584918585762085382434085071460369807803840154636220934254933165793423091295","15646480282455307022430957975574008173154630787861430193406352480280577045711","402840791633175231660910669665966910050981784044822648466848382615330599909","15437492296189220094817534101128968523410729375545135146260659057729649968314","13987760171743052442513877961667805977500573882586118554487715622045738218279","12589095501858681021442730872878907609617459069328956803139727387371467358051","17551064250089164193025672794811675406761638177060737129533175904585851772273","13500706213131978087516005477128059726177752268287240395927379509000435850498","7331629294073516250840302816971095420668983701195024195892939287001016568514","12949377725980318589136021850295478499564248427839661600142796482665024587971","3988955063770305621858590171391799353484164878730082586815877210936858093890","20512156157023978986265779260320491356890557397261515752540394821171756173724","11624190532749034673782735319581023504009231230729490439584417709012081446066","12473562150323140802035699452896239306300376623759190078147999182702752528013","21504777935543484323252258287484534200045631968996932563017737909760083499017","16104745906544338230790783632377375683831341202924378150021598903321494336736","8312554144734150053969625169851557776466370096299754626528722906617398229171"],["14715728137766105031387583973733149375806784983272780095398485311648630967927","12450793357728630597819493697261391961392738728208603858426218806728799382497","4427733724068610336929510244982091587998132283636864368924406075658439074153","17863554236640577761956319447874252524561947852685470820159498661269344021716","10723868775598272126873918500257797117892409794706524915527428530195343520361","8041366806917098496431513544630989490693774700064656765914266570204855843526","13046986480231887538692223126751085950758763070227069247275787663666591811005","20228999562936372999611354929112125019466353738760451044697249912024766542482","14238976012080913074226552202264063302466135977295108038770514743089287570221","19486717852389551661121716850619781027370627632295683938875312739716376501717","15733057748709959668511822511174594221965585899587926036013893958610587491491","12041333229715539748857491855115983195198694619439452683631630426350435252478","1829888811413627407640409778757789140470123549237476514374669162490680512211","10288898018349095056494632386514957183841700001184195479721999387950102580094","7360553146019695788111059047354435502690072975650576744373916804385350955674","17476063720528136669048514677420727796180556343667231122803521620226101935369","18384724266969916899691009636435516722111206340289089258767862754828208946542","11046121967047431151707881264774621308937270618998625466342467829704953599782","20018232138773775379089542131722766973741687507582662224374276186775807685863","7926534193496947015875888176706209291021745851605316909116853588598743879034","8826996877877607049084007876351017199517432230182001641783930871320527792100","11760708819943554023765145606995747732169597984739408998714117029765838566505","19598000655770319703844060561747179253151181702222064644764822676806532882514","15036675263180992517064890091049355832990063162957265821390555448206776251789","1053420874580688637503969479036991299021138740018858993455108201424412879748","3723543690610038931361367959096800720510056325209292666118208798533818425035","4599370243050726453512484851927735252841106375733105184316191846221056036380","18291400382386598447603657416871816375751118990979359745849342284893280004873","300341627009231088404894405580745838091318300821994947846008201887884150151","13332605655619720841053062902143052543375741442250678582318225211621890248982","13197729598850829723360679245789196039442968018972826673455394330035263151299","510788688496484172389408566109007465667555285205327059265048317979249570221","1685584118031999835794907889275254096486823415278284757369286336252006457602","15103945090904102223538479231258677032197950627619049222966748226967974852043","6653802896618953033344296077900828173967467309849915708475948018848254380036","9254803560511166426410537422101769642611302194250107918342410310963831784950","17006557344160230194691541621666219420787918477303225545533644141096551358258","773112329554511160545400721342977593377624843987783062638455005748446223137","6671483881284330250685026918783029584764740571210869197688044338476895092050","20812941492969561606721983530907505914064782270990490150214736286311482532652","1156984923268097592347582093730300227184163551449762803735684309575717323017","15303159756724065068145651405407765401796657934219121639364061501460295743948","18999785075801878445291021498876384414176522501978873700451842582224940767334","3782716983967799050957535371991538595453996691838733068933109780481907925378","810443910646366078824923626573819081371243815242873044781414798707744583851","3940687718063184864573934886068875138239553970085689518511531571139105765743","1222092197964451545227395363538155091563596468425395922702697716100572937718","11901775018663948557424314950737290815973735008800495766054692238446226616230","21839369981774608005059280910009281502958794510307248992429390932011110951241","819873152679629471918450179717035855395702808145570990556719950289951175212","2918016794043041559376798791171848118057043459636680115122516324180788251680","10788401265856066217998495397128704450484607734353922353470809976686155443188","13599498756047543641157208425687419183141596017402196474108059160235795892976","4993390793677030007023804867617329393931635615810976661139461248253851471412","973050533401342110180605419751137563184725082821038770229241448201970125921","14313276246574487682858906899808269544140218917497205965354285099641091349756","18746777136177241043722556179260854313319807637092383577312657349740719965076","14517023428366357570216698819722831600577825429761151189605029742824536459972","20223198094330596704408798588338060788093323967112845691364940702136543962642","2924401185705980722600796492514644487545258803954418619331883216838542308543","485440919681570468713530641755278841324413691217763990572458853294843435089","21560476826107225363638525612645382878298890750874072774141701406519608285783","7856508582404120415593106596945280577031904101959961641860467517902309769386","1505151890969527772884247006998953879441745452105187039442954300997320053301","18861812597641777105968621029392243993700881183944538936666186678355756609806","11964609307983840306843122014689504510236749206766494519381451521217569407396","17764783391855759749651949748230026302359698415337858912932633638930034077791","16562247632438820849068750036602367255890087581186727955070681252413797347277","3341595358840888933968836940161983842834749603437573997372892853189756769506","3198140245778498430686233550970322127895441994253754893043542706415030678798","9829840339700031668849847901844029075426216057792062644639239580989060312114","5999422607425238131817993672620301343082348300090537110946144186609066413585","19901271533560906428202710740924807375620638454776660078183104891177283526156","16697165654181109350158134734382046723004976300078845885330478879604895897280","19171906568090360833249366643372143476587242793789646446664643684138123124668","5557557332632668793539639636185643553639926364115539987556075445308999628265","4797522865199880517123583692586561796505378758857130153602827907909887751116","15409514194242892627651944305634286919424076146534027188938906487506413405089","10407013998132974348561594118793213466618426284969698091916131778477581263008","2534925381155806875978186916525958864791165037467997034976228683909613017312","16140842893634434452708565053572928560639256480905937421023970743339301598617","7517617592925372620130293329989654305076737363747701594349097857054039164182","17572708764253481596340159581412737527195601517063980704204677005617144607526","16697796470163537491131716229045730242536059781538196375577575057386248458494","38275164685285960308550480834951641755153240877853193094138358285155638204","19780228589871041196871406056718374983456578990309085234484187723923738516508","4573417308961077301452769955811063226515352449986725327722241421281202736681","4768055042642730073498433238804346134649067788593835428664493008393684000706","17566912618951175959416490797476610679702184562687840273697859062459883449046","11477598695424707935165112148975667441147635429812599883095916948275334113413","3408907078049921938725945268376819484694115736385272440041090673225197146180","2488590561390551829094067182419871806900177001183027832070626654223650976899","12116557895894464059885135778994901345424716569754903115015740397131803733982","15881232965640921626180413777392630630338847181632662075996983398726326426432","20914323757596181391651855665547258251038466184617935369425714249299063760685","4275923143992397246911855313401177253209967573031785993454148836244404305934","13098973753894185378061607442839048669135765294488505596582737281481575045554","7995472162206735324879506324600884378126850726543803581430135236761716527753","3690915804478314734124615543749602171459078573370790663994412906012450478823","1256453655839486811750227055618146120819862944082463957526146264573763714294","4406492967670422538631080907830590263463047897583684262207883537903678091970","13380843970691717863215678292643800288491103227905602355694129412234174194363","19680159398793220289979983679401118779763854719759576408245027038965290325739","8515713472495355510508289305321355004480161123461789103991491891201940557902","18392703846804297332972535728243845000077361414687818948278976164182674947067","19823604647876421559318429394175186838817554072847524297827763377975574273192","17719715026846703054856559310322577442906188886145763860157972477138788247667","8745282777320550983079435446349157218001552450433897097227622172209480270781","3259368608255603766247016957318442624095407655100612967940789373312058996520","3379679235619387594255002628664818227413294377266729211815713998759100259668","10282673789366804521601844018863748004632586596870138135887183100195194767004","8431227731426467642712572981755086675999345721043460063547234289139267810255","14117058124827023634266519281629142766485227596060997608233088670325722698559","17113232771025226173986361792697170950811880770802373827827162227101499645884","9906220434844104062978204733717072107397540599291396561476275675218575564970","711369587296778404961826907371863989722457674941832862265420496583620086218","10995654568685707735109869974152491589223292425449581061000447170660561828729","17197923097868441003908860864777521604587651639410061820516916970875615238246","3121715947184842829391029463556305441693293825061846129844634146823663627601","8817835750782344079827519863863370969960597321588294656839911940551490704717","21074199894730915603594812797833479514843396752652846676596119472522115586998","8903588044620722375103549330291845285230849782400990458525441823641905996819","7157451412319473873395155428325762769952294079544485671397508107346256362850","5366933733103001902997281886950280717532636892191522349820059149392915169558","3729196254269053915687004590799382892429870424157270200083981101426772909827","3918096703119862723362353838062260616080657756068272173354821697584630247209","11073027330528765229119199873305594827907404967404841004751556462671634016839","16424651511178205757967439516888026957937418127900739730326874335888617161971","17036562818332519536292487256920458988625450115083747105277938048739292827058","795554890382567685751618566957270321871701261784565632343709559354970377145","633072079840093073847779349151531317793918731920375040247534587265858418734","19421194221177975514787747427021411300539454454371387008642591623632727982196","9954719107136377193496025917640974425520732567100168938432529522254697824571","8674312532180246290069249621352567303340886011365637785384772665860996736758","14809129550856657213168714888239735820810817787153747648450536960647330811703","18479959092813678391370975524549834571584338614798320263799188362327888537937","11754080849414921164216607793483937490683185256818320971638570891360029327056","10287736699385961112844233987245832756528102056561178731804188514133469579013","14370616700332892416887680617217669883953806003377620695037833373409292189021","12131262377053219810698216976753909777223459611599034218924662817794274728701","15129974113281645648506209149692470898425572316691306513209191313993708898437","7871644959999350003348485402403894487663479920989578076708137744830000430296","1576915733292398470896862707357585951921545131195468346129170132189223165938","13316238922195025030929715018519212370128739646325014577776776032463179349855","15160020868051885495078648274966503057453505806774983308629511566464684311627","1692269682153339201433258246771340974628904846837119864247013056373782718416","19628837155426033423644376042848583705054394443378101622337255362403724735047","19222966046507618124793516210121558272031295169005274768240595331459420997142","12990748614547458190976906297393525840623470679364771518133250166378979874463","10124996030376091099517250678153357142212975502206884325977282211158514276950","17630673366223237394418802287655202715156124721482801416980858260564381593966","6743037447395702022066513290929048145404894812633440602191382691018136524423","3910195434942407507599129230554588207801501224467133349280934483448828467487","2025953242925331197360540874793022332074847486979998082380244277507702608951","17290925253475198968609624243667228472127383792887388480830073536530705682760","15557314422719360545874148111856256188428921052029295715627017447052250706766","19758557148246918190283097589287660972538989627091387035573386136809005998935","10859351185398338650386876904094285059182038967427299340069909694684844129362","3496018793417449121342556434800740598384008787187762642325224753304909741349","13695501250971489187692201493870442254612771332042272465953359508617675704938","13572242195808512474816152630443442412961099907068902213470234329372028271256","6257061132956659095252686302119011010885219692712894010340612889095488866530","4330599809632843338876238530496396340118064854909940219910748808728579051913","9157987606978264109338780586425009211347479724574125407732261019832259951031","2328698634372378957406958821467382289342903425118775270878244960387352862845","20636525922386221727012980541907198653039323429055563362662406273278160984146","15847894355448175995216566821171916679432807087340467956339517156584053817157","1942360378421747943668019094002571732886982847410366696537432314848905467679","9512432294361739988724195228775769058251373607278744642461344881575127503031","7373765909536890992660842391636719615263272667672747352621337161184389163446","16805165862480928364732162070809175154629112007405963636466097184868514458659","7667777941325858499291332847392489530780564386762784335358233711706517931292","6446208647487337326336908745536052288215677968074882840304817109073334759485","11285516171986135785540153632137541881991922296507010937224736080386568662797","10115214387228124714106659470937696440920497755599449040012569123044717722706","15485618097017003479590081826451772255273462073640651108645768569284210541135","14933383877101576453093795963534828854771957327481830015228527838452944594646","12699366929120600543724208703956381057734625711467645612998923493410472579972","12636366946456086231704939526732303791619337704833963854669708252203542584210","12149350767700952579168066320091211427411187251056390220529300991824437924228","7521252564104984899409328139379375498829232271563704354107116269254046402507","12033991121152464927378622393121300999333393690763174606686511857615848602007","17232776948709347607296344257668859070263618035653710252910881198999758003380","8692908682458431891302516268928916165669902656866484222966303081483718910104","1253076047322637463481069610081050841277544153675308425513468857300598987482","17753389824587331559955818909257943804816005297310986968447179587639048799696","5220269242560242526244582743085713945173060875457087963936380952653150665967","17126848126303954156127690428371193690154903947228604938919561454676410821149","16844245036721981603144243350071451732279678956963696493069130132912694448751","16797761350119564409426534689125994845767740388070744929816576998448097719798","19353620610135120026060560134469588460709151673182029068633909633596535108020","19135326024992044270104645311242450367403619348108625528873986701416220617679","17665816362466043406415418194780245586053150534372814020191541209753248047067","11399583108978058354832763133747562621839059603612742599115200702193127837394","10094334549114303273265943473013412623520307578724043117639269488721170750917","21601458494506173036246860827162868889968956934810679234022762622742359366252","6386580477827919478878489737663301647954047211008970416851133263802072756591","4792043837032853062947152822210390150724912812294333339974827814683543135564","20876886123310865680023706563792643033695666593071136348323857270657128199374","5931154799422838405687052216230902279350178420072288819326391251206607447359","5239679324690579237822809044372316561806419523557737441242604861240795339076","10385003741667422202343482240152986976068622687279646189490976516013598227432","8464156248644168452015929033942509092145250244998026718035923409819766539834","13177537753162628205208392995644675716264814191265988042404781479197639366733","5919477377826036950488668794024141041792143979412430063956231337921980979482","1351402666854456730370541080745509803482004768817122599092881844387000676155","6818673776641149273361875347660949176445649468306471072411086367313332518455","1366646945884507587781123424154966453464902291438811059924651777083838835678","16219293249111347900064666257423013936256436002819357345030961998874555359000","779230149490072246312543789505064727370429119089791148581854356816464370377","18480337167389263493513952937037301086055810692872257722500635290543939189393","1345414110418158215433956620396568245327910182467730711109133441878095212920","12518315654451653143886317929532883727219058399486775127781649065277400104111","19716171362713656659833259243590727588692449255201500490000859973307782246016","1865072487559894165339723956247507020827160163812334855490266264867949416605","8915174456326318257703177400411158958853446829269268103252573093652570933472","20191934956657253997484040571514242713447218897800997897558899754776252309230","3900170788760364547006546697350123842323924137566872497612605525517074710000","2242244954905694264442292936230335662862827521454977184433268725352453968501","17212753633823250440920113486091598217346743686574392123683302470302281044057","11939276774333100126191320505078174289237596631307779156488772314461752488631","361355126674011999247836373885105218009746852422112563922207274436194144681","3861054771271956681986534133247127581996350841974597302976225613765246291116","19968479093411941747037123171825881488638273087679549521610505739311299462846","8537196135596544183619390135426012949552627827993128615534814021127294540392","2438879838432432949185118142364194193697006515067980632650379470739663214843","10769366200854175394348657213265947929465261545591304593688343101111720627317","8455019976119342575889554308499186802278388693477937667704910645050957262689","20644389417984700539779514908032253651696357386572813102276555909201716748299","8820039786383750409041489202684137325382534899692778928304664068322226640076","8636461459675525672530300171201543901107046823820677414340465229975162161919","9061524648737340075438868917468774023866583922769991567001812766008277156749","7602969742956570438827438826124187210014769304752116695796494779120606534919","17880480383024583813657184645997268710007005482705400161841684734099773182094","12468433127385453618607022105559942067759302463679348320088817783890080634670","5227335513133160328788197758812517500875193491652227971114102085123079105787","6151293357148965084809035339276030775032864902311425722089088413878852880603","13699219811250783019541356007733829713463891996344484242492968708316395244276","20523944015644472920486129305620987253227711059638489683670518491277805771642","10421521516830672217871475174620176828341870738569247402138774913961149048583","15243709334491280025949017219424981672670169674700467979049999809115231651422","15516151337135073170256217447458198066207320794936363948307836943072374966170","17337341094266438501679457986886656365327787301649468585664115813920643670255","13262611487153423909813660830277859169133522588408913308784951544213550636850","18531665394082016871726276363920851282983017715104457591860421181826617619235","3700454591945927209171569025131477008196191968736477330379417168348613474972","3604972001659087732761769946443190920343158947813896848729866695375607825911","20952949990925307134028293094501736726689724950451065635729323134614933963162","9405357171465854081502883779215538022417071330241830295392540662303830897477","21638057691528924765719568024989208898293733581278465977164525893773900371884","1423261214711655336057796638966786076518765517452404205191550645234914655224","4051452662373209612509106830833400151748328181316060758960838588997502328136","18894191275634392250799133342573131067016712303481664374003128715704286175519","8319722910647187566775047002603641370685637216565762886509056643924765393708","18376807271218398458453428415456722166053637869198381036620575958015471551748","12035584964270041086110602893321059914382792217135345721427943800456312398294","12648928151571890511419082198798501903838843998709266232987169892491925610349","21412038262513052722667255278175073999553643537758589877888129674442282140610","7706735190856341161262212613554225730619876208755452623628315796884166016734","10999966015370832078836488333389544875338251739488999274500058322944383211399","4088296406085952300442596245852961024918851819760395990644634222875937267642","19399822412575078284884340953745677500886533272999950579143260384703504507006","3008499431966541245607724530938385192395211534821775780577277325698653345072","21447244586691806434401916456546893987941039399147865009673973728056412619884","893624395222035047010673050230651164575948871010677581303166873938544655581","21402344785412208717452894839332459679574051179708007417742748857146495441368","9392712010553327328684355664342647815409597079361837524976044019430681532876","11566000613582826375650817776243972243778859250974226949316472392849073658674","12900046757905605731200852057204734685283283637014313056501123642345467590346","2147232762440136333246788660102778148879449441151868600321283583777116020664","16301766972982581403924204059742972933467455194833897714073756335881543890771","9546560122931098895129690583175071306095759562194496054583390881525378967396","3814097068175987733354103462855355721851435755267819873064912557751073632829","10704509016547426355599213335456446765914211024738080860797634337598031536580","11921271012710313311785310319425095342886561942032945429395596578758895308264","21265249694322068914280109016742517903125526413969519857556032179013285196924","7207578215754030787157150149235357460121567678249968060366462431427104673093","20820013978092841458072065536574129286011620075823185493370309064760526240362","16441600678335369077753559950421185577542163640313037056248177018465084864223","297097313501884278852369638329400055327872945847645211148627847628970916078","18298084629287541333205519012404334789930413367615524379442280529941257264699","15206243674059814574375077493088319889784970587286591062649045683132661681752","18726053049188513051286348977772545167577661574609708038977390139794201099882","20262858185621074639529176348089123044694437795099449154711162805012934737131","2249345697973053772423677422936999849381692933292653912080014325442939977122","20814726663898441680439335735982981967722006066824203970896314191676769388296","3816485989624386223507317175678560807682224519267326958526058565555245734714","16741230612980371365533431648017361867585544111098407772560748428499802539906","2436865301432265520692873922135716828388518032014231744012990863912440945389","5265261577128499220460184630262997769060828863581478135168474766310582001180","20550548783058990082416235781987882123241946829605049684648813233836863290502","21523044301008793877416122201092687874337292497403523925455260117417170777735","9283421400783174646451499708802113832695004549893166692004850391713463380536","17813773547838391112844362681067751767404443478918792865885006908077545151618","16486730475669947890512191574075897324037778751496940417084163322433837359720","11367125189013824464048785896422572845103707778462525259651446893275289247873","4759445724467851058773503846834304672223785226936531021666916376323562671488","782273457631193956426744043048759353979593033245260492990657945904665284910","13487130697992008212099652811750242205045881544509489831523448570173633517977","15621563974535086891768796441515013364217522966350445838133979748032034816142","19364835034502915244801518193980688426244659266819997726035650961451415757173","21037385853462058267099182407141652124171361973889761119816789091401609511088","20434791917020905003166852059282129255412677606775079570484129378535005615291","4835039666519156760310260600042269943079463379265872618778854224413385690994","17796521681519947552208651467058827825861565135255248123077469895978163706264","2823350440792171019111081223801188552138104039380675927963458669980277420276","16030935304664378631941573945857397096373696981104104381156313618686049806120","17523561865544155408760007908067668065236326734119657233234283826019015377013","3861341406966982603014220134107636493882146780655211775629734223927755221098","1327887013530867777305056212037691710827939709365211251951525926327942169414","16874372098146373517691588057974501095408377103185981262983559391956463291137","1335930538845994150082853775454018356383085560294444442667355553131066129276","16846954448852864630121063053695845658867759327963014776419090787323732938912","1910615356880143423765930148112668984411979710628153215580997630269783916489","8793723522335768214688108364110927144836722932802666660252079036893034856492","3725321587522884864935206279104882080790553804758085564413847527197687551835","17549397166194503933313005107479073474671951786436058351827338574279485542057","6575272615526665941236934551769345604089554458721499014263130089965203838692","19479945993771870488240738504390121923410154808673876321101554256856036124677","15218540520084042504179141700157006972641510542203443030571191341196460163766","11605382280428426652337162672330854829498688801746852913129963366330544359414","19452583367341408020642116770501289011436457479987875413223766731278874726613","2498463382382553480222037299113185800507848748313035345734629490930688205092","1815123960727364421144419865126922339611466868807520419660969560789979822474","20531692711768862540943545541715345229360673134388506876856593310216372259130","21106443640856542784867046664180461359993554892163126756059125921876166419615","8538925154199646282458477113696635826112766123791239931164489946578874271866","6179996393486486548378164504724190431464526698002381214818146508779777698063","1334556948430115939422649531996020210538905726908545666936164977436729124944","14555087544451841622469763698691954343538388285983305607235034906273022598676","3263678860186354326206053303615515256258748076250020171477442794745232038780","1342606052959540554052550853649027290857482440100275878202185177537473434874","19067318604617984900108104413860593038444834168491290140413988853573796446193","11453576191720077983310542494091726783885546118293459348522522324645101050430","3772400828106882724656632136643514300687950364203707059277582466654856015909","19928616354232846804233301414766074864065580313304404532140360351457581578733","17669618023197654971616078177762451816976570462585423216749814198562722234016","20487504497482961764356160511764652912371612840137405927810776425577238052311","15959943319286858239034503624455112049217253792773599324329593237810330429519","18384331160163107383609864825156022277275076414745740108239579270660154123750","11807744905122445070761653068499781933485269571078706728521902995972849333739","21636069700028297640587439425598371999203459272489053044479958900301869951268","5974406255004817187688462241155741022204236935194897255519053490391727654963","18655439470676485950283686008645538637216956533059508817637925480405213882893","15164692255429309369428108531856612257028649418370969640920631880841690009016","12342219963417210875401056442100023070134657858086394031902694268469750570612","481209231155250366998260270814874408671884781003382050138985430923825730090","3242985953168013112117560001466320034030784952490866310190327264524235633420","13671160391160864796369771052335315926068131063004086507703804642392143876725","16716228406804746939632807079686149044089946710213611348848847599210659020138","9496049727665863372935045496498617414460003517119878231671018103126084599100","16483340875218689502751737973203780724082025375353804209734656041473116836207","2627597076078148403546873341483726933849452415436198036537442451261384383723","20527956374075302103516613197928664717455732919429461243667758971357150882342","11711450220231538029408058975978592998998598526983681112180323327131923215776","14877293714143600802178367397934915488570060506993092692625720179311507474506","17326201000468992158693082078045140389930457394232528033746431682308160431934","8241890704089720408679017565592201736334812957892898769189351788325500937732","6134985085876540657808139826388808003135254271482158519839818774839726308917","6944918715501093472287921248184355748547193680657762762284351108190443908482","20293371855859360749476040038457808453751087076170457949707661658124460443795","12686929429491234226470786986230897140429036877303905464553700071658994784104","17469937611674874489854850805106365496296990924579100118175990663783068480118","4389315288495042551686883151731749050970801790377604942482415778510472384968","11356013296312574683565144017425132580728729177241949155779586695189495537084","5103616537832821778796048073410908442363049367034544148603830689894368565040","17797731362169406634431131949969435652804582561417001546024888062211188454886","14413974530545126251158359344156378502844867672748912889426381728267720393327","18860675036245741580291857551498220749884348391920381715922087052471051304459","2078681010293955893545295223175290151677764183673754633340142745613957031877","11594462210573371469687203943585180057860108341927961420756260896877407822187","8232172476137304604696594035794651005660416081930158074561971898151387789159","16234745736110953717672420346414210260779855851076189537371942811750295876135","12403261277735118438898936378116787991453555210970659659639856670648844247938","10260185954137740247486488192570496092684935183379388125044125653647328054023","12655661577981598013787126068450556825218951206788052328715378240540030673155","18875782029492829253540920061867800401544385695523240332551730645990253683286","13000939909369679921538945109975441940863265779072482929455684540500587590629","239651505606383903278277662841450805219997298453219985892834268956273681444","14053674646208577108881262953518523519057705122297176784230960366018789686467","3606574524342197944154321263420984044427893927972300192386619594198948706444","4925738689374393290519002876270198297196104042467164940497567711764321354393","9820857610236925174040210045575219513594477725958302510866127781620764675531","8644935227560188528158307606853375529544842899940616765747319983176480635667","12589563927120228887319930197852404057542625019034806374830349240796880735981","13728987671030134173563628755348391107370774536000844606094840710456114349003","15280672692530045491619672502933299001869276703035606138561063102232345967821","21236672540209166733321925277807375026701626666734236841532747395149863205571","18193368154219306112046312834283644566129199372283662927472078427038205531636","17828956732555553542546753429670551891943977601119756829631880115504235233984","16641047964358580103472953437535358748387376425127849904658691126285684204504","7196281413799658043487145161620082973834461754768351228587249162400339111893","21279455923934963235610861427104388147894350922169838127737714784897083581830","10868227810739752166142906769497786680491652628709341836398414527811509748689","2545479497580424357309396388184225593698470568625667945691755386799845345027","18560104754451358950174079457178017278416450108044438296553162755384040068059","11209544817144484509471895492404241079181269159060632258040504564376475442191","14007605578670373547623429803718323316371456029307063658189484725071020560017","19316201371814679831554697580647476192318282119512681720915001227483533198021","16788142218280927569387096932066591137887806957079516944927766625343518189548","961359518362994763330685811948798278197676602059504713988410706948791494727","19776591693739287332042935252284088014720557305781829207369487992244783048185","9480779019638564372864984254416095889603560407402750333423136372713778963272","7812061847536565125280880398757948966749177710701972331770694629380983832516","14806224217889264732099766866344263686300132511433376375954468192761174167878","10982734897602724370866115596864634266746118759609469486863878972425453415519","9054801238670111257982773992849940941038784597792282084645523468554872244495","16788499373458165601983802204061832376825550128562541027433580619384299691535","4361212778425224413929793165968418385407821814716394404713983701050982051159","21198869506404830651226227162808186595284220877501140400488215541390720176503","7255012904510681544072472510832565052731304049336267892176928038570971034121","9737409770400739938717035426255379270654933363992002237053138761832402079248","14206577906412186888550704503752653056320975796075254442765439825369882967977","19036632138581200062386943078412086222459679497578993523004498970778925638274","2855178582526872375806959544405581665248537620420194093904041355969926293337","12896727255458884273207928529421874672712973447260798892551468479503233439215","20930350939164528694912500193219456539952966506926646436560438515643683077210","184093243282405111677536457857692693581379037444126410664343605529966199122","15658149328429348710722591333703516363901544310832580304722884306208924451465","17544235160628712643216064131303569753533519783718786133736357990785709619346","9378984995834426590515136439048146470293781405649183047514776402081048834772","15827462476470655610816981948418438654022314364182315935007413461648751735708","13474113844360907776462232979612140726930720201237003164521648175005015977732","1846676454601041085237775396212630553832771346942418764660365576890630152018","8958790186410745003596973786908460746144469347369569174866696175944574520886","16716100142556090678395507171596864615262575578180211444515549196841601774046","17584363243087108058467208592097637069605249776196694465943790236027601639916","15462568643993327150997687623907692370120490318886920754261967569094539968909","11670427917584674115542198398366950879185738970881616803513412243898491416455","5883010686944177614793479335292002976406988590121850032334552332298599405710","20848023045403944451304856285219275218146149181988087184275301094312642906291","20892609628755793476767683891284835591758207667306100001065280698890821585620","11041559416099382923560246079300939393371149141074957197352566129686429429340","17004024027027164912556351303862470964296900000646134239805113699616064012220","110742314120280698533248152539115345099402903868297760208823130532853128340","13611598917097489441998314826578736196564311189470688979687759717921520208428","20362978391139708024092837231934567580385484740720090300868417284017430844864","4130975720087443718484415210347908638971321493417335260526136858657572592254","15799784358302997284875412214187555553319485274948108081666806701893845835839","12410480753305882251320943831026503736012757975027018073585110506521877824193","11835843853657957571888855948788121206617247107501669280697395787347649231752","3326313455005237548503557557286834479752096887215379141590090769222516357133","3193633369267878319453517203588676707547172638050950764150162277144428673066","3543696055990388683071939150214505536733386566291338758519836333135488212473","453840133795717001022433249997110059635014609516452256954528366651276289770","10086004265216215714804100477403907145516617200748655771783383139854288214070","18938459257787140207383332020952460039308194017940327258304986766920440675756","18017538799787896442217663532610710859333377084532654794368604069493775630216","5517691591172342790575564654696650661133600869824307632295945043592492062300","5846204096126701465613249085053971321249645306247508562697696901334354225619","3177064511134248081568628736306700282095095665917536853000298191943047784014","7886005759395499452194553110700824805018792487440311729836576312028682853862","19249432464407391173245558257296856631584193393398113008165174416171947900609","16818455958785909569371690525990846776263170512884599090849081099178789681425","16250344336602567919050898941410625842485562539342327155695417850618940905704","6273998461375119044609362240019558608655450921258416376794979330773412610302","15933077340738498731035173703791932079747269039222967104684412531145625747085","17631878023023477567294765381542867314814954498487832435087010633074888584009","3387656327342575368928488173891176548794878068816523542226413637288662472792","15770343706243316227190526252701886989383556270818375222569120097305537622560","21025947829537149117391184273139276031347299127217645728072786010534368285621","11728430055160129100077268133090903533902452454196978455625432056779499908581","2184576630760971645143677026393147474439766939689140114811262608230414186937","20744811853491523948066896610767067484129121010717068573365370365324040781186","5378129452609441814399329369785055593231824205814541852039878139773312247469","18082900764136659604287793533371380099349929291808230688664846500365863263118","10463958995559323021196963984934883570109613942564610388110191948063546468897","244120224370345949702567256216804961153505781666838608095297311545160357032","17924705581798291273661662368787600134425123985006190354093511903371507000154","3107793385049037773698181795186417899797325916401357881664725445733609110598","5665818573123185227274537904890713907625420710982346291959547939830358917272","967322682615997637785254033877348832211978156650281338584051044602311410196","19419941178285529854771216440310658103611219351729270204884834098822007849679","6901963792883328370624032472781824547409040392368725235274158498520441238159","13721659825627300509722716825333808233371435398666022190921612703736274379535","2784281502858555298249063959836879135450746982163416748737579846439268828933","9904373282060708277943634486822397019446454722637742217276784802015824898651","5782567592658163731724098371574354386783075175203877502094122152538152467682","10854330629450460532485325799036675355255970975925867222693267730198057197195","7162558805520478103072398765799613453839879264508883857822705210986309908966","14561060495007338369036260685346480181377385446422680685283066135483167829865","11521954935420160563214644175207412771411940789064933791820101643809540481492","3893071612329582305940837979511590531534863287842007408024123330272447072664","19982770443796802008915975147614604175753586689418309845602797606117149147490","19714753609495058998670661272525609201695470529132258598980221623379639411831","10656632215192474178114431876399520721084839753473211054259843433641616176373","15519943627473966175746342389219894179761085602008029155282295063466585111230","429220418726674010600368106136723992478318707196454289985261340376476917460","16943119555428737036287647863079565463224985076466268175824843518378134856246","7079268853451648384434335899135383974808119657387366504271184409878695702895","5787261347913259367727842908192773692002199385877294080619854106978539332397","8254314874636465273639128395147895313719165057850599581478980264860146008069","15417738281457065064716789110361253613929614783743035738325702945037527193953","8995940809050737092434676062651493038351424361820394016896779859938155003450","8930952966754141446126393622188683431566029237395186071059700311531927009283","9012970415439810859538557593310902447051948348093454112737452817814629449500","21700461010267441715993595978543322483687194036588160210184366057201658507847","19191426116308521669196161733982754533604260068907220372422504926794231257150","18022413735343984488479130392027693687461867574196874267731354592562070094392","13853879871506882218224060020827336496729967255850404386800036291019021382781","13303720125164503437055631247918150173085142868095887759030649510172293881844","12463581809293287384469946044562671884924464520288697069370030386140109068261","20468619377263375923071378952981485015200979956112400596511865225946853604157","16682148710681177357125570715056314888342059670705617513402649433802720432267","16299073895000203963165709887505572454180623116454760411179563591228007694413","6439155427163506786329349605983728674821430800627321435200421453561910062302","16531483734580605436075637034861280240342858648848575098901014901746112480232","17413802217650584016261506268242623594956116228659732892682224912798301233645","19833018739354446018077109493089909435818386368530968355647208939546565982905","13005203599293796776324509750491064421128717423989464867065044987475986374420","15433711189444672576513248931602290892518442446252602686878477157678233603772","11272192842480959445178012145556234469776261923967845001064211055340129168135","21349777755000957327199310930646977290027138137542241555905014230683052104267","2414795183415356147955181901405712632718942970568205736628916600696077941534","13910388410253717440990758214044472114511432613509643223811561885135488623236","10073917454281511762447567386654530277776617831005093724557094001489771821135","15674657915196276639699997458656008228696751013801231738985398708672037426000","12030695425048598984176709301472822771003849589255577773183310838231109921591","6658172369461756755506276881582345916252610724131747740625283609123100367529","6460801016753822141904293563006139350014125998787400018150863192907944207957","10798491465896968361800574703868612181389697312199241920447162078078725409638","6331917501914253534943383807348566698937757752033630507696817298838693259937","21521172968280414216108032807577565012642487518706778276505136864150789112592","11443202152743097070847729825799673217706162711935940510632741405015900516668","10360970774813507384412119692215277392320350056791930702078433469299837875151","8111678922881662305935841208620197469657237670526301850210945861223648259810","3828566775247110089904016755996284741548002327940628727687176763639903716661","21019871488460899469684764817167629979753844957147537040703291790231271795829","11744049805554498869931942573519884330545637954557542018916739662277241821806","4521092770491436085084640166923844634777984445583984077999595768778116564222","2428018726292924561718904390333390438951211767580762396913313600061529081905","2672992591753804066533616673591169777906973091506536575810912266557203322920","5631180351966611479340932319081124575466459942666630580683510336616679680271","10149209329290376952496655294191511204529081153402908137750268385347783758010","18292794133971639465196495021864699906132845458944945214425906730119328661326","21442863185355178191454777233963814974940050392649316620141474331670970354424","3768420898310640667772098495371174917665155708578905018940113026409140957987","13677778555119984843885943251631654212176086447994430552012266440677394344669","13884681165958999171515885225547717032289759601884108191367706162606597842698","123196094575938824660055152882088188411485715788351262262924974166600702398","1121836698372380581784934880625694675020871234049336489788624481922395781738","20941331435492311592529607715649713508861806194386837398916323083940590908651","2470912827043971002614412337239267059969980871643559631900987795139200233821","10806505189594612637071931546921663393081238567888534876058498530874738324701","667951375802630033661777802749339877422061577764798227349674331630120025667","18416355600415187627018330134584431345513028652497077471935121971918269469363","14167152054564590179475064444026440101215733530475912312508414765738108715862","18633695428427030575173671831485026260967985663658201463236228419717189642766","152822669216765741203342297512101138657182497046533047369566701489981099230","13835701173750333056481994253160471551109858589047436642253159392878873667798","3993942321148722649703549241999711668949060533276325947207349685002693878681","15582244332423092177434976075689385819450099629893355758782548118218073388706","15110236879710270343688993144525012407319759236015974251051640787524859884359","5104405092803829419537383694663582438349376353030379488011426113631155364320","11034886586481561934231698674217393887518948538322130743646058638919797229737","21614370562083755709911993869347579638113152610927033622836963904672826178593","11909716327216431973191112809713028257963610176155315584304717743448686635887","9670047520194835060472941420215502268522351803257892125345072551055025494562","8752044341583145728028411582583224350471084864272507077624316823400738066962","20685513123216586620977713797881862528998788503897607377725195418550074311551","20219162196364967181713755472576994456615542213293827108438968625041058321145","18287830464300889532838439052863785386620820747210980263612361113628554829988","10146051396529576924597355409059465520468869175466632446875430377637660889879","13466459020798488583841582724067017412922317425102130151754649408559458307937","14062280191830459071860023268317938748180670907089383563443465249500572357980","18486553995294693573565546696966437493113894571993019524170031057367640632085","11156566424349445901806390826392443373766529722049710427351550423908421767094","209671637225069235519570008386635562520193585953162475265417907100134848923","17226989944018790920809176115775819865824823495740082575382169759054625372382","15644589951345053163188258692419292119540702867922222648564209455819510994564","3689635641036835670663293726548900381724135109917216986885298700630212836435","3367607896403464195671402279459329078003744183784952830994679539910724667259","6227320552634621985217890398406127207902736210419315868051857823685244516725","7357930890687295365886228617478473072206575811998185548162905341534675558305","9337019296542497689612612043175604595811913796434346282222317112981594913389","14658782859891978670907070276103444826326577838777644289370207112293812556778","1700861002075407761970169168361393086239805454951858464329713573177596208454","8422307882422345667268572118847227804767508317685246864132851358134342544918","3824678171886439611637777800578730196591582015637069631407414390326082519384","7520989644070067743500997565082513560943860081670904302057616063200273050286","5278276919931895959830110725703210158384647399821914390314400092195592076331","14590632939277529585876696200177152214896495867542780671631701634592299041714","14365499645924743985349770983085181263329435144891175678390938245209017764418","2519790270252875654107597063434691592006935573176284731324585122712988059511","17688843544040778657269233842324532395371012201506418912518394656290716826075","16584068781164994465207120381716024087231836173689783891650623302438290695506","12224860044594664185598615945328866758529752520066027818906177267571423023661","13664317767999211366109254182438581912610775541954425083255023643648887081779","19324196860555787958873349597666822462940695051471419602454830948112942481945","15338841226759355791277440652242849878000656382388414806186764010001628984934","11076363155150973228897602285090741665942726007445165132980573631249449594126","11228309866140794620879641097623963859536328868056691748463227126359575786386","4762608512226640372168720665137259637840828925512114281702049841301872652787","18282645934358125859102195916568492018711932725386725562892735740355836227532","12803228415054755333149187333584509982900042807310255834005394843350472605458","17675693156369747720817703064233611574822178844066411565804543111769294187197","9900029048144575309490519431063332695303076438539483419053219772370202428926","3684590949621971596368895784562632626464811455818343794800044114209066071601","5443335602638685057982926800093482287199751584817191972983546508574786160090","11352900694666160844325992247118358443639716695965864728670968730093466793722","9836739435541786452166525951732520477055729763398281521212184905286650567233","8222926590877635625730738050718327099397892409701316035188479123499338707893","8154558268770648194631329585722892880905143452138234292827603893129808716905","20661038342485310632612091028394348057035659683250957045340774030445861865592","9136910062528018177460276667688174167129493547069053533874280111057356360561","4362513385797089229061458501847196255783651860098500705320631416351847846956","2061137061600029258110405980965338431925491466724330216028866028449889153371","14607676885409772552908782897874144975643999944034675480739173900267789420534","215346512487318428553079809620502708407272005519315271404209452927497999118","18044026902282362371439577283764019415115969502361960218708274179281044595578","9652478245641134951513165220881528043195466248948069255527062590256621034842","20994154929281322813927859895894589885437941429166007529912073756113466975582","20752721666010515144550782025078875036488075535083563976118804420187462745253","20857028711523544595627940704882176284224509745902984714255291431664146535922","9631521770540523913735742126933921923952197512938165111866628665235591582568","18950423265182779471595998716023482060645307106263127634953888715515988505533","1436791836740130330138273456892846001841969807914099860317370076565131805680","18145299176463660895047063984288790313564980703886502044680749544519011424826","7008134596456692891696131297028980612714475387065733972352529833092170154127","18054087496593103261596842546955317831262607456582498514349407492750291465651","2460661191051979147731673103829326449069370361298340160666765010767300969003","1121019547339042268901204213478561141018690742635442229019134496736639790078","13486140142607002128358893931572108539446504181590991898872881746144618091798","14485083458755292442253176062192342099468601222388603924363708902524652589634","17684636079328478898730536417772675839399177918554869673260926729643471105206","12382939536995562937141167025903251534081453604974163882762565576243762872206","5191757256912351314880102858899907666377813090645991709894707944196053941770","18397247107649643640823283145149323187327745749077714626730537494597891967945","21508632378351416585385353654317189405917247727406155133342616741543833680788","19108354768686907995261340253443420621814860995097718380505789237761300853182","3649609518051015699386442513879956346519312025847003339036530556474594795760","11893851425092314587513815253407979901615516208632062595457152391110352908805","13296593391067251947204447959241604616835056311051696511507435925462940176830","18493557674615580922923001229788184231889430766683327472934879670006059540367","7669746659590113244880799806073731587177781693253502772068846650012974230120","19370654200032786851343971085637480775724705092664059950989935645178139099864","1331955346226787928500793024038189892044219824334532771311923855914410290305","14488880297827410405382492933041130286687512096290491259710680579157544248910","6760882547908259908954677726421351194118695606292587659467769365205068189814"]],"M":[[["2910766817845651019878574839501801340070030115151021261302834310722729507541","19727366863391167538122140361473584127147630672623100827934084310230022599144"],["5776684794125549462448597414050232243778680302179439492664047328281728356345","8348174920934122550483593999453880006756108121341067172388445916328941978568"]],[["7511745149465107256748700652201246547602992235352608707588321460060273774987","10370080108974718697676803824769673834027675643658433702224577712625900127200","19705173408229649878903981084052839426532978878058043055305024233888854471533"],["18732019378264290557468133440468564866454307626475683536618613112504878618481","20870176810702568768751421378473869562658540583882454726129544628203806653987","7266061498423634438633389053804536045105766754026813321943009179476902321146"],["9131299761947733513298312097611845208338517739621853568979632113419485819303","10595341252162738537912664445405114076324478519622938027420701542910180337937","11597556804922396090267472882856054602429588299176362916247939723151043581408"]],[["16023668707004248971294664614290028914393192768609916554276071736843535714477","17849615858846139011678879517964683507928512741474025695659909954675835121177","1013663139540921998616312712475594638459213772728467613870351821911056489570","13211800058103802189838759488224684841774731021206389709687693993627918500545"],["19204974983793400699898444372535256207646557857575315905278218870961389967884","3722304780857845144568029505892077496425786544014166938942516810831732569870","11920634922168932145084219049241528148129057802067880076377897257847125830511","6085682566123812000257211683010755099394491689511511633947011263229442977967"],["14672613178263529785795301930884172260797190868602674472542654261498546023746","20850178060552184587113773087797340350525370429749200838012809627359404457643","7082289538076771741936674361200789891432311337766695368327626572220036527624","1787876543469562003404632310460227730887431311758627706450615128255538398187"],["21407770160218607278833379114951608489910182969042472165261557405353704846967","16058955581309173858487265533260133430557379878452348481750737813742488209262","593311177550138061601452020934455734040559402531605836278498327468203888086","341662423637860635938968460722645910313598807845686354625820505885069260074"]],[["16789463359527776692258765063233607350971630674230623383979223533600140787105","17179611066821656668705197789232102741366879862607190942874777813024566441829","18653277315487164762584377009009109585010878033606596417396490909822722930739","7373070639853668650581790286343199505413793790160702463077019294817051722180","4823864393442908763804841692709014014130031798360007432734996408628916373879"],["19196309854577132760746782449135315310664418272926255500908899397538686486585","18123132816088485879885148351452823314623055244145916622592591084094232513914","18436594886553181913092702411547018228276047601279727265790147051821171174455","15167500404313194506503404655898040457721633218143681920692711693000769735187","9437986152015460505719924283993842205604222075968464846270136901243896809793"],["21445376105821232747280055223032050399373725161014449207033808524504027971613","49684738714301073369749035791061182456037935161360748355432247732088942674","9826409059947591908303145327284336313371973037536805760095514429930589897515","8494798325496773219358794086647759478982958403252584257436898618394561204124","21251937175072447337747316555423152807036003235223125066270735279039060889959"],["5539100337780919206842837176908516952801756637410959104376645017856664270896","6297628909516159190915174165284309160976659474973668336571577778869958189934","12792263637464508665199868777503118105486490400267592501708855807938962470650","17254685306085558791725544672172906900581495686070720065168939143671412445514","3590396502942934679818900672232030233017710909687947858184099000783280809247"],["19055249881366445073616526879263250763682650596233071589085239500077496415637","7367697936402141224946246030743627391716576575953707640061577218995381577033","1322791522030759131093883057746095061798181102708855007233180025036972924046","20456741074925985565499300081580917471340328842103779922028754640077047587707","9059147312071680695674575245237100802111605600478121517359780850134328696420"]],[["8266021233794274332054729525918686051968756165685671155584565440479247355160","7947823415909040438587565055355894256799314737783432792935458921778371169026","16508811191852041977017821887204137955816331040385276110261643892701458724933","1804800467126006102677564831888710635194614232739335985819349312754063580223","11189892034806587650995829160516587240879881493093022855087765921356611070470","20567450145123179140729389574352706949280207113956641415022972885523439610844"],["4666756311257455192796774305229624459258864488677689058174087310651786875914","11389253665835451896363091846189307652796786468610595637047377864063404843117","18793736599347263150867965517898541872137378991464725717839931503944801692688","4206344588923325482680116848820594823631536459347642329098796888497153867720","1739462481670645248707834504605096139894257554120906850613041004917967456145","18514227342636266640333254638454588508118462110178719555586534011641424431745"],["17887039315911403193186866703775654467672391491657957999455462537283842145802","2824959020572825365047639014537190268717891749361604043531643698340708119767","12521547103713919592301476538318318223836047611311454785951907894055964264287","8658146183671258251984364885894342376430874614261222570603159082682815800788","154390145585284450772861151318029820117470958184878116158462181541183085587","7593705166056392393963956710828665339496927193740869686529339432486182720653"],["5529559239163081088908568555890212324771345012509269613465629182165427812002","3729910453162885538930719732708124491456460687048972152311428493400220125686","11942815243552870715777415109008273807076911177089425348095503288499102855779","498938524453430895689241565973888863905147713935369405079343247530256066618","3976257517234324421403708035200810671331954932478384823208414346189926720724","723540703523219510043977323240437576248315561543814629392162302024056718473"],["13306548824219676333032339487546407241767961556934015003605485324283250885682","7970147269291664639740298762956131361316495463191268382513594527221399186752","20633313939958767604804835838065337107615699351647541991788258289962727735454","17162090859520817529294904484646695645841022315617926715432606252643123848792","9181379842957190051440498041153333325098774266789773971685141362947015398641","7051606617662816798224904133351061549832959857069896192072217769241273559278"],["16619522548478824222688310091434959542211899852679631815023615875678448806029","14965311177811968100298579672135357167599499478246106482433786066289128683961","9792733250919070275775594069208673385381167169182805600474820364274865306108","2069253833779081039049908513863485270550301879399727430830923273191877809560","15847298987712771667136245955631872888473964330474501593909263901393348546986","12244443532166430060291409356011430759892629145539185535677568234713942157668"]],[["19332164824128329382868318451458022991369413618825711961282217322674570624669","12346323761995603285640868741615937712088302657627126374070962894016296466118","3913895681115272361294397190916803190924061797587910478563401817340941991811","7048322889096718105055545382948709082135086733564574465991576956878202831861","10375086910057323893637057154182902576957472442368661576421122036461645295833","12765622911241487148932810040772504127756393086809438933166282251044289864727","266900212758702307861826326591090138389415348463003233900705815890364224151"],["14435131616556129905356866638030823183270286404767286105643513738132789033353","5780976801287540146775934937953368730928109502001687434229528186520268917700","1618320442446662026869390273942730786145909339107736579759397243640902802126","3818399583522206096165108192531271582827953520684743806492664825009577810261","11764506724346386316602508039052965575734225646587104133777798242528580374987","2414215974836165993714858157462355581258152126063378817495129367240311967136","17609437036230923129211608175600293197801044251801590649435913902851695334081"],["363438080029711424794236047863047716381155074181485245036621530063262917196","535766679023716739184211613469394818313893958493710642899297971974381051070","5305068908469731303772738758164870877638068032868328180355958394150421214337","10807632568240507366657354568432178961148417327580695024415275247652313539292","15964415873358391713354948903242729080763777490509563223190335273158191600135","20700362719972015883260687302741075186857660623182772413609788566925949033885","10135127975676256977820296631533839366076919827597067890970660746228807376456"],["4251490167543116819728642817282216847143714366441358372252125244838181656331","7745587495915033527847242564710473705100826890903278244320948416581724663023","11741113129223221800185946819924457344647035336264986754437921049066977440806","11630296782890656599545188109639399768829653360050213193782325240600583381364","16861140446185941149398487176581839232380972247302922484807333229513905651035","365879246117123675211400356410703684399715291171114630107795112994207447819","21725607857580053522363567649763546934441685061337033780528788383243719579033"],["9222866548596464928765000608129177609426964853736257576074550520759533736918","10261578281201197531384003420612639018011405529775212563256392340336951230146","15644037447921591571869862919382888810859308861783088910843592577202362807673","12752004188139535619565478547449108772137477456363099481095747591698702436636","4205805109630387448825516813913983509046636797101589615147198457314360427718","21047095155106717901091873146599497621258071512562421967648909471775919992713","15624165295872926124160584750951090817255240214488120310950503163805737026315"],["15064589937731741958666763896598138037875460434244947486199623542160035749721","1801577872277160959016940766173040841160105238799805406938450020949902989173","2896766420608048344829901127120623317655260981420052771341833288256800199953","12828791469509204618898135640019714232831708508424682785876476343251730674999","21363471986981372923191391880511344708743312828234098289107697080824665183315","21372706354350795416381912271616633829725494570576895047490974943034914894898","16006531510217730955981102005088687858079561573088629102219485906666961331083"],["2389357602244845938251345005183369360523566673990464798041306722747500447645","15275955107196234672088664710679934029171843237458844492987233368659104714648","8038797517535218686870517662905230585331773059774130312418943649247287196930","17923922393436914864421862212181654800719733137689602673604754147078808030201","12890519745320143484176500044628647247549456778462652469313611980363507314914","8058516556024397257577081553178859094042894928866720408652077334516681924252","768425396034382182896247252731538808045254601036758108993106260984310129743"]],[["12051363189633051999486642007657476767332174247874678146882148540363198906151","6387692555402871022209406699166470377527846400909826148301704257996818597444","5501161701967897191598344153113501150221327945211106479845703139297020305204","11704372055359680530622226011526065512090721245437046184430227296826364812961","1448611482943320179763394986273491989368427112997509352702795612841455555221","11429145481524962708631235759094055797723504985787912972575745356597208940857","18021858528471759023192195347788820214752298716891162685115069036283008604659","19817577944622399780828745167469547332167999743980557486183403063955748437619"],["16868980302925985719076889965831700407328155411673408077166038059874616424216","14717432944340806781505761211058502775325970511884444497202848327581753493322","6273484270523289845253546319956998489830555038697388950038256377785540828355","7726043103954429233325852791166106732104332590864071922310309250010129731951","21052353119157611359715869265647287129868507410601603360127523286602350622783","14881796557136180514390287939887071460258251160875710427576954128871507002642","16341327439981153879863707938117355436152690262312411284193970279829974799334","10737675906107372302108775622264379258926415910493665638388971468924879578019"],["17652699767629314433191915267767147860052614073432922215674211498672835339113","7457854400138129895665591719907473144796504905294990100367501377050420942800","2136850802972823585140870808569264373787409642804109426616292140046700710743","14029467347298896610468190615212519453678316548442709087191045978401072380889","17927699952921266007590534383984238136710494507499176330493504416180410161683","1404719213830610030709583332543456268094679432456284386108188509031502237811","15774757292079018355173698870903422490868220545526384876021336136892926326596","13992040374687149195439840459922227749294794072303579532004750946306028893274"],["19895094843870397064274579657905921299619388074084417486420154568847155746891","943833985612967248618844364501030453998731991825395875139617731659343743483","18334641092245356682448009823797080853859186519922476229272838591594967878678","12440287044655505483131716236615633401781045711053210640202766768864619378050","19130942564098572936370308509908873069169152245172660555660369853346605570826","13687979327148217614616687417475244897906227789285703940171633508277844471062","16887921327479880141959363366262254722342925451159884082370074726344024008329","20378003125024698406589040864014894045124234695859352480989552885205935609512"],["9961553412530901953022991497331082655746860319830309417179972582392489275965","17755268665220780466271147660314410613992814315871705414495724015443459797439","15394131279964876131165951719955566821453162041574233072088124095626652523043","12668230348320365182085867728169435383987570924921845106243310905832768752125","14046812111383844816383347755263287603387502282980410255379630204396960343368","11590093969266595252327261214735156204516524792938909229175092594303424141199","4623517074925959322927421514289132524032863498392441375476410779446526502799","11550389531965919926150256242174358326491059727918559332939872696684299343135"],["408487396317981846281976563618407581852133413686169882346565860317912856432","10717757571561029382519744040791773994731123262749372629687813122941078154016","21323787615496251932181222397986048515693661833099659753170924658480548866921","20780799310067873093555276926357624414275975377319941015818682052081980020892","9948385944800296129032348634683354181546876394979291412116493575442898426065","4957033413111065858035065225611730571499258914257595411830870977545212164095","5227254936689728148737265263965107718869714128941995977191096572191110991079","3582814872786080867997255427740166393615552773099677831398251586195329933975"],["2136737803483410555580163900871515004623198990079556379647848364282254542316","2965752098571712086281180512370022839542603960309127077035724860894697782076","1478525086510042909660572998242949118476342047444968703549274608283885678547","3563375996604290844805064443647611841824012587505923250907062088840679700555","15461452581843517997080348781604020486994675070532901120353124746087231692278","20472517020063295821544268171575414161230806406668271887185150097779785573889","21058001005918321995459971112208002381460494177332965873048074199074929946172","15805746645980285645504697043988763170971539673993759868487715403982423015009"],["7141240965656437676130015766799708612940092856280620325870466265817008351948","21418010338098024788434337801477243267248314524079104488811186206038748626642","20272108634229595317682817969506273496034097230124371921628691470754475805838","16734095147399743907618148751687506877774623133599770145304816136018239803101","8439324632051181834455499457268557602816180314723268640869118054114888151316","4953900961796661020464968131122569974581908893169105485631905994366550928492","18071625983692455679240094911529791119099077429122520426399552756115503123111","19638917592063029281156873227053827678889868373299664608974791764751784473040"]],[["708458300293891745856425423607721463509413916954480913172999113933455141974","14271228280974236486906321420750465147409060481575418066139408902283524749997","15852878306984329426654933335929774834335684656381336212668681628835945610740","14650063533814858868677752931082459040894187001723054833238582599403791885108","5582010871038992135003913294240928881356211983701117708338786934614118892655","17817167707934144056061336113828482446323869140602919022203233163412357573520","16618894908063983272770489218670262360190849213687934219652137459014587794085","10883405878649359800090160909097238327402403049670067541357916315880123123342","7439184039942350631846254109167666628442833987137988596039526179738154790587"],["2727663760525187222746025175304386977552466570311228286110141668880678011929","16992375884417886634716738306539629570444547136030480542879886913528563834233","4178586893949624406750122665277033849762243490544460031634329370298105635905","2517914797385699886738929430037355069462619900197972886482360691236776726214","20164173810534657634631187494276970100735049909727379228976555863615716408280","19970958827248077001061220127605534603528515080207197493660642269195127427214","15606275977308968307194602612931727810866183872589808138812916593200446820753","12261436001550634140750381230737452634746867040398895669545077774504957433511","10405309809257831434323731445544896504541938387524726028487604098725193737428"],["13408856444092113657034337770571899796129642125690066226794939383190876435468","19768080898957882918527124226120459667739640387901357739011662191034806046251","16749889646056241484852997428132695501278739424507088920371060969471495213919","12331609790192161246735870679870317366088443875784324655482358218146673901073","15769331739277556832196167201116801527901089923090632364403958141614820528626","5227172275505968397128736045169568430462701766148126842874241545343535393924","919073378344729780131814412541912290691661039815032069498359347682919854836","17858725475505870077023114050620337312678855554361132257763133392017321111169","21805188450184460363143840112266872832328782034569970452376470141743078343745"],["15808413311863154368918155104905222670782553225279887458053980771135357021692","12828907214414139667587331812274388831051429093098655261887619166452245292431","19323880880917307340820066456419195877039970908109908221992925424585030574269","17591732412986269470826282099678922890996647592922237928486497997144096433314","5282593184575641056912422403901924986019740793240905758215569065763629999318","16013130707598525718519250412251656096494468043256226360413191733653074896117","928381583587170989315021718439506896903185927814675820160976165627097308915","13354336789663524324458402003354905134416094005220899335023797754517805691310","8780135673134081873589118311874067764073719549433574820315100541871522642766"],["3334957744389892864165113989538814646945861179021194859030934481494560681812","10553413566358881045095498839713459314577909144176577153981801574128014927353","18894321506279909207228932263261226433242541255661384643559047811974513999438","20211894014628303327332299342564779073614790317614402383971270594430055013904","16723480621932556506775906903415088312771104391224076734252099577243237899106","1131872547334579236404174618548801749854242069301712398106619948805304881636","17386814048141719093058723520379257085987299288710382497237609774141718421404","13729980537487612221640320393867198844745491357830417754869369043292518007370","15860780436383591737179656321807464721751913977397035980422407138400867838633"],["14708550460111247278740231297332510059116901767161326454481923990389610737973","3132820559166321299152015048428879769905404947939291493327190426785911502819","8658132367999084824971296219169212568783540935524918908332001856872807119287","21064783047501777742084787259676320053480170916619513986794406566953069418035","20731000104011695148048713576219525164619502119638555785381543866326561323","17189725817866212967650950297463469529475851286172280116066228706121595462088","3310440878606659516028312898499559492876015493892608849966645073367377278233","18463918215326370595980949760897480127622730018343709491036454088497976892863","10894192430593140913557164014343360386192963621862346779515699758352916852228"],["5060610877870389107953459328006060153180283860738879092399406248484265273634","9068988823145592214189961315730261367007076042069390630024839612151270430414","13160707893890865447331361630522644819624543031829773191665491273833460019183","13920568292534026180186486064598876780779571940988254327823480971820885713801","3894011501178134026216736522445829906312115650019712122802932677318433032635","17895318821130376385979570244603067634449453259842805202694945793852667231847","9777993060458301797155055013115849176281006051494461044565335406558308324220","16521293541516305251718414192107787058980727971856888501176820100904791554730","7744063601405355255689420547832904761861257642931934580021876189691881462544"],["5444730929053688962452159157646022068806222098484627080046464163159451208522","1524118152994294864739915388438939180298324297960159419600850033701763764640","1334622237342346242862023763160346671504959163544406543315614662442562816653","16126317914306849967682996412350336172782726693375105190424151365140854833923","6345975085253358297751050638846919833013142450462810543971050115910612860460","2703875280053263252177031410407166981522153304496807669518295313468095058674","20550626512184448884716175825490086259235894802178999642552696391947509065676","15013718986700828670892638677446258841869291160144196138236407826511808592486","4682264015512203762723381542642871160915706748420642731100634327658667608042"],["12834108073603507925748862283503586970613250684810871463629807392488566121352","8422606792378744850363509404165092879785007388646473871019846954536829739979","9339209090550177650528715604504958143078492516052997365409534971861874881780","9141831918422847136631159987994781722269889810731887947045878986971886716767","18329180549061748373684938917948729366786279119056979983310618862430068636631","2009551904565170718789964252583363785971078331314490170341991643087565227885","3859729780601667888281187160881197567257456581829833310753128034179061564519","8535335342372994336873304745903510543599314397287086554558824692658347277251","14148514289641991520153975838000398174635263164584825009402034843810351225518"]]]}')},9602:(t,e,r)=>{r(1029).Scalar,r(9609);const{hash0:n,hash1:i,F:o}=r(5573)},5573:(t,e,r)=>{const n=r(1029).k,i=r(1029).Scalar,o=r(4194),s=new n(i.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617"));e.hash0=function(t,e){return o([t,e])},e.hash1=function(t,e){return o([t,e,s.one])},e.F=s},9609:(t,e,r)=>{const n=r(1029).Scalar,i=new(0,r(1029).k)(n.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617"));t.exports=class{constructor(){this.nodes={},this.root=i.zero}async getRoot(){return this.root}_key2str(t){return t.toString()}_normalize(t){for(let e=0;e<t.length;e++)t[e]=i.e(t[e])}async get(t){const e=this._key2str(t);return this.nodes[e]}async multiGet(t){const e=[];for(let r=0;r<t.length;r++)e.push(this.get(t[r]));return await Promise.all(e)}async setRoot(t){this.root=t}async multiIns(t){for(let e=0;e<t.length;e++){const r=this._key2str(t[e][0]);this._normalize(t[e][1]),this.nodes[r]=t[e][1]}}async multiDel(t){for(let e=0;e<t.length;e++){const r=this._key2str(t[e]);delete this.nodes[r]}}}},1227:(t,e,r)=>{e.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),!this.useColors)return;const r="color: "+this.color;e.splice(1,0,r,"color: inherit");let n=0,i=0;e[0].replace(/%[a-zA-Z%]/g,(t=>{"%%"!==t&&(n++,"%c"===t&&(i=n))})),e.splice(i,0,r)},e.save=function(t){try{t?e.storage.setItem("debug",t):e.storage.removeItem("debug")}catch(t){}},e.load=function(){let t;try{t=e.storage.getItem("debug")}catch(t){}return!t&&"undefined"!=typeof process&&"env"in process&&(t=process.env.DEBUG),t},e.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},e.storage=function(){try{return localStorage}catch(t){}}(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.log=console.debug||console.log||(()=>{}),t.exports=r(2447)(e);const{formatters:n}=t.exports;n.j=function(t){try{return JSON.stringify(t)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}},2447:(t,e,r)=>{t.exports=function(t){function e(t){let r;function o(...t){if(!o.enabled)return;const n=o,i=Number(new Date),s=i-(r||i);n.diff=s,n.prev=r,n.curr=i,r=i,t[0]=e.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");let a=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,((r,i)=>{if("%%"===r)return r;a++;const o=e.formatters[i];if("function"==typeof o){const e=t[a];r=o.call(n,e),t.splice(a,1),a--}return r})),e.formatArgs.call(n,t),(n.log||e.log).apply(n,t)}return o.namespace=t,o.enabled=e.enabled(t),o.useColors=e.useColors(),o.color=e.selectColor(t),o.destroy=n,o.extend=i,"function"==typeof e.init&&e.init(o),e.instances.push(o),o}function n(){const t=e.instances.indexOf(this);return-1!==t&&(e.instances.splice(t,1),!0)}function i(t,r){const n=e(this.namespace+(void 0===r?":":r)+t);return n.log=this.log,n}function o(t){return t.toString().substring(2,t.toString().length-2).replace(/\.\*\?$/,"*")}return e.debug=e,e.default=e,e.coerce=function(t){return t instanceof Error?t.stack||t.message:t},e.disable=function(){const t=[...e.names.map(o),...e.skips.map(o).map((t=>"-"+t))].join(",");return e.enable(""),t},e.enable=function(t){let r;e.save(t),e.names=[],e.skips=[];const n=("string"==typeof t?t:"").split(/[\s,]+/),i=n.length;for(r=0;r<i;r++)n[r]&&("-"===(t=n[r].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+t.substr(1)+"$")):e.names.push(new RegExp("^"+t+"$")));for(r=0;r<e.instances.length;r++){const t=e.instances[r];t.enabled=e.enabled(t.namespace)}},e.enabled=function(t){if("*"===t[t.length-1])return!0;let r,n;for(r=0,n=e.skips.length;r<n;r++)if(e.skips[r].test(t))return!1;for(r=0,n=e.names.length;r<n;r++)if(e.names[r].test(t))return!0;return!1},e.humanize=r(7824),Object.keys(t).forEach((r=>{e[r]=t[r]})),e.instances=[],e.names=[],e.skips=[],e.formatters={},e.selectColor=function(t){let r=0;for(let e=0;e<t.length;e++)r=(r<<5)-r+t.charCodeAt(e),r|=0;return e.colors[Math.abs(r)%e.colors.length]},e.enable(e.load()),e}},5158:(t,e,r)=>{"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?t.exports=r(1227):t.exports=r(39)},39:(t,e,r)=>{const n=r(3867),i=r(1669);e.init=function(t){t.inspectOpts={};const r=Object.keys(e.inspectOpts);for(let n=0;n<r.length;n++)t.inspectOpts[r[n]]=e.inspectOpts[r[n]]},e.log=function(...t){return process.stderr.write(i.format(...t)+"\n")},e.formatArgs=function(r){const{namespace:n,useColors:i}=this;if(i){const e=this.color,i="[3"+(e<8?e:"8;5;"+e),o=`  ${i};1m${n} [0m`;r[0]=o+r[0].split("\n").join("\n"+o),r.push(i+"m+"+t.exports.humanize(this.diff)+"[0m")}else r[0]=(e.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+n+" "+r[0]},e.save=function(t){t?process.env.DEBUG=t:delete process.env.DEBUG},e.load=function(){return process.env.DEBUG},e.useColors=function(){return"colors"in e.inspectOpts?Boolean(e.inspectOpts.colors):n.isatty(process.stderr.fd)},e.colors=[6,2,3,4,5,1];try{const t=r(2130);t&&(t.stderr||t).level>=2&&(e.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(t){}e.inspectOpts=Object.keys(process.env).filter((t=>/^debug_/i.test(t))).reduce(((t,e)=>{const r=e.substring(6).toLowerCase().replace(/_([a-z])/g,((t,e)=>e.toUpperCase()));let n=process.env[e];return n=!!/^(yes|on|true|enabled)$/i.test(n)||!/^(no|off|false|disabled)$/i.test(n)&&("null"===n?null:Number(n)),t[r]=n,t}),{}),t.exports=r(2447)(e);const{formatters:o}=t.exports;o.o=function(t){return this.inspectOpts.colors=this.useColors,i.inspect(t,this.inspectOpts).replace(/\s*\n\s*/g," ")},o.O=function(t){return this.inspectOpts.colors=this.useColors,i.inspect(t,this.inspectOpts)}},1538:t=>{const e="0123456789abcdef".split(""),r=[1,256,65536,16777216],n=[0,8,16,24],i=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],o=t=>{var e,r,n,o,s,a,u,h,l,f,c,d,p,m,g,y,v,w,b,A,M,I,E,_,S,C,x,B,k,F,N,T,R,P,O,U,D,q,L,Q,j,z,K,H,G,V,W,J,Z,Y,X,$,tt,et,rt,nt,it,ot,st,at,ut,ht,lt;for(n=0;n<48;n+=2)o=t[0]^t[10]^t[20]^t[30]^t[40],s=t[1]^t[11]^t[21]^t[31]^t[41],a=t[2]^t[12]^t[22]^t[32]^t[42],u=t[3]^t[13]^t[23]^t[33]^t[43],h=t[4]^t[14]^t[24]^t[34]^t[44],l=t[5]^t[15]^t[25]^t[35]^t[45],f=t[6]^t[16]^t[26]^t[36]^t[46],c=t[7]^t[17]^t[27]^t[37]^t[47],e=(d=t[8]^t[18]^t[28]^t[38]^t[48])^(a<<1|u>>>31),r=(p=t[9]^t[19]^t[29]^t[39]^t[49])^(u<<1|a>>>31),t[0]^=e,t[1]^=r,t[10]^=e,t[11]^=r,t[20]^=e,t[21]^=r,t[30]^=e,t[31]^=r,t[40]^=e,t[41]^=r,e=o^(h<<1|l>>>31),r=s^(l<<1|h>>>31),t[2]^=e,t[3]^=r,t[12]^=e,t[13]^=r,t[22]^=e,t[23]^=r,t[32]^=e,t[33]^=r,t[42]^=e,t[43]^=r,e=a^(f<<1|c>>>31),r=u^(c<<1|f>>>31),t[4]^=e,t[5]^=r,t[14]^=e,t[15]^=r,t[24]^=e,t[25]^=r,t[34]^=e,t[35]^=r,t[44]^=e,t[45]^=r,e=h^(d<<1|p>>>31),r=l^(p<<1|d>>>31),t[6]^=e,t[7]^=r,t[16]^=e,t[17]^=r,t[26]^=e,t[27]^=r,t[36]^=e,t[37]^=r,t[46]^=e,t[47]^=r,e=f^(o<<1|s>>>31),r=c^(s<<1|o>>>31),t[8]^=e,t[9]^=r,t[18]^=e,t[19]^=r,t[28]^=e,t[29]^=r,t[38]^=e,t[39]^=r,t[48]^=e,t[49]^=r,m=t[0],g=t[1],V=t[11]<<4|t[10]>>>28,W=t[10]<<4|t[11]>>>28,B=t[20]<<3|t[21]>>>29,k=t[21]<<3|t[20]>>>29,at=t[31]<<9|t[30]>>>23,ut=t[30]<<9|t[31]>>>23,z=t[40]<<18|t[41]>>>14,K=t[41]<<18|t[40]>>>14,P=t[2]<<1|t[3]>>>31,O=t[3]<<1|t[2]>>>31,y=t[13]<<12|t[12]>>>20,v=t[12]<<12|t[13]>>>20,J=t[22]<<10|t[23]>>>22,Z=t[23]<<10|t[22]>>>22,F=t[33]<<13|t[32]>>>19,N=t[32]<<13|t[33]>>>19,ht=t[42]<<2|t[43]>>>30,lt=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,rt=t[4]<<30|t[5]>>>2,U=t[14]<<6|t[15]>>>26,D=t[15]<<6|t[14]>>>26,w=t[25]<<11|t[24]>>>21,b=t[24]<<11|t[25]>>>21,Y=t[34]<<15|t[35]>>>17,X=t[35]<<15|t[34]>>>17,T=t[45]<<29|t[44]>>>3,R=t[44]<<29|t[45]>>>3,_=t[6]<<28|t[7]>>>4,S=t[7]<<28|t[6]>>>4,nt=t[17]<<23|t[16]>>>9,it=t[16]<<23|t[17]>>>9,q=t[26]<<25|t[27]>>>7,L=t[27]<<25|t[26]>>>7,A=t[36]<<21|t[37]>>>11,M=t[37]<<21|t[36]>>>11,$=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,H=t[8]<<27|t[9]>>>5,G=t[9]<<27|t[8]>>>5,C=t[18]<<20|t[19]>>>12,x=t[19]<<20|t[18]>>>12,ot=t[29]<<7|t[28]>>>25,st=t[28]<<7|t[29]>>>25,Q=t[38]<<8|t[39]>>>24,j=t[39]<<8|t[38]>>>24,I=t[48]<<14|t[49]>>>18,E=t[49]<<14|t[48]>>>18,t[0]=m^~y&w,t[1]=g^~v&b,t[10]=_^~C&B,t[11]=S^~x&k,t[20]=P^~U&q,t[21]=O^~D&L,t[30]=H^~V&J,t[31]=G^~W&Z,t[40]=et^~nt&ot,t[41]=rt^~it&st,t[2]=y^~w&A,t[3]=v^~b&M,t[12]=C^~B&F,t[13]=x^~k&N,t[22]=U^~q&Q,t[23]=D^~L&j,t[32]=V^~J&Y,t[33]=W^~Z&X,t[42]=nt^~ot&at,t[43]=it^~st&ut,t[4]=w^~A&I,t[5]=b^~M&E,t[14]=B^~F&T,t[15]=k^~N&R,t[24]=q^~Q&z,t[25]=L^~j&K,t[34]=J^~Y&$,t[35]=Z^~X&tt,t[44]=ot^~at&ht,t[45]=st^~ut&lt,t[6]=A^~I&m,t[7]=M^~E&g,t[16]=F^~T&_,t[17]=N^~R&S,t[26]=Q^~z&P,t[27]=j^~K&O,t[36]=Y^~$&H,t[37]=X^~tt&G,t[46]=at^~ht&et,t[47]=ut^~lt&rt,t[8]=I^~m&y,t[9]=E^~g&v,t[18]=T^~_&C,t[19]=R^~S&x,t[28]=z^~P&U,t[29]=K^~O&D,t[38]=$^~H&V,t[39]=tt^~G&W,t[48]=ht^~et&nt,t[49]=lt^~rt&it,t[0]^=i[n],t[1]^=i[n+1]},s=t=>i=>{var s;if("0x"===i.slice(0,2)){s=[];for(var a=2,u=i.length;a<u;a+=2)s.push(parseInt(i.slice(a,a+2),16))}else s=i;return((t,i)=>{for(var s,a=i.length,u=t.blocks,h=t.blockCount<<2,l=t.blockCount,f=t.outputBlocks,c=t.s,d=0;d<a;){if(t.reset)for(t.reset=!1,u[0]=t.block,g=1;g<l+1;++g)u[g]=0;if("string"!=typeof i)for(g=t.start;d<a&&g<h;++d)u[g>>2]|=i[d]<<n[3&g++];else for(g=t.start;d<a&&g<h;++d)(s=i.charCodeAt(d))<128?u[g>>2]|=s<<n[3&g++]:s<2048?(u[g>>2]|=(192|s>>6)<<n[3&g++],u[g>>2]|=(128|63&s)<<n[3&g++]):s<55296||s>=57344?(u[g>>2]|=(224|s>>12)<<n[3&g++],u[g>>2]|=(128|s>>6&63)<<n[3&g++],u[g>>2]|=(128|63&s)<<n[3&g++]):(s=65536+((1023&s)<<10|1023&i.charCodeAt(++d)),u[g>>2]|=(240|s>>18)<<n[3&g++],u[g>>2]|=(128|s>>12&63)<<n[3&g++],u[g>>2]|=(128|s>>6&63)<<n[3&g++],u[g>>2]|=(128|63&s)<<n[3&g++]);if(t.lastByteIndex=g,g>=h){for(t.start=g-h,t.block=u[l],g=0;g<l;++g)c[g]^=u[g];o(c),t.reset=!0}else t.start=g}if(u[(g=t.lastByteIndex)>>2]|=r[3&g],t.lastByteIndex===h)for(u[0]=u[l],g=1;g<l+1;++g)u[g]=0;for(u[l-1]|=2147483648,g=0;g<l;++g)c[g]^=u[g];o(c);for(var p,m="",g=0,y=0;y<f;){for(g=0;g<l&&y<f;++g,++y)p=c[g],m+=e[p>>4&15]+e[15&p]+e[p>>12&15]+e[p>>8&15]+e[p>>20&15]+e[p>>16&15]+e[p>>28&15]+e[p>>24&15];y%l==0&&(o(c),g=0)}return"0x"+m})((t=>{return{blocks:[],reset:!0,block:0,start:0,blockCount:1600-(t<<1)>>5,outputBlocks:t>>5,s:(e=[0,0,0,0,0,0,0,0,0,0],[].concat(e,e,e,e,e))};var e})(t),s)};t.exports={keccak256:s(256),keccak512:s(512),keccak256s:s(256),keccak512s:s(512)}},6877:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=r(339);function i(t){return!("string"!=typeof t||!/^(0x)?[0-9a-f]{512}$/i.test(t)||!/^(0x)?[0-9a-f]{512}$/.test(t)&&!/^(0x)?[0-9A-F]{512}$/.test(t))}function o(t,e){"object"==typeof e&&e.constructor===Uint8Array&&(e=n.bytesToHex(e));const r=n.keccak256(e).replace("0x","");for(let e=0;e<12;e+=4){const n=(parseInt(r.substr(e,2),16)<<8)+parseInt(r.substr(e+2,2),16)&2047,i=1<<n%4;if((s(t.charCodeAt(t.length-1-Math.floor(n/4)))&i)!==i)return!1}return!0}function s(t){if(t>=48&&t<=57)return t-48;if(t>=65&&t<=70)return t-55;if(t>=97&&t<=102)return t-87;throw new Error("invalid bloom")}function a(t){return!("string"!=typeof t||!/^(0x)?[0-9a-f]{64}$/i.test(t)||!/^(0x)?[0-9a-f]{64}$/.test(t)&&!/^(0x)?[0-9A-F]{64}$/.test(t))}function u(t){return!("string"!=typeof t||!t.match(/^(0x)?[0-9a-fA-F]{40}$/)&&!t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/))}e.isBloom=i,e.isInBloom=o,e.isUserEthereumAddressInBloom=function(t,e){if(!i(t))throw new Error("Invalid bloom given");if(!u(e))throw new Error(`Invalid ethereum address given: "${e}"`);return o(t,n.padLeft(e,64))},e.isContractAddressInBloom=function(t,e){if(!i(t))throw new Error("Invalid bloom given");if(!u(e))throw new Error(`Invalid contract address given: "${e}"`);return o(t,e)},e.isTopicInBloom=function(t,e){if(!i(t))throw new Error("Invalid bloom given");if(!a(e))throw new Error("Invalid topic");return o(t,e)},e.isTopic=a,e.isAddress=u},339:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=r(1094);function i(t){if(null==t)throw new Error("cannot convert null value to array");if("string"==typeof t){const e=t.match(/^(0x)?[0-9a-fA-F]*$/);if(!e)throw new Error("invalid hexidecimal string");if("0x"!==e[1])throw new Error("hex string must have 0x prefix");(t=t.substring(2)).length%2&&(t="0"+t);const r=[];for(let e=0;e<t.length;e+=2)r.push(parseInt(t.substr(e,2),16));return o(new Uint8Array(r))}if(function(t){if(!t||parseInt(String(t.length))!=t.length||"string"==typeof t)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(r<0||r>=256||parseInt(String(r))!=r)return!1}return!0}(t))return o(new Uint8Array(t));throw new Error("invalid arrayify value")}function o(t){return void 0!==t.slice||(t.slice=()=>{const e=Array.prototype.slice.call(arguments);return o(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}e.keccak256=function(t){return"0x"+n.keccak_256(i(t))},e.padLeft=(t,e)=>{const r=/^0x/i.test(t)||"number"==typeof t,n=e-(t=t.toString().replace(/^0x/i,"")).length+1>=0?e-t.length+1:0;return(r?"0x":"")+new Array(n).join("0")+t},e.bytesToHex=function(t){const e=[];for(let r=0;r<t.length;r++)e.push((t[r]>>>4).toString(16)),e.push((15&t[r]).toString(16));return"0x"+e.join("").replace(/^0+/,"")},e.toByteArray=i},4278:(t,e,r)=>{"use strict";var n=r(3614),i=r(3206),o=new n(0),s=new n(-1),a={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};function u(t){var e=t?t.toLowerCase():"ether",r=a[e];if("string"!=typeof r)throw new Error("[ethjs-unit] the unit provided "+t+" doesn't exists, please use the one of the following units "+JSON.stringify(a,null,2));return new n(r,10)}function h(t){if("string"==typeof t){if(!t.match(/^-?[0-9.]+$/))throw new Error("while converting number to string, invalid number value '"+t+"', should be a number matching (^-?[0-9.]+).");return t}if("number"==typeof t)return String(t);if("object"==typeof t&&t.toString&&(t.toTwos||t.dividedToIntegerBy))return t.toPrecision?String(t.toPrecision()):t.toString(10);throw new Error("while converting number to string, invalid number value '"+t+"' type "+typeof t+".")}t.exports={unitMap:a,numberToString:h,getValueOfUnit:u,fromWei:function(t,e,r){var n=i(t),h=n.lt(o),l=u(e),f=a[e].length-1||1,c=r||{};h&&(n=n.mul(s));for(var d=n.mod(l).toString(10);d.length<f;)d="0"+d;c.pad||(d=d.match(/^([0-9]*[1-9]|0)(0*)/)[1]);var p=n.div(l).toString(10);c.commify&&(p=p.replace(/\B(?=(\d{3})+(?!\d))/g,","));var m=p+("0"==d?"":"."+d);return h&&(m="-"+m),m},toWei:function(t,e){var r=h(t),i=u(e),o=a[e].length-1||1,l="-"===r.substring(0,1);if(l&&(r=r.substring(1)),"."===r)throw new Error("[ethjs-unit] while converting number "+t+" to wei, invalid value");var f=r.split(".");if(f.length>2)throw new Error("[ethjs-unit] while converting number "+t+" to wei,  too many decimal points");var c=f[0],d=f[1];if(c||(c="0"),d||(d="0"),d.length>o)throw new Error("[ethjs-unit] while converting number "+t+" to wei, too many decimal places");for(;d.length<o;)d+="0";c=new n(c),d=new n(d);var p=c.mul(i).add(d);return l&&(p=p.mul(s)),new n(p.toString(10),10)}}},3614:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function o(t,e,r){if(o.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var s;"object"==typeof t?t.exports=o:e.BN=o,o.BN=o,o.wordSize=26;try{s=r(4293).Buffer}catch(t){}function a(t,e,r){for(var n=0,i=Math.min(t.length,r),o=e;o<i;o++){var s=t.charCodeAt(o)-48;n<<=4,n|=s>=49&&s<=54?s-49+10:s>=17&&s<=22?s-17+10:15&s}return n}function u(t,e,r,n){for(var i=0,o=Math.min(t.length,r),s=e;s<o;s++){var a=t.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}o.isBN=function(t){return t instanceof o||null!==t&&"object"==typeof t&&t.constructor.wordSize===o.wordSize&&Array.isArray(t.words)},o.max=function(t,e){return t.cmp(e)>0?t:e},o.min=function(t,e){return t.cmp(e)<0?t:e},o.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===r)for(i=t.length-1,o=0;i>=0;i-=3)s=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===r)for(i=0,o=0;i<t.length;i+=3)s=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},o.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,o=0;for(r=t.length-6,n=0;r>=e;r-=6)i=a(t,r,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303,(o+=24)>=26&&(o-=26,n++);r+6!==e&&(i=a(t,e,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303),this.strip()},o.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var o=t.length-r,s=o%n,a=Math.min(o,o-s)+r,h=0,l=r;l<a;l+=n)h=u(t,l,l+n,e),this.imuln(i),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==s){var f=1;for(h=u(t,l,t.length,e),l=0;l<s;l++)f*=e;this.imuln(f),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},o.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},o.prototype.clone=function(){var t=new o(null);return this.copy(t),t},o.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],f=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],o=0|e.words[0],s=i*o,a=67108863&s,u=s/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var l=u>>>26,f=67108863&u,c=Math.min(h,e.length-1),d=Math.max(0,h-t.length+1);d<=c;d++){var p=h-d|0;l+=(s=(i=0|t.words[p])*(o=0|e.words[d])+f)/67108864|0,f=67108863&s}r.words[h]=0|f,u=0|l}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}o.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],u=(16777215&(a<<i|o)).toString(16);r=0!=(o=a>>>24-i&16777215)||s!==this.length-1?h[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,s--)}for(0!==o&&(r=o.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var c=l[t],d=f[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(d).toString(t);r=(p=p.idivn(d)).isZero()?m+r:h[c-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(t,e){return n(void 0!==s),this.toArrayLike(s,t,e)},o.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},o.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,"byte array longer than desired length"),n(o>0,"Requested array length <= 0"),this.strip();var s,a,u="le"===e,h=new t(o),l=this.clone();if(u){for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[a]=s;for(;a<o;a++)h[a]=0}else{for(a=0;a<o-i;a++)h[a]=0;for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[o-a-1]=s}return h},Math.clz32?o.prototype._countBits=function(t){return 32-Math.clz32(t)}:o.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},o.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},o.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},o.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},o.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},o.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},o.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},o.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},o.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},o.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},o.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},o.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},o.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},o.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},o.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},o.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},o.prototype.notn=function(t){return this.clone().inotn(t)},o.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},o.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,o=0;o<n.length;o++)e=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&e,i=e>>>26;for(;0!==i&&o<r.length;o++)e=(0|r.words[o])+i,this.words[o]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},o.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var o=0,s=0;s<n.length;s++)o=(e=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&e;for(;0!==o&&s<r.length;s++)o=(e=(0|r.words[s])+o)>>26,this.words[s]=67108863&e;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,e,r){var n,i,o,s=t.words,a=e.words,u=r.words,h=0,l=0|s[0],f=8191&l,c=l>>>13,d=0|s[1],p=8191&d,m=d>>>13,g=0|s[2],y=8191&g,v=g>>>13,w=0|s[3],b=8191&w,A=w>>>13,M=0|s[4],I=8191&M,E=M>>>13,_=0|s[5],S=8191&_,C=_>>>13,x=0|s[6],B=8191&x,k=x>>>13,F=0|s[7],N=8191&F,T=F>>>13,R=0|s[8],P=8191&R,O=R>>>13,U=0|s[9],D=8191&U,q=U>>>13,L=0|a[0],Q=8191&L,j=L>>>13,z=0|a[1],K=8191&z,H=z>>>13,G=0|a[2],V=8191&G,W=G>>>13,J=0|a[3],Z=8191&J,Y=J>>>13,X=0|a[4],$=8191&X,tt=X>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],ot=8191&it,st=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,lt=0|a[8],ft=8191&lt,ct=lt>>>13,dt=0|a[9],pt=8191&dt,mt=dt>>>13;r.negative=t.negative^e.negative,r.length=19;var gt=(h+(n=Math.imul(f,Q))|0)+((8191&(i=(i=Math.imul(f,j))+Math.imul(c,Q)|0))<<13)|0;h=((o=Math.imul(c,j))+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(p,Q),i=(i=Math.imul(p,j))+Math.imul(m,Q)|0,o=Math.imul(m,j);var yt=(h+(n=n+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,H)|0)+Math.imul(c,K)|0))<<13)|0;h=((o=o+Math.imul(c,H)|0)+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(y,Q),i=(i=Math.imul(y,j))+Math.imul(v,Q)|0,o=Math.imul(v,j),n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,H)|0)+Math.imul(m,K)|0,o=o+Math.imul(m,H)|0;var vt=(h+(n=n+Math.imul(f,V)|0)|0)+((8191&(i=(i=i+Math.imul(f,W)|0)+Math.imul(c,V)|0))<<13)|0;h=((o=o+Math.imul(c,W)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(b,Q),i=(i=Math.imul(b,j))+Math.imul(A,Q)|0,o=Math.imul(A,j),n=n+Math.imul(y,K)|0,i=(i=i+Math.imul(y,H)|0)+Math.imul(v,K)|0,o=o+Math.imul(v,H)|0,n=n+Math.imul(p,V)|0,i=(i=i+Math.imul(p,W)|0)+Math.imul(m,V)|0,o=o+Math.imul(m,W)|0;var wt=(h+(n=n+Math.imul(f,Z)|0)|0)+((8191&(i=(i=i+Math.imul(f,Y)|0)+Math.imul(c,Z)|0))<<13)|0;h=((o=o+Math.imul(c,Y)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(I,Q),i=(i=Math.imul(I,j))+Math.imul(E,Q)|0,o=Math.imul(E,j),n=n+Math.imul(b,K)|0,i=(i=i+Math.imul(b,H)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,H)|0,n=n+Math.imul(y,V)|0,i=(i=i+Math.imul(y,W)|0)+Math.imul(v,V)|0,o=o+Math.imul(v,W)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,Y)|0)+Math.imul(m,Z)|0,o=o+Math.imul(m,Y)|0;var bt=(h+(n=n+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,tt)|0)+Math.imul(c,$)|0))<<13)|0;h=((o=o+Math.imul(c,tt)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(S,Q),i=(i=Math.imul(S,j))+Math.imul(C,Q)|0,o=Math.imul(C,j),n=n+Math.imul(I,K)|0,i=(i=i+Math.imul(I,H)|0)+Math.imul(E,K)|0,o=o+Math.imul(E,H)|0,n=n+Math.imul(b,V)|0,i=(i=i+Math.imul(b,W)|0)+Math.imul(A,V)|0,o=o+Math.imul(A,W)|0,n=n+Math.imul(y,Z)|0,i=(i=i+Math.imul(y,Y)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,Y)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,tt)|0;var At=(h+(n=n+Math.imul(f,rt)|0)|0)+((8191&(i=(i=i+Math.imul(f,nt)|0)+Math.imul(c,rt)|0))<<13)|0;h=((o=o+Math.imul(c,nt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(B,Q),i=(i=Math.imul(B,j))+Math.imul(k,Q)|0,o=Math.imul(k,j),n=n+Math.imul(S,K)|0,i=(i=i+Math.imul(S,H)|0)+Math.imul(C,K)|0,o=o+Math.imul(C,H)|0,n=n+Math.imul(I,V)|0,i=(i=i+Math.imul(I,W)|0)+Math.imul(E,V)|0,o=o+Math.imul(E,W)|0,n=n+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,Y)|0)+Math.imul(A,Z)|0,o=o+Math.imul(A,Y)|0,n=n+Math.imul(y,$)|0,i=(i=i+Math.imul(y,tt)|0)+Math.imul(v,$)|0,o=o+Math.imul(v,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,o=o+Math.imul(m,nt)|0;var Mt=(h+(n=n+Math.imul(f,ot)|0)|0)+((8191&(i=(i=i+Math.imul(f,st)|0)+Math.imul(c,ot)|0))<<13)|0;h=((o=o+Math.imul(c,st)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(N,Q),i=(i=Math.imul(N,j))+Math.imul(T,Q)|0,o=Math.imul(T,j),n=n+Math.imul(B,K)|0,i=(i=i+Math.imul(B,H)|0)+Math.imul(k,K)|0,o=o+Math.imul(k,H)|0,n=n+Math.imul(S,V)|0,i=(i=i+Math.imul(S,W)|0)+Math.imul(C,V)|0,o=o+Math.imul(C,W)|0,n=n+Math.imul(I,Z)|0,i=(i=i+Math.imul(I,Y)|0)+Math.imul(E,Z)|0,o=o+Math.imul(E,Y)|0,n=n+Math.imul(b,$)|0,i=(i=i+Math.imul(b,tt)|0)+Math.imul(A,$)|0,o=o+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,i=(i=i+Math.imul(y,nt)|0)+Math.imul(v,rt)|0,o=o+Math.imul(v,nt)|0,n=n+Math.imul(p,ot)|0,i=(i=i+Math.imul(p,st)|0)+Math.imul(m,ot)|0,o=o+Math.imul(m,st)|0;var It=(h+(n=n+Math.imul(f,ut)|0)|0)+((8191&(i=(i=i+Math.imul(f,ht)|0)+Math.imul(c,ut)|0))<<13)|0;h=((o=o+Math.imul(c,ht)|0)+(i>>>13)|0)+(It>>>26)|0,It&=67108863,n=Math.imul(P,Q),i=(i=Math.imul(P,j))+Math.imul(O,Q)|0,o=Math.imul(O,j),n=n+Math.imul(N,K)|0,i=(i=i+Math.imul(N,H)|0)+Math.imul(T,K)|0,o=o+Math.imul(T,H)|0,n=n+Math.imul(B,V)|0,i=(i=i+Math.imul(B,W)|0)+Math.imul(k,V)|0,o=o+Math.imul(k,W)|0,n=n+Math.imul(S,Z)|0,i=(i=i+Math.imul(S,Y)|0)+Math.imul(C,Z)|0,o=o+Math.imul(C,Y)|0,n=n+Math.imul(I,$)|0,i=(i=i+Math.imul(I,tt)|0)+Math.imul(E,$)|0,o=o+Math.imul(E,tt)|0,n=n+Math.imul(b,rt)|0,i=(i=i+Math.imul(b,nt)|0)+Math.imul(A,rt)|0,o=o+Math.imul(A,nt)|0,n=n+Math.imul(y,ot)|0,i=(i=i+Math.imul(y,st)|0)+Math.imul(v,ot)|0,o=o+Math.imul(v,st)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,o=o+Math.imul(m,ht)|0;var Et=(h+(n=n+Math.imul(f,ft)|0)|0)+((8191&(i=(i=i+Math.imul(f,ct)|0)+Math.imul(c,ft)|0))<<13)|0;h=((o=o+Math.imul(c,ct)|0)+(i>>>13)|0)+(Et>>>26)|0,Et&=67108863,n=Math.imul(D,Q),i=(i=Math.imul(D,j))+Math.imul(q,Q)|0,o=Math.imul(q,j),n=n+Math.imul(P,K)|0,i=(i=i+Math.imul(P,H)|0)+Math.imul(O,K)|0,o=o+Math.imul(O,H)|0,n=n+Math.imul(N,V)|0,i=(i=i+Math.imul(N,W)|0)+Math.imul(T,V)|0,o=o+Math.imul(T,W)|0,n=n+Math.imul(B,Z)|0,i=(i=i+Math.imul(B,Y)|0)+Math.imul(k,Z)|0,o=o+Math.imul(k,Y)|0,n=n+Math.imul(S,$)|0,i=(i=i+Math.imul(S,tt)|0)+Math.imul(C,$)|0,o=o+Math.imul(C,tt)|0,n=n+Math.imul(I,rt)|0,i=(i=i+Math.imul(I,nt)|0)+Math.imul(E,rt)|0,o=o+Math.imul(E,nt)|0,n=n+Math.imul(b,ot)|0,i=(i=i+Math.imul(b,st)|0)+Math.imul(A,ot)|0,o=o+Math.imul(A,st)|0,n=n+Math.imul(y,ut)|0,i=(i=i+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,o=o+Math.imul(v,ht)|0,n=n+Math.imul(p,ft)|0,i=(i=i+Math.imul(p,ct)|0)+Math.imul(m,ft)|0,o=o+Math.imul(m,ct)|0;var _t=(h+(n=n+Math.imul(f,pt)|0)|0)+((8191&(i=(i=i+Math.imul(f,mt)|0)+Math.imul(c,pt)|0))<<13)|0;h=((o=o+Math.imul(c,mt)|0)+(i>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(D,K),i=(i=Math.imul(D,H))+Math.imul(q,K)|0,o=Math.imul(q,H),n=n+Math.imul(P,V)|0,i=(i=i+Math.imul(P,W)|0)+Math.imul(O,V)|0,o=o+Math.imul(O,W)|0,n=n+Math.imul(N,Z)|0,i=(i=i+Math.imul(N,Y)|0)+Math.imul(T,Z)|0,o=o+Math.imul(T,Y)|0,n=n+Math.imul(B,$)|0,i=(i=i+Math.imul(B,tt)|0)+Math.imul(k,$)|0,o=o+Math.imul(k,tt)|0,n=n+Math.imul(S,rt)|0,i=(i=i+Math.imul(S,nt)|0)+Math.imul(C,rt)|0,o=o+Math.imul(C,nt)|0,n=n+Math.imul(I,ot)|0,i=(i=i+Math.imul(I,st)|0)+Math.imul(E,ot)|0,o=o+Math.imul(E,st)|0,n=n+Math.imul(b,ut)|0,i=(i=i+Math.imul(b,ht)|0)+Math.imul(A,ut)|0,o=o+Math.imul(A,ht)|0,n=n+Math.imul(y,ft)|0,i=(i=i+Math.imul(y,ct)|0)+Math.imul(v,ft)|0,o=o+Math.imul(v,ct)|0;var St=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((o=o+Math.imul(m,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,W))+Math.imul(q,V)|0,o=Math.imul(q,W),n=n+Math.imul(P,Z)|0,i=(i=i+Math.imul(P,Y)|0)+Math.imul(O,Z)|0,o=o+Math.imul(O,Y)|0,n=n+Math.imul(N,$)|0,i=(i=i+Math.imul(N,tt)|0)+Math.imul(T,$)|0,o=o+Math.imul(T,tt)|0,n=n+Math.imul(B,rt)|0,i=(i=i+Math.imul(B,nt)|0)+Math.imul(k,rt)|0,o=o+Math.imul(k,nt)|0,n=n+Math.imul(S,ot)|0,i=(i=i+Math.imul(S,st)|0)+Math.imul(C,ot)|0,o=o+Math.imul(C,st)|0,n=n+Math.imul(I,ut)|0,i=(i=i+Math.imul(I,ht)|0)+Math.imul(E,ut)|0,o=o+Math.imul(E,ht)|0,n=n+Math.imul(b,ft)|0,i=(i=i+Math.imul(b,ct)|0)+Math.imul(A,ft)|0,o=o+Math.imul(A,ct)|0;var Ct=(h+(n=n+Math.imul(y,pt)|0)|0)+((8191&(i=(i=i+Math.imul(y,mt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((o=o+Math.imul(v,mt)|0)+(i>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,n=Math.imul(D,Z),i=(i=Math.imul(D,Y))+Math.imul(q,Z)|0,o=Math.imul(q,Y),n=n+Math.imul(P,$)|0,i=(i=i+Math.imul(P,tt)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,tt)|0,n=n+Math.imul(N,rt)|0,i=(i=i+Math.imul(N,nt)|0)+Math.imul(T,rt)|0,o=o+Math.imul(T,nt)|0,n=n+Math.imul(B,ot)|0,i=(i=i+Math.imul(B,st)|0)+Math.imul(k,ot)|0,o=o+Math.imul(k,st)|0,n=n+Math.imul(S,ut)|0,i=(i=i+Math.imul(S,ht)|0)+Math.imul(C,ut)|0,o=o+Math.imul(C,ht)|0,n=n+Math.imul(I,ft)|0,i=(i=i+Math.imul(I,ct)|0)+Math.imul(E,ft)|0,o=o+Math.imul(E,ct)|0;var xt=(h+(n=n+Math.imul(b,pt)|0)|0)+((8191&(i=(i=i+Math.imul(b,mt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((o=o+Math.imul(A,mt)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(D,$),i=(i=Math.imul(D,tt))+Math.imul(q,$)|0,o=Math.imul(q,tt),n=n+Math.imul(P,rt)|0,i=(i=i+Math.imul(P,nt)|0)+Math.imul(O,rt)|0,o=o+Math.imul(O,nt)|0,n=n+Math.imul(N,ot)|0,i=(i=i+Math.imul(N,st)|0)+Math.imul(T,ot)|0,o=o+Math.imul(T,st)|0,n=n+Math.imul(B,ut)|0,i=(i=i+Math.imul(B,ht)|0)+Math.imul(k,ut)|0,o=o+Math.imul(k,ht)|0,n=n+Math.imul(S,ft)|0,i=(i=i+Math.imul(S,ct)|0)+Math.imul(C,ft)|0,o=o+Math.imul(C,ct)|0;var Bt=(h+(n=n+Math.imul(I,pt)|0)|0)+((8191&(i=(i=i+Math.imul(I,mt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((o=o+Math.imul(E,mt)|0)+(i>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(D,rt),i=(i=Math.imul(D,nt))+Math.imul(q,rt)|0,o=Math.imul(q,nt),n=n+Math.imul(P,ot)|0,i=(i=i+Math.imul(P,st)|0)+Math.imul(O,ot)|0,o=o+Math.imul(O,st)|0,n=n+Math.imul(N,ut)|0,i=(i=i+Math.imul(N,ht)|0)+Math.imul(T,ut)|0,o=o+Math.imul(T,ht)|0,n=n+Math.imul(B,ft)|0,i=(i=i+Math.imul(B,ct)|0)+Math.imul(k,ft)|0,o=o+Math.imul(k,ct)|0;var kt=(h+(n=n+Math.imul(S,pt)|0)|0)+((8191&(i=(i=i+Math.imul(S,mt)|0)+Math.imul(C,pt)|0))<<13)|0;h=((o=o+Math.imul(C,mt)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(D,ot),i=(i=Math.imul(D,st))+Math.imul(q,ot)|0,o=Math.imul(q,st),n=n+Math.imul(P,ut)|0,i=(i=i+Math.imul(P,ht)|0)+Math.imul(O,ut)|0,o=o+Math.imul(O,ht)|0,n=n+Math.imul(N,ft)|0,i=(i=i+Math.imul(N,ct)|0)+Math.imul(T,ft)|0,o=o+Math.imul(T,ct)|0;var Ft=(h+(n=n+Math.imul(B,pt)|0)|0)+((8191&(i=(i=i+Math.imul(B,mt)|0)+Math.imul(k,pt)|0))<<13)|0;h=((o=o+Math.imul(k,mt)|0)+(i>>>13)|0)+(Ft>>>26)|0,Ft&=67108863,n=Math.imul(D,ut),i=(i=Math.imul(D,ht))+Math.imul(q,ut)|0,o=Math.imul(q,ht),n=n+Math.imul(P,ft)|0,i=(i=i+Math.imul(P,ct)|0)+Math.imul(O,ft)|0,o=o+Math.imul(O,ct)|0;var Nt=(h+(n=n+Math.imul(N,pt)|0)|0)+((8191&(i=(i=i+Math.imul(N,mt)|0)+Math.imul(T,pt)|0))<<13)|0;h=((o=o+Math.imul(T,mt)|0)+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(D,ft),i=(i=Math.imul(D,ct))+Math.imul(q,ft)|0,o=Math.imul(q,ct);var Tt=(h+(n=n+Math.imul(P,pt)|0)|0)+((8191&(i=(i=i+Math.imul(P,mt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((o=o+Math.imul(O,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Rt=(h+(n=Math.imul(D,pt))|0)+((8191&(i=(i=Math.imul(D,mt))+Math.imul(q,pt)|0))<<13)|0;return h=((o=Math.imul(q,mt))+(i>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,u[0]=gt,u[1]=yt,u[2]=vt,u[3]=wt,u[4]=bt,u[5]=At,u[6]=Mt,u[7]=It,u[8]=Et,u[9]=_t,u[10]=St,u[11]=Ct,u[12]=xt,u[13]=Bt,u[14]=kt,u[15]=Ft,u[16]=Nt,u[17]=Tt,u[18]=Rt,0!==h&&(u[19]=h,r.length++),r};function p(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(d=c),o.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,e):r<63?c(this,t,e):r<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,u=Math.min(o,e.length-1),h=Math.max(0,o-t.length+1);h<=u;h++){var l=o-h,f=(0|t.words[l])*(0|e.words[h]),c=67108863&f;a=67108863&(c=c+a|0),i+=(s=(s=s+(f/67108864|0)|0)+(c>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,t,e):p(this,t,e)},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=o.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},m.prototype.permute=function(t,e,r,n,i,o){for(var s=0;s<o;s++)n[s]=e[t[s]],i[s]=r[t[s]]},m.prototype.transform=function(t,e,r,n,i,o){this.permute(o,t,e,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),l=0;l<i;l+=a)for(var f=u,c=h,d=0;d<s;d++){var p=r[l+d],m=n[l+d],g=r[l+d+s],y=n[l+d+s],v=f*g-c*y;y=f*y+c*g,g=v,r[l+d]=p+g,n[l+d]=m+y,r[l+d+s]=p-g,n[l+d+s]=m-y,d!==a&&(v=u*f-h*c,c=u*c+h*f,f=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},m.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},m.prototype.convert13b=function(t,e,r,i){for(var o=0,s=0;s<e;s++)o+=0|t[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*e;s<i;++s)r[s]=0;n(0===o),n(0==(-8192&o))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),l=new Array(n),f=new Array(n),c=r.words;c.length=n,this.convert13b(t.words,t.length,s,n),this.convert13b(e.words,e.length,h,n),this.transform(s,o,a,u,n,i),this.transform(h,o,l,f,n,i);for(var d=0;d<n;d++){var p=a[d]*l[d]-u[d]*f[d];u[d]=a[d]*f[d]+u[d]*l[d],a[d]=p}return this.conjugate(a,u,n),this.transform(a,u,c,o,n,i),this.conjugate(c,o,n),this.normalize13b(c,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},o.prototype.mul=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},o.prototype.mulf=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),p(this,t,e)},o.prototype.imul=function(t){return this.clone().mulTo(t,this)},o.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,o=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=o>>>26,this.words[r]=67108863&o}return 0!==e&&(this.words[r]=e,this.length++),this},o.prototype.muln=function(t){return this.clone().imuln(t)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new o(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(e=0;e<this.length;e++){var a=this.words[e]&o,u=(0|this.words[e])-a<<r;this.words[e]=u|s,s=a>>>26-r}s&&(this.words[e]=s,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},o.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},o.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var o=t%26,s=Math.min((t-o)/26,this.length),a=67108863^67108863>>>o<<o,u=r;if(i-=s,i=Math.max(0,i),u){for(var h=0;h<s;h++)u.words[h]=this.words[h];u.length=s}if(0===s);else if(this.length>s)for(this.length-=s,h=0;h<this.length;h++)this.words[h]=this.words[h+s];else this.words[0]=0,this.length=1;var l=0;for(h=this.length-1;h>=0&&(0!==l||h>=i);h--){var f=0|this.words[h];this.words[h]=l<<26-o|f>>>o,l=f&a}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},o.prototype.shln=function(t){return this.clone().ishln(t)},o.prototype.ushln=function(t){return this.clone().iushln(t)},o.prototype.shrn=function(t){return this.clone().ishrn(t)},o.prototype.ushrn=function(t){return this.clone().iushrn(t)},o.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r||!(this.words[r]&i))},o.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},o.prototype.maskn=function(t){return this.clone().imaskn(t)},o.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},o.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},o.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},o.prototype.addn=function(t){return this.clone().iaddn(t)},o.prototype.subn=function(t){return this.clone().isubn(t)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(t,e,r){var i,o,s=t.length+r;this._expand(s);var a=0;for(i=0;i<t.length;i++){o=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((o-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,s=0|i.words[i.length-1];0!=(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new o(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var l=n.clone()._ishlnsubmul(i,1,u);0===l.negative&&(n=l,a&&(a.words[u]=1));for(var f=u-1;f>=0;f--){var c=67108864*(0|n.words[i.length+f])+(0|n.words[i.length+f-1]);for(c=Math.min(c/s|0,67108863),n._ishlnsubmul(i,c,f);0!==n.negative;)c--,n.negative=0,n._ishlnsubmul(i,1,f),n.isZero()||(n.negative^=1);a&&(a.words[f]=c)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(t)),{div:i,mod:s}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(t)),{div:a.div,mod:s}):t.length>this.length||this.cmp(t)<0?{div:new o(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new o(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new o(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,s,a},o.prototype.div=function(t){return this.divmod(t,"div",!1).div},o.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},o.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},o.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},o.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},o.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},o.prototype.divn=function(t){return this.clone().idivn(t)},o.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new o(1),s=new o(0),a=new o(0),u=new o(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var l=r.clone(),f=e.clone();!e.isZero();){for(var c=0,d=1;0==(e.words[0]&d)&&c<26;++c,d<<=1);if(c>0)for(e.iushrn(c);c-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(l),s.isub(f)),i.iushrn(1),s.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(l),u.isub(f)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),s.isub(u)):(r.isub(e),a.isub(i),u.isub(s))}return{a,b:u,gcd:r.iushln(h)}},o.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,s=new o(1),a=new o(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,l=1;0==(e.words[0]&l)&&h<26;++h,l<<=1);if(h>0)for(e.iushrn(h);h-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);for(var f=0,c=1;0==(r.words[0]&c)&&f<26;++f,c<<=1);if(f>0)for(r.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),s.isub(a)):(r.isub(e),a.isub(s))}return(i=0===e.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(t),i},o.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var o=e;e=r,r=o}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},o.prototype.invm=function(t){return this.egcd(t).a.umod(t)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(t){return this.words[0]&t},o.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},o.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},o.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},o.prototype.gtn=function(t){return 1===this.cmpn(t)},o.prototype.gt=function(t){return 1===this.cmp(t)},o.prototype.gten=function(t){return this.cmpn(t)>=0},o.prototype.gte=function(t){return this.cmp(t)>=0},o.prototype.ltn=function(t){return-1===this.cmpn(t)},o.prototype.lt=function(t){return-1===this.cmp(t)},o.prototype.lten=function(t){return this.cmpn(t)<=0},o.prototype.lte=function(t){return this.cmp(t)<=0},o.prototype.eqn=function(t){return 0===this.cmpn(t)},o.prototype.eq=function(t){return 0===this.cmp(t)},o.red=function(t){return new M(t)},o.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},o.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(t){return this.red=t,this},o.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},o.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},o.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},o.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},o.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},o.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},o.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},o.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},o.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var g={k256:null,p224:null,p192:null,p25519:null};function y(t,e){this.name=t,this.p=new o(e,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function A(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function M(t){if("string"==typeof t){var e=o._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function I(t){M.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new o(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},y.prototype.split=function(t,e){t.iushrn(this.n,0,e)},y.prototype.imulK=function(t){return t.imul(this.k)},i(v,y),v.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var o=t.words[9];for(e.words[e.length++]=o&r,i=10;i<t.length;i++){var s=0|t.words[i];t.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,t.words[i-10]=o,0===o&&t.length>10?t.length-=10:t.length-=9},v.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,y),i(b,y),i(A,y),A.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},o._prime=function(t){if(g[t])return g[t];var e;if("k256"===t)e=new v;else if("p224"===t)e=new w;else if("p192"===t)e=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new A}return g[t]=e,e},M.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},M.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},M.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},M.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},M.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},M.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},M.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},M.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},M.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},M.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},M.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},M.prototype.isqr=function(t){return this.imul(t,t.clone())},M.prototype.sqr=function(t){return this.mul(t,t)},M.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new o(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new o(2*l*l).toRed(this);0!==this.pow(l,h).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,i),c=this.pow(t,i.addn(1).iushrn(1)),d=this.pow(t,i),p=s;0!==d.cmp(a);){for(var m=d,g=0;0!==m.cmp(a);g++)m=m.redSqr();n(g<p);var y=this.pow(f,new o(1).iushln(p-g-1));c=c.redMul(y),f=y.redSqr(),d=d.redMul(f),p=g}return c},M.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},M.prototype.pow=function(t,e){if(e.isZero())return new o(1);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],s=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],l=u-1;l>=0;l--){var f=h>>l&1;i!==r[0]&&(i=this.sqr(i)),0!==f||0!==s?(s<<=1,s|=f,(4==++a||0===n&&0===l)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0}u=26}return i},M.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},M.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},o.mont=function(t){return new I(t)},i(I,M),I.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},I.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},I.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},I.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new o(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},I.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},5480:(t,e)=>{},4575:(t,e)=>{},8178:(t,e,r)=>{r(4575),r(5480)},2843:(t,e,r)=>{var n=r(5622).sep||"/";t.exports=function(t){if("string"!=typeof t||t.length<=7||"file://"!=t.substring(0,7))throw new TypeError("must pass in a file:// URI to convert to a file path");var e=decodeURI(t.substring(7)),r=e.indexOf("/"),i=e.substring(0,r),o=e.substring(r+1);return"localhost"==i&&(i=""),i&&(i=n+n+i),o=o.replace(/^(.+)\|/,"$1:"),"\\"==n&&(o=o.replace(/\//g,"\\")),/^.+\:/.test(o)||(o=n+o),i+o}},2261:(t,e,r)=>{var n;try{n=r(5158)("follow-redirects")}catch(t){n=function(){}}t.exports=n},938:(t,e,r)=>{var n=r(8835),i=n.URL,o=r(8605),s=r(7211),a=r(2413).Writable,u=r(2357),h=r(2261),l=Object.create(null);["abort","aborted","connect","error","socket","timeout"].forEach((function(t){l[t]=function(e,r,n){this._redirectable.emit(t,e,r,n)}}));var f=M("ERR_FR_REDIRECTION_FAILURE",""),c=M("ERR_FR_TOO_MANY_REDIRECTS","Maximum number of redirects exceeded"),d=M("ERR_FR_MAX_BODY_LENGTH_EXCEEDED","Request body larger than maxBodyLength limit"),p=M("ERR_STREAM_WRITE_AFTER_END","write after end");function m(t,e){a.call(this),this._sanitizeOptions(t),this._options=t,this._ended=!1,this._ending=!1,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],e&&this.on("response",e);var r=this;this._onNativeResponse=function(t){r._processResponse(t)},this._performRequest()}function g(t,e){clearTimeout(t._timeout),t._timeout=setTimeout((function(){t.emit("timeout")}),e)}function y(){clearTimeout(this._timeout)}function v(t){var e={maxRedirects:21,maxBodyLength:10485760},r={};return Object.keys(t).forEach((function(o){var s=o+":",a=r[s]=t[o],l=e[o]=Object.create(a);l.request=function(t,o,a){if("string"==typeof t){var l=t;try{t=b(new i(l))}catch(e){t=n.parse(l)}}else i&&t instanceof i?t=b(t):(a=o,o=t,t={protocol:s});return"function"==typeof o&&(a=o,o=null),(o=Object.assign({maxRedirects:e.maxRedirects,maxBodyLength:e.maxBodyLength},t,o)).nativeProtocols=r,u.equal(o.protocol,s,"protocol mismatch"),h("options",o),new m(o,a)},l.get=function(t,e,r){var n=l.request(t,e,r);return n.end(),n}})),e}function w(){}function b(t){var e={protocol:t.protocol,hostname:t.hostname.startsWith("[")?t.hostname.slice(1,-1):t.hostname,hash:t.hash,search:t.search,pathname:t.pathname,path:t.pathname+t.search,href:t.href};return""!==t.port&&(e.port=Number(t.port)),e}function A(t,e){var r;for(var n in e)t.test(n)&&(r=e[n],delete e[n]);return r}function M(t,e){function r(t){Error.captureStackTrace(this,this.constructor),this.message=t||e}return r.prototype=new Error,r.prototype.constructor=r,r.prototype.name="Error ["+t+"]",r.prototype.code=t,r}m.prototype=Object.create(a.prototype),m.prototype.write=function(t,e,r){if(this._ending)throw new p;if(!("string"==typeof t||"object"==typeof t&&"length"in t))throw new TypeError("data should be a string, Buffer or Uint8Array");"function"==typeof e&&(r=e,e=null),0!==t.length?this._requestBodyLength+t.length<=this._options.maxBodyLength?(this._requestBodyLength+=t.length,this._requestBodyBuffers.push({data:t,encoding:e}),this._currentRequest.write(t,e,r)):(this.emit("error",new d),this.abort()):r&&r()},m.prototype.end=function(t,e,r){if("function"==typeof t?(r=t,t=e=null):"function"==typeof e&&(r=e,e=null),t){var n=this,i=this._currentRequest;this.write(t,e,(function(){n._ended=!0,i.end(null,null,r)})),this._ending=!0}else this._ended=this._ending=!0,this._currentRequest.end(null,null,r)},m.prototype.setHeader=function(t,e){this._options.headers[t]=e,this._currentRequest.setHeader(t,e)},m.prototype.removeHeader=function(t){delete this._options.headers[t],this._currentRequest.removeHeader(t)},m.prototype.setTimeout=function(t,e){if(e&&this.once("timeout",e),this.socket)g(this,t);else{var r=this;this._currentRequest.once("socket",(function(){g(r,t)}))}return this.once("response",y),this.once("error",y),this},["abort","flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach((function(t){m.prototype[t]=function(e,r){return this._currentRequest[t](e,r)}})),["aborted","connection","socket"].forEach((function(t){Object.defineProperty(m.prototype,t,{get:function(){return this._currentRequest[t]}})})),m.prototype._sanitizeOptions=function(t){if(t.headers||(t.headers={}),t.host&&(t.hostname||(t.hostname=t.host),delete t.host),!t.pathname&&t.path){var e=t.path.indexOf("?");e<0?t.pathname=t.path:(t.pathname=t.path.substring(0,e),t.search=t.path.substring(e))}},m.prototype._performRequest=function(){var t=this._options.protocol,e=this._options.nativeProtocols[t];if(e){if(this._options.agents){var r=t.substr(0,t.length-1);this._options.agent=this._options.agents[r]}var i=this._currentRequest=e.request(this._options,this._onNativeResponse);for(var o in this._currentUrl=n.format(this._options),i._redirectable=this,l)o&&i.on(o,l[o]);if(this._isRedirect){var s=0,a=this,u=this._requestBodyBuffers;!function t(e){if(i===a._currentRequest)if(e)a.emit("error",e);else if(s<u.length){var r=u[s++];i.finished||i.write(r.data,r.encoding,t)}else a._ended&&i.end()}()}}else this.emit("error",new TypeError("Unsupported protocol "+t))},m.prototype._processResponse=function(t){var e=t.statusCode;this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:t.headers,statusCode:e});var r=t.headers.location;if(r&&!1!==this._options.followRedirects&&e>=300&&e<400){if(this._currentRequest.removeAllListeners(),this._currentRequest.on("error",w),this._currentRequest.abort(),t.destroy(),++this._redirectCount>this._options.maxRedirects)return void this.emit("error",new c);((301===e||302===e)&&"POST"===this._options.method||303===e&&!/^(?:GET|HEAD)$/.test(this._options.method))&&(this._options.method="GET",this._requestBodyBuffers=[],A(/^content-/i,this._options.headers));var i=A(/^host$/i,this._options.headers)||n.parse(this._currentUrl).hostname,o=n.resolve(this._currentUrl,r);h("redirecting to",o),this._isRedirect=!0;var s=n.parse(o);if(Object.assign(this._options,s),s.hostname!==i&&A(/^authorization$/i,this._options.headers),"function"==typeof this._options.beforeRedirect){var a={headers:t.headers};try{this._options.beforeRedirect.call(null,this._options,a)}catch(t){return void this.emit("error",t)}this._sanitizeOptions(this._options)}try{this._performRequest()}catch(t){var u=new f("Redirected request failed: "+t.message);u.cause=t,this.emit("error",u)}}else t.responseUrl=this._currentUrl,t.redirects=this._redirects,this.emit("response",t),this._requestBodyBuffers=[]},t.exports=v({http:o,https:s}),t.exports.wrap=v},6458:t=>{"use strict";t.exports=function(t){if(null===t||"object"!=typeof t)return t;if(t instanceof Object)var e={__proto__:t.__proto__};else e=Object.create(null);return Object.getOwnPropertyNames(t).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}},77:(t,e,r)=>{var n,i,o=r(5747),s=r(2161),a=r(8520),u=r(6458),h=r(1669);function l(t,e){Object.defineProperty(t,n,{get:function(){return e}})}"function"==typeof Symbol&&"function"==typeof Symbol.for?(n=Symbol.for("graceful-fs.queue"),i=Symbol.for("graceful-fs.previous")):(n="___graceful-fs.queue",i="___graceful-fs.previous");var f=function(){};if(h.debuglog?f=h.debuglog("gfs4"):/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&(f=function(){var t=h.format.apply(h,arguments);t="GFS4: "+t.split(/\n/).join("\nGFS4: "),console.error(t)}),!o[n]){var c=global[n]||[];l(o,c),o.close=function(t){function e(e,r){return t.call(o,e,(function(t){t||m(),"function"==typeof r&&r.apply(this,arguments)}))}return Object.defineProperty(e,i,{value:t}),e}(o.close),o.closeSync=function(t){function e(e){t.apply(o,arguments),m()}return Object.defineProperty(e,i,{value:t}),e}(o.closeSync),/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&process.on("exit",(function(){f(o[n]),r(2357).equal(o[n].length,0)}))}function d(t){s(t),t.gracefulify=d,t.createReadStream=function(e,r){return new t.ReadStream(e,r)},t.createWriteStream=function(e,r){return new t.WriteStream(e,r)};var e=t.readFile;t.readFile=function(t,r,n){return"function"==typeof r&&(n=r,r=null),function t(r,n,i){return e(r,n,(function(e){!e||"EMFILE"!==e.code&&"ENFILE"!==e.code?("function"==typeof i&&i.apply(this,arguments),m()):p([t,[r,n,i]])}))}(t,r,n)};var r=t.writeFile;t.writeFile=function(t,e,n,i){return"function"==typeof n&&(i=n,n=null),function t(e,n,i,o){return r(e,n,i,(function(r){!r||"EMFILE"!==r.code&&"ENFILE"!==r.code?("function"==typeof o&&o.apply(this,arguments),m()):p([t,[e,n,i,o]])}))}(t,e,n,i)};var n=t.appendFile;n&&(t.appendFile=function(t,e,r,i){return"function"==typeof r&&(i=r,r=null),function t(e,r,i,o){return n(e,r,i,(function(n){!n||"EMFILE"!==n.code&&"ENFILE"!==n.code?("function"==typeof o&&o.apply(this,arguments),m()):p([t,[e,r,i,o]])}))}(t,e,r,i)});var i=t.readdir;function o(e){return i.apply(t,e)}if(t.readdir=function(t,e,r){var n=[t];return"function"!=typeof e?n.push(e):r=e,n.push((function(t,e){e&&e.sort&&e.sort(),!t||"EMFILE"!==t.code&&"ENFILE"!==t.code?("function"==typeof r&&r.apply(this,arguments),m()):p([o,[n]])})),o(n)},"v0.8"===process.version.substr(0,4)){var u=a(t);g=u.ReadStream,y=u.WriteStream}var h=t.ReadStream;h&&(g.prototype=Object.create(h.prototype),g.prototype.open=function(){var t=this;w(t.path,t.flags,t.mode,(function(e,r){e?(t.autoClose&&t.destroy(),t.emit("error",e)):(t.fd=r,t.emit("open",r),t.read())}))});var l=t.WriteStream;l&&(y.prototype=Object.create(l.prototype),y.prototype.open=function(){var t=this;w(t.path,t.flags,t.mode,(function(e,r){e?(t.destroy(),t.emit("error",e)):(t.fd=r,t.emit("open",r))}))}),Object.defineProperty(t,"ReadStream",{get:function(){return g},set:function(t){g=t},enumerable:!0,configurable:!0}),Object.defineProperty(t,"WriteStream",{get:function(){return y},set:function(t){y=t},enumerable:!0,configurable:!0});var f=g;Object.defineProperty(t,"FileReadStream",{get:function(){return f},set:function(t){f=t},enumerable:!0,configurable:!0});var c=y;function g(t,e){return this instanceof g?(h.apply(this,arguments),this):g.apply(Object.create(g.prototype),arguments)}function y(t,e){return this instanceof y?(l.apply(this,arguments),this):y.apply(Object.create(y.prototype),arguments)}Object.defineProperty(t,"FileWriteStream",{get:function(){return c},set:function(t){c=t},enumerable:!0,configurable:!0});var v=t.open;function w(t,e,r,n){return"function"==typeof r&&(n=r,r=null),function t(e,r,n,i){return v(e,r,n,(function(o,s){!o||"EMFILE"!==o.code&&"ENFILE"!==o.code?("function"==typeof i&&i.apply(this,arguments),m()):p([t,[e,r,n,i]])}))}(t,e,r,n)}return t.open=w,t}function p(t){f("ENQUEUE",t[0].name,t[1]),o[n].push(t)}function m(){var t=o[n].shift();t&&(f("RETRY",t[0].name,t[1]),t[0].apply(null,t[1]))}global[n]||l(global,o[n]),t.exports=d(u(o)),process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!o.__patched&&(t.exports=d(o),o.__patched=!0)},8520:(t,e,r)=>{var n=r(2413).Stream;t.exports=function(t){return{ReadStream:function e(r,i){if(!(this instanceof e))return new e(r,i);n.call(this);var o=this;this.path=r,this.fd=null,this.readable=!0,this.paused=!1,this.flags="r",this.mode=438,this.bufferSize=65536,i=i||{};for(var s=Object.keys(i),a=0,u=s.length;a<u;a++){var h=s[a];this[h]=i[h]}if(this.encoding&&this.setEncoding(this.encoding),void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(void 0===this.end)this.end=1/0;else if("number"!=typeof this.end)throw TypeError("end must be a Number");if(this.start>this.end)throw new Error("start must be <= end");this.pos=this.start}null===this.fd?t.open(this.path,this.flags,this.mode,(function(t,e){if(t)return o.emit("error",t),void(o.readable=!1);o.fd=e,o.emit("open",e),o._read()})):process.nextTick((function(){o._read()}))},WriteStream:function e(r,i){if(!(this instanceof e))return new e(r,i);n.call(this),this.path=r,this.fd=null,this.writable=!0,this.flags="w",this.encoding="binary",this.mode=438,this.bytesWritten=0,i=i||{};for(var o=Object.keys(i),s=0,a=o.length;s<a;s++){var u=o[s];this[u]=i[u]}if(void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(this.start<0)throw new Error("start must be >= zero");this.pos=this.start}this.busy=!1,this._queue=[],null===this.fd&&(this._open=t.open,this._queue.push([this._open,this.path,this.flags,this.mode,void 0]),this.flush())}}}},2161:(t,e,r)=>{var n=r(7619),i=process.cwd,o=null,s=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return o||(o=i.call(process)),o};try{process.cwd()}catch(t){}var a=process.chdir;process.chdir=function(t){o=null,a.call(process,t)},t.exports=function(t){var e,r;function i(e){return e?function(r,n,i){return e.call(t,r,n,(function(t){f(t)&&(t=null),i&&i.apply(this,arguments)}))}:e}function o(e){return e?function(r,n){try{return e.call(t,r,n)}catch(t){if(!f(t))throw t}}:e}function a(e){return e?function(r,n,i,o){return e.call(t,r,n,i,(function(t){f(t)&&(t=null),o&&o.apply(this,arguments)}))}:e}function u(e){return e?function(r,n,i){try{return e.call(t,r,n,i)}catch(t){if(!f(t))throw t}}:e}function h(e){return e?function(r,n,i){function o(t,e){e&&(e.uid<0&&(e.uid+=4294967296),e.gid<0&&(e.gid+=4294967296)),i&&i.apply(this,arguments)}return"function"==typeof n&&(i=n,n=null),n?e.call(t,r,n,o):e.call(t,r,o)}:e}function l(e){return e?function(r,n){var i=n?e.call(t,r,n):e.call(t,r);return i.uid<0&&(i.uid+=4294967296),i.gid<0&&(i.gid+=4294967296),i}:e}function f(t){return!t||"ENOSYS"===t.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==t.code&&"EPERM"!==t.code)}n.hasOwnProperty("O_SYMLINK")&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)&&function(t){t.lchmod=function(e,r,i){t.open(e,n.O_WRONLY|n.O_SYMLINK,r,(function(e,n){e?i&&i(e):t.fchmod(n,r,(function(e){t.close(n,(function(t){i&&i(e||t)}))}))}))},t.lchmodSync=function(e,r){var i,o=t.openSync(e,n.O_WRONLY|n.O_SYMLINK,r),s=!0;try{i=t.fchmodSync(o,r),s=!1}finally{if(s)try{t.closeSync(o)}catch(t){}else t.closeSync(o)}return i}}(t),t.lutimes||function(t){n.hasOwnProperty("O_SYMLINK")?(t.lutimes=function(e,r,i,o){t.open(e,n.O_SYMLINK,(function(e,n){e?o&&o(e):t.futimes(n,r,i,(function(e){t.close(n,(function(t){o&&o(e||t)}))}))}))},t.lutimesSync=function(e,r,i){var o,s=t.openSync(e,n.O_SYMLINK),a=!0;try{o=t.futimesSync(s,r,i),a=!1}finally{if(a)try{t.closeSync(s)}catch(t){}else t.closeSync(s)}return o}):(t.lutimes=function(t,e,r,n){n&&process.nextTick(n)},t.lutimesSync=function(){})}(t),t.chown=a(t.chown),t.fchown=a(t.fchown),t.lchown=a(t.lchown),t.chmod=i(t.chmod),t.fchmod=i(t.fchmod),t.lchmod=i(t.lchmod),t.chownSync=u(t.chownSync),t.fchownSync=u(t.fchownSync),t.lchownSync=u(t.lchownSync),t.chmodSync=o(t.chmodSync),t.fchmodSync=o(t.fchmodSync),t.lchmodSync=o(t.lchmodSync),t.stat=h(t.stat),t.fstat=h(t.fstat),t.lstat=h(t.lstat),t.statSync=l(t.statSync),t.fstatSync=l(t.fstatSync),t.lstatSync=l(t.lstatSync),t.lchmod||(t.lchmod=function(t,e,r){r&&process.nextTick(r)},t.lchmodSync=function(){}),t.lchown||(t.lchown=function(t,e,r,n){n&&process.nextTick(n)},t.lchownSync=function(){}),"win32"===s&&(t.rename=(e=t.rename,function(r,n,i){var o=Date.now(),s=0;e(r,n,(function a(u){if(u&&("EACCES"===u.code||"EPERM"===u.code)&&Date.now()-o<6e4)return setTimeout((function(){t.stat(n,(function(t,o){t&&"ENOENT"===t.code?e(r,n,a):i(u)}))}),s),void(s<100&&(s+=10));i&&i(u)}))})),t.read=function(e){function r(r,n,i,o,s,a){var u;if(a&&"function"==typeof a){var h=0;u=function(l,f,c){if(l&&"EAGAIN"===l.code&&h<10)return h++,e.call(t,r,n,i,o,s,u);a.apply(this,arguments)}}return e.call(t,r,n,i,o,s,u)}return r.__proto__=e,r}(t.read),t.readSync=(r=t.readSync,function(e,n,i,o,s){for(var a=0;;)try{return r.call(t,e,n,i,o,s)}catch(t){if("EAGAIN"===t.code&&a<10){a++;continue}throw t}})}},6560:t=>{"use strict";t.exports=(t,e)=>{e=e||process.argv;const r=t.startsWith("-")?"":1===t.length?"-":"--",n=e.indexOf(r+t),i=e.indexOf("--");return-1!==n&&(-1===i||n<i)}},4269:t=>{!function(){var e;function r(t,n){var i=this instanceof r?this:e;if(i.reset(n),"string"==typeof t&&t.length>0&&i.hash(t),i!==this)return i}r.prototype.hash=function(t){var e,r,n,i,o;switch(o=t.length,this.len+=o,r=this.k1,n=0,this.rem){case 0:r^=o>n?65535&t.charCodeAt(n++):0;case 1:r^=o>n?(65535&t.charCodeAt(n++))<<8:0;case 2:r^=o>n?(65535&t.charCodeAt(n++))<<16:0;case 3:r^=o>n?(255&t.charCodeAt(n))<<24:0,r^=o>n?(65280&t.charCodeAt(n++))>>8:0}if(this.rem=o+this.rem&3,(o-=this.rem)>0){for(e=this.h1;e=5*(e=(e^=r=13715*(r=(r=11601*r+3432906752*(65535&r)&4294967295)<<15|r>>>17)+461832192*(65535&r)&4294967295)<<13|e>>>19)+3864292196&4294967295,!(n>=o);)r=65535&t.charCodeAt(n++)^(65535&t.charCodeAt(n++))<<8^(65535&t.charCodeAt(n++))<<16,r^=(255&(i=t.charCodeAt(n++)))<<24^(65280&i)>>8;switch(r=0,this.rem){case 3:r^=(65535&t.charCodeAt(n+2))<<16;case 2:r^=(65535&t.charCodeAt(n+1))<<8;case 1:r^=65535&t.charCodeAt(n)}this.h1=e}return this.k1=r,this},r.prototype.result=function(){var t,e;return t=this.k1,e=this.h1,t>0&&(e^=t=13715*(t=(t=11601*t+3432906752*(65535&t)&4294967295)<<15|t>>>17)+461832192*(65535&t)&4294967295),e^=this.len,e=51819*(e^=e>>>16)+2246770688*(65535&e)&4294967295,e=44597*(e^=e>>>13)+3266445312*(65535&e)&4294967295,(e^=e>>>16)>>>0},r.prototype.reset=function(t){return this.h1="number"==typeof t?t:0,this.rem=this.k1=this.len=0,this},e=new r,t.exports=r}()},4378:(t,e,r)=>{try{var n=r(1669);if("function"!=typeof n.inherits)throw"";t.exports=n.inherits}catch(e){t.exports=r(5717)}},5717:t=>{"function"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}}},3944:t=>{t.exports=function(t){if("string"!=typeof t)throw new Error("[is-hex-prefixed] value must be type 'string', is currently type "+typeof t+", while checking isHexPrefixed.");return"0x"===t.slice(0,2)}},1094:(t,e,r)=>{var n;!function(){"use strict";var i="input is invalid type",o="object"==typeof window,s=o?window:{};s.JS_SHA3_NO_WINDOW&&(o=!1);var a=!o&&"object"==typeof self;!s.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?s=global:a&&(s=self);var u=!s.JS_SHA3_NO_COMMON_JS&&t.exports,h=r.amdO,l=!s.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,f="0123456789abcdef".split(""),c=[4,1024,262144,67108864],d=[0,8,16,24],p=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],m=[224,256,384,512],g=[128,256],y=["hex","buffer","arrayBuffer","array","digest"],v={128:168,256:136};!s.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!l||!s.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var w=function(t,e,r){return function(n){return new R(t,e,t).update(n)[r]()}},b=function(t,e,r){return function(n,i){return new R(t,e,i).update(n)[r]()}},A=function(t,e,r){return function(e,n,i,o){return S["cshake"+t].update(e,n,i,o)[r]()}},M=function(t,e,r){return function(e,n,i,o){return S["kmac"+t].update(e,n,i,o)[r]()}},I=function(t,e,r,n){for(var i=0;i<y.length;++i){var o=y[i];t[o]=e(r,n,o)}return t},E=function(t,e){var r=w(t,e,"hex");return r.create=function(){return new R(t,e,t)},r.update=function(t){return r.create().update(t)},I(r,w,t,e)},_=[{name:"keccak",padding:[1,256,65536,16777216],bits:m,createMethod:E},{name:"sha3",padding:[6,1536,393216,100663296],bits:m,createMethod:E},{name:"shake",padding:[31,7936,2031616,520093696],bits:g,createMethod:function(t,e){var r=b(t,e,"hex");return r.create=function(r){return new R(t,e,r)},r.update=function(t,e){return r.create(e).update(t)},I(r,b,t,e)}},{name:"cshake",padding:c,bits:g,createMethod:function(t,e){var r=v[t],n=A(t,0,"hex");return n.create=function(n,i,o){return i||o?new R(t,e,n).bytepad([i,o],r):S["shake"+t].create(n)},n.update=function(t,e,r,i){return n.create(e,r,i).update(t)},I(n,A,t,e)}},{name:"kmac",padding:c,bits:g,createMethod:function(t,e){var r=v[t],n=M(t,0,"hex");return n.create=function(n,i,o){return new P(t,e,i).bytepad(["KMAC",o],r).bytepad([n],r)},n.update=function(t,e,r,i){return n.create(t,r,i).update(e)},I(n,M,t,e)}}],S={},C=[],x=0;x<_.length;++x)for(var B=_[x],k=B.bits,F=0;F<k.length;++F){var N=B.name+"_"+k[F];if(C.push(N),S[N]=B.createMethod(k[F],B.padding),"sha3"!==B.name){var T=B.name+k[F];C.push(T),S[T]=S[N]}}function R(t,e,r){this.blocks=[],this.s=[],this.padding=e,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}function P(t,e,r){R.call(this,t,e,r)}R.prototype.update=function(t){if(this.finalized)throw new Error("finalize already called");var e,r=typeof t;if("string"!==r){if("object"!==r)throw new Error(i);if(null===t)throw new Error(i);if(l&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||l&&ArrayBuffer.isView(t)))throw new Error(i);e=!0}for(var n,o,s=this.blocks,a=this.byteCount,u=t.length,h=this.blockCount,f=0,c=this.s;f<u;){if(this.reset)for(this.reset=!1,s[0]=this.block,n=1;n<h+1;++n)s[n]=0;if(e)for(n=this.start;f<u&&n<a;++f)s[n>>2]|=t[f]<<d[3&n++];else for(n=this.start;f<u&&n<a;++f)(o=t.charCodeAt(f))<128?s[n>>2]|=o<<d[3&n++]:o<2048?(s[n>>2]|=(192|o>>6)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):o<55296||o>=57344?(s[n>>2]|=(224|o>>12)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]):(o=65536+((1023&o)<<10|1023&t.charCodeAt(++f)),s[n>>2]|=(240|o>>18)<<d[3&n++],s[n>>2]|=(128|o>>12&63)<<d[3&n++],s[n>>2]|=(128|o>>6&63)<<d[3&n++],s[n>>2]|=(128|63&o)<<d[3&n++]);if(this.lastByteIndex=n,n>=a){for(this.start=n-a,this.block=s[h],n=0;n<h;++n)c[n]^=s[n];O(c),this.reset=!0}else this.start=n}return this},R.prototype.encode=function(t,e){var r=255&t,n=1,i=[r];for(r=255&(t>>=8);r>0;)i.unshift(r),r=255&(t>>=8),++n;return e?i.push(n):i.unshift(n),this.update(i),i.length},R.prototype.encodeString=function(t){var e,r=typeof t;if("string"!==r){if("object"!==r)throw new Error(i);if(null===t)throw new Error(i);if(l&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||l&&ArrayBuffer.isView(t)))throw new Error(i);e=!0}var n=0,o=t.length;if(e)n=o;else for(var s=0;s<t.length;++s){var a=t.charCodeAt(s);a<128?n+=1:a<2048?n+=2:a<55296||a>=57344?n+=3:(a=65536+((1023&a)<<10|1023&t.charCodeAt(++s)),n+=4)}return n+=this.encode(8*n),this.update(t),n},R.prototype.bytepad=function(t,e){for(var r=this.encode(e),n=0;n<t.length;++n)r+=this.encodeString(t[n]);var i=e-r%e,o=[];return o.length=i,this.update(o),this},R.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex,r=this.blockCount,n=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[r],e=1;e<r+1;++e)t[e]=0;for(t[r-1]|=2147483648,e=0;e<r;++e)n[e]^=t[e];O(n)}},R.prototype.toString=R.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a="";s<n;){for(o=0;o<e&&s<n;++o,++s)t=r[o],a+=f[t>>4&15]+f[15&t]+f[t>>12&15]+f[t>>8&15]+f[t>>20&15]+f[t>>16&15]+f[t>>28&15]+f[t>>24&15];s%e==0&&(O(r),o=0)}return i&&(t=r[o],a+=f[t>>4&15]+f[15&t],i>1&&(a+=f[t>>12&15]+f[t>>8&15]),i>2&&(a+=f[t>>20&15]+f[t>>16&15])),a},R.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;t=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var u=new Uint32Array(t);s<n;){for(o=0;o<e&&s<n;++o,++s)u[s]=r[o];s%e==0&&O(r)}return i&&(u[o]=r[o],t=t.slice(0,a)),t},R.prototype.buffer=R.prototype.arrayBuffer,R.prototype.digest=R.prototype.array=function(){this.finalize();for(var t,e,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,u=[];a<i;){for(s=0;s<r&&a<i;++s,++a)t=a<<2,e=n[s],u[t]=255&e,u[t+1]=e>>8&255,u[t+2]=e>>16&255,u[t+3]=e>>24&255;a%r==0&&O(n)}return o&&(t=a<<2,e=n[s],u[t]=255&e,o>1&&(u[t+1]=e>>8&255),o>2&&(u[t+2]=e>>16&255)),u},P.prototype=new R,P.prototype.finalize=function(){return this.encode(this.outputBits,!0),R.prototype.finalize.call(this)};var O=function(t){var e,r,n,i,o,s,a,u,h,l,f,c,d,m,g,y,v,w,b,A,M,I,E,_,S,C,x,B,k,F,N,T,R,P,O,U,D,q,L,Q,j,z,K,H,G,V,W,J,Z,Y,X,$,tt,et,rt,nt,it,ot,st,at,ut,ht,lt;for(n=0;n<48;n+=2)i=t[0]^t[10]^t[20]^t[30]^t[40],o=t[1]^t[11]^t[21]^t[31]^t[41],s=t[2]^t[12]^t[22]^t[32]^t[42],a=t[3]^t[13]^t[23]^t[33]^t[43],u=t[4]^t[14]^t[24]^t[34]^t[44],h=t[5]^t[15]^t[25]^t[35]^t[45],l=t[6]^t[16]^t[26]^t[36]^t[46],f=t[7]^t[17]^t[27]^t[37]^t[47],e=(c=t[8]^t[18]^t[28]^t[38]^t[48])^(s<<1|a>>>31),r=(d=t[9]^t[19]^t[29]^t[39]^t[49])^(a<<1|s>>>31),t[0]^=e,t[1]^=r,t[10]^=e,t[11]^=r,t[20]^=e,t[21]^=r,t[30]^=e,t[31]^=r,t[40]^=e,t[41]^=r,e=i^(u<<1|h>>>31),r=o^(h<<1|u>>>31),t[2]^=e,t[3]^=r,t[12]^=e,t[13]^=r,t[22]^=e,t[23]^=r,t[32]^=e,t[33]^=r,t[42]^=e,t[43]^=r,e=s^(l<<1|f>>>31),r=a^(f<<1|l>>>31),t[4]^=e,t[5]^=r,t[14]^=e,t[15]^=r,t[24]^=e,t[25]^=r,t[34]^=e,t[35]^=r,t[44]^=e,t[45]^=r,e=u^(c<<1|d>>>31),r=h^(d<<1|c>>>31),t[6]^=e,t[7]^=r,t[16]^=e,t[17]^=r,t[26]^=e,t[27]^=r,t[36]^=e,t[37]^=r,t[46]^=e,t[47]^=r,e=l^(i<<1|o>>>31),r=f^(o<<1|i>>>31),t[8]^=e,t[9]^=r,t[18]^=e,t[19]^=r,t[28]^=e,t[29]^=r,t[38]^=e,t[39]^=r,t[48]^=e,t[49]^=r,m=t[0],g=t[1],V=t[11]<<4|t[10]>>>28,W=t[10]<<4|t[11]>>>28,B=t[20]<<3|t[21]>>>29,k=t[21]<<3|t[20]>>>29,at=t[31]<<9|t[30]>>>23,ut=t[30]<<9|t[31]>>>23,z=t[40]<<18|t[41]>>>14,K=t[41]<<18|t[40]>>>14,P=t[2]<<1|t[3]>>>31,O=t[3]<<1|t[2]>>>31,y=t[13]<<12|t[12]>>>20,v=t[12]<<12|t[13]>>>20,J=t[22]<<10|t[23]>>>22,Z=t[23]<<10|t[22]>>>22,F=t[33]<<13|t[32]>>>19,N=t[32]<<13|t[33]>>>19,ht=t[42]<<2|t[43]>>>30,lt=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,rt=t[4]<<30|t[5]>>>2,U=t[14]<<6|t[15]>>>26,D=t[15]<<6|t[14]>>>26,w=t[25]<<11|t[24]>>>21,b=t[24]<<11|t[25]>>>21,Y=t[34]<<15|t[35]>>>17,X=t[35]<<15|t[34]>>>17,T=t[45]<<29|t[44]>>>3,R=t[44]<<29|t[45]>>>3,_=t[6]<<28|t[7]>>>4,S=t[7]<<28|t[6]>>>4,nt=t[17]<<23|t[16]>>>9,it=t[16]<<23|t[17]>>>9,q=t[26]<<25|t[27]>>>7,L=t[27]<<25|t[26]>>>7,A=t[36]<<21|t[37]>>>11,M=t[37]<<21|t[36]>>>11,$=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,H=t[8]<<27|t[9]>>>5,G=t[9]<<27|t[8]>>>5,C=t[18]<<20|t[19]>>>12,x=t[19]<<20|t[18]>>>12,ot=t[29]<<7|t[28]>>>25,st=t[28]<<7|t[29]>>>25,Q=t[38]<<8|t[39]>>>24,j=t[39]<<8|t[38]>>>24,I=t[48]<<14|t[49]>>>18,E=t[49]<<14|t[48]>>>18,t[0]=m^~y&w,t[1]=g^~v&b,t[10]=_^~C&B,t[11]=S^~x&k,t[20]=P^~U&q,t[21]=O^~D&L,t[30]=H^~V&J,t[31]=G^~W&Z,t[40]=et^~nt&ot,t[41]=rt^~it&st,t[2]=y^~w&A,t[3]=v^~b&M,t[12]=C^~B&F,t[13]=x^~k&N,t[22]=U^~q&Q,t[23]=D^~L&j,t[32]=V^~J&Y,t[33]=W^~Z&X,t[42]=nt^~ot&at,t[43]=it^~st&ut,t[4]=w^~A&I,t[5]=b^~M&E,t[14]=B^~F&T,t[15]=k^~N&R,t[24]=q^~Q&z,t[25]=L^~j&K,t[34]=J^~Y&$,t[35]=Z^~X&tt,t[44]=ot^~at&ht,t[45]=st^~ut&lt,t[6]=A^~I&m,t[7]=M^~E&g,t[16]=F^~T&_,t[17]=N^~R&S,t[26]=Q^~z&P,t[27]=j^~K&O,t[36]=Y^~$&H,t[37]=X^~tt&G,t[46]=at^~ht&et,t[47]=ut^~lt&rt,t[8]=I^~m&y,t[9]=E^~g&v,t[18]=T^~_&C,t[19]=R^~S&x,t[28]=z^~P&U,t[29]=K^~O&D,t[38]=$^~H&V,t[39]=tt^~G&W,t[48]=ht^~et&nt,t[49]=lt^~rt&it,t[0]^=p[n],t[1]^=p[n+1]};if(u)t.exports=S;else{for(x=0;x<C.length;++x)s[C[x]]=S[C[x]];h&&(void 0===(n=function(){return S}.call(e,r,e,t))||(t.exports=n))}}()},7824:t=>{var e=1e3,r=60*e,n=60*r,i=24*n;function o(t,e,r,n){var i=e>=1.5*r;return Math.round(t/r)+" "+n+(i?"s":"")}t.exports=function(t,s){s=s||{};var a,u,h=typeof t;if("string"===h&&t.length>0)return function(t){if(!((t=String(t)).length>100)){var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(o){var s=parseFloat(o[1]);switch((o[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*s;case"weeks":case"week":case"w":return 6048e5*s;case"days":case"day":case"d":return s*i;case"hours":case"hour":case"hrs":case"hr":case"h":return s*n;case"minutes":case"minute":case"mins":case"min":case"m":return s*r;case"seconds":case"second":case"secs":case"sec":case"s":return s*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}}}(t);if("number"===h&&isFinite(t))return s.long?(a=t,(u=Math.abs(a))>=i?o(a,u,i,"day"):u>=n?o(a,u,n,"hour"):u>=r?o(a,u,r,"minute"):u>=e?o(a,u,e,"second"):a+" ms"):function(t){var o=Math.abs(t);return o>=i?Math.round(t/i)+"d":o>=n?Math.round(t/n)+"h":o>=r?Math.round(t/r)+"m":o>=e?Math.round(t/e)+"s":t+"ms"}(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))}},9204:t=>{function e(t,e){if(!t)throw new Error(e||"AssertionError")}e.notEqual=function(t,r,n){e(t!=r,n)},e.notOk=function(t,r){e(!t,r)},e.equal=function(t,r,n){e(t==r,n)},e.ok=e,t.exports=e},9968:function(t,e,r){(function(){var t,n,i,o,s,a,u,h,l,f,c,d,p,m,g=function(t,e){for(var r in e)y.call(e,r)&&(t[r]=e[r]);function n(){this.constructor=t}return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},y={}.hasOwnProperty;p=r(5622),d=r(5747),c=r(8614),m=r(902).sync,n="---.EMPTY_STRING.---",u=function(t){var e,r,n,i,o;for(o=[],e=0,r=(i=d.readdirSync(t)).length;e<r;e++)n=i[e],o.push(l(p.join(t,n)));return o},l=function(t){return d.statSync(t).isDirectory()?(u(t),d.rmdirSync(t)):d.unlinkSync(t)},h=function(t){return""===t?n:t.toString()},s=function(t){function e(t){this.message=null!=t?t:"Unknown error.",e.__super__.constructor.call(this),null!=Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name}return g(e,t),e.prototype.toString=function(){return this.name+": "+this.message},e}(Error),a=function(t,e,r,n,i){this.key=t,this.oldValue=e,this.newValue=r,this.url=n,this.storageArea=null!=i?i:"localStorage"},o=function t(e,r){if(this.key=e,this.index=r,!(this instanceof t))return new t(this.key,this.index)},f=function(){var t;return(t=function(){}).prototype=Object.create(null),new t},t=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return g(e,t),e.prototype.setItem=function(t,r){var n;return n=JSON.stringify(r),e.__super__.setItem.call(this,t,n)},e.prototype.getItem=function(t){return JSON.parse(e.__super__.getItem.call(this,t))},e}(i=function(t){var e;function r(t,n){var i,o;return this._location=t,this.quota=null!=n?n:5242880,r.__super__.constructor.call(this),this instanceof r?(this._location=p.resolve(this._location),null!=e[this._location]?e[this._location]:(this.length=0,this._bytesInUse=0,this._keys=[],this._metaKeyMap=f(),this._eventUrl="pid:"+process.pid,this._init(),this._QUOTA_EXCEEDED_ERR=s,"undefined"!=typeof Proxy&&null!==Proxy?(i={set:(o=this,function(t,e,r){return null!=o[e]?o[e]=r:o.setItem(e,r)}),get:function(t){return function(e,r){return null!=t[r]?t[r]:t.getItem(r)}}(this)},e[this._location]=new Proxy(this,i),e[this._location]):(e[this._location]=this,e[this._location]))):new r(this._location,this.quota)}return g(r,t),e={},r.prototype._init=function(){var t,e,r,n,i,s,a,u,h;try{if(null!=(h=d.statSync(this._location))&&!h.isDirectory())throw new Error("A file exists at the location '"+this._location+"' when trying to create/open localStorage");for(this._bytesInUse=0,this.length=0,r=d.readdirSync(this._location),s=i=0,u=r.length;i<u;s=++i)a=r[s],e=decodeURIComponent(a),this._keys.push(e),t=new o(a,s),this._metaKeyMap[e]=t,null!=(null!=(h=this._getStat(a))?h.size:void 0)&&(t.size=h.size,this._bytesInUse+=h.size);this.length=r.length}catch(t){if("ENOENT"!==(n=t).code)throw n;try{d.mkdirSync(this._location,{recursive:!0})}catch(t){if("EEXIST"!==(n=t).code)throw n}}},r.prototype.setItem=function(t,e){var r,n,i,u,l,f,d,g,y,v;if(g=null,(l=c.EventEmitter.listenerCount(this,"storage"))&&(g=this.getItem(t)),t=h(t),r=encodeURIComponent(t),u=p.join(this._location,r),v=(y=e.toString()).length,d=(i=!!(f=this._metaKeyMap[t]))?f.size:0,this._bytesInUse-d+v>this.quota)throw new s;if(m(u,y,"utf8"),i||((f=new o(r,this._keys.push(t)-1)).size=v,this._metaKeyMap[t]=f,this.length+=1,this._bytesInUse+=v),l)return n=new a(t,g,e,this._eventUrl),this.emit("storage",n)},r.prototype.getItem=function(t){var e,r;return t=h(t),(r=this._metaKeyMap[t])?(e=p.join(this._location,r.key),d.readFileSync(e,"utf8")):null},r.prototype._getStat=function(t){var e;t=h(t),e=p.join(this._location,encodeURIComponent(t));try{return d.statSync(e)}catch(t){return null}},r.prototype.removeItem=function(t){var e,r,n,i,o,s,u,f;if(t=h(t),s=this._metaKeyMap[t]){for(i in u=null,(n=c.EventEmitter.listenerCount(this,"storage"))&&(u=this.getItem(t)),delete this._metaKeyMap[t],this.length-=1,this._bytesInUse-=s.size,r=p.join(this._location,s.key),this._keys.splice(s.index,1),f=this._metaKeyMap)f[i],(o=this._metaKeyMap[i]).index>s.index&&(o.index-=1);if(l(r),n)return e=new a(t,u,null,this._eventUrl),this.emit("storage",e)}},r.prototype.key=function(t){var e;return(e=this._keys[t])===n?"":e},r.prototype.clear=function(){var t;if(u(this._location),this._metaKeyMap=f(),this._keys=[],this.length=0,this._bytesInUse=0,c.EventEmitter.listenerCount(this,"storage"))return t=new a(null,null,null,this._eventUrl),this.emit("storage",t)},r.prototype._getBytesInUse=function(){return this._bytesInUse},r.prototype._deleteLocation=function(){return delete e[this._location],l(this._location),this._metaKeyMap={},this._keys=[],this.length=0,this._bytesInUse=0},r}(c.EventEmitter)),e.LocalStorage=i,e.JSONStorage=t,e.QUOTA_EXCEEDED_ERR=s}).call(this)},5033:function(t,e,r){!function(t,e){"use strict";function n(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function o(t,e,r){if(o.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var s;"object"==typeof t?t.exports=o:e.BN=o,o.BN=o,o.wordSize=26;try{s=r(4293).Buffer}catch(t){}function a(t,e,r){for(var n=0,i=Math.min(t.length,r),o=e;o<i;o++){var s=t.charCodeAt(o)-48;n<<=4,n|=s>=49&&s<=54?s-49+10:s>=17&&s<=22?s-17+10:15&s}return n}function u(t,e,r,n){for(var i=0,o=Math.min(t.length,r),s=e;s<o;s++){var a=t.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}o.isBN=function(t){return t instanceof o||null!==t&&"object"==typeof t&&t.constructor.wordSize===o.wordSize&&Array.isArray(t.words)},o.max=function(t,e){return t.cmp(e)>0?t:e},o.min=function(t,e){return t.cmp(e)<0?t:e},o.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),n(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(n(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},o.prototype._initArray=function(t,e,r){if(n("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===r)for(i=t.length-1,o=0;i>=0;i-=3)s=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===r)for(i=0,o=0;i<t.length;i+=3)s=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},o.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,o=0;for(r=t.length-6,n=0;r>=e;r-=6)i=a(t,r,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303,(o+=24)>=26&&(o-=26,n++);r+6!==e&&(i=a(t,e,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303),this.strip()},o.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var o=t.length-r,s=o%n,a=Math.min(o,o-s)+r,h=0,l=r;l<a;l+=n)h=u(t,l,l+n,e),this.imuln(i),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==s){var f=1;for(h=u(t,l,t.length,e),l=0;l<s;l++)f*=e;this.imuln(f),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},o.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},o.prototype.clone=function(){var t=new o(null);return this.copy(t),t},o.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],f=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],o=0|e.words[0],s=i*o,a=67108863&s,u=s/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var l=u>>>26,f=67108863&u,c=Math.min(h,e.length-1),d=Math.max(0,h-t.length+1);d<=c;d++){var p=h-d|0;l+=(s=(i=0|t.words[p])*(o=0|e.words[d])+f)/67108864|0,f=67108863&s}r.words[h]=0|f,u=0|l}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}o.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],u=(16777215&(a<<i|o)).toString(16);r=0!=(o=a>>>24-i&16777215)||s!==this.length-1?h[6-u.length]+u+r:u+r,(i+=2)>=26&&(i-=26,s--)}for(0!==o&&(r=o.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var c=l[t],d=f[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(d).toString(t);r=(p=p.idivn(d)).isZero()?m+r:h[c-m.length]+m+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(t,e){return n(void 0!==s),this.toArrayLike(s,t,e)},o.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},o.prototype.toArrayLike=function(t,e,r){var i=this.byteLength(),o=r||Math.max(1,i);n(i<=o,"byte array longer than desired length"),n(o>0,"Requested array length <= 0"),this.strip();var s,a,u="le"===e,h=new t(o),l=this.clone();if(u){for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[a]=s;for(;a<o;a++)h[a]=0}else{for(a=0;a<o-i;a++)h[a]=0;for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[o-a-1]=s}return h},Math.clz32?o.prototype._countBits=function(t){return 32-Math.clz32(t)}:o.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},o.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},o.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},o.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},o.prototype.ior=function(t){return n(0==(this.negative|t.negative)),this.iuor(t)},o.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},o.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},o.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},o.prototype.iand=function(t){return n(0==(this.negative|t.negative)),this.iuand(t)},o.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},o.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},o.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},o.prototype.ixor=function(t){return n(0==(this.negative|t.negative)),this.iuxor(t)},o.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},o.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},o.prototype.inotn=function(t){n("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return r>0&&(this.words[i]=~this.words[i]&67108863>>26-r),this.strip()},o.prototype.notn=function(t){return this.clone().inotn(t)},o.prototype.setn=function(t,e){n("number"==typeof t&&t>=0);var r=t/26|0,i=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<i:this.words[r]&~(1<<i),this.strip()},o.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,o=0;o<n.length;o++)e=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&e,i=e>>>26;for(;0!==i&&o<r.length;o++)e=(0|r.words[o])+i,this.words[o]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},o.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},o.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var o=0,s=0;s<n.length;s++)o=(e=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&e;for(;0!==o&&s<r.length;s++)o=(e=(0|r.words[s])+o)>>26,this.words[s]=67108863&e;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,e,r){var n,i,o,s=t.words,a=e.words,u=r.words,h=0,l=0|s[0],f=8191&l,c=l>>>13,d=0|s[1],p=8191&d,m=d>>>13,g=0|s[2],y=8191&g,v=g>>>13,w=0|s[3],b=8191&w,A=w>>>13,M=0|s[4],I=8191&M,E=M>>>13,_=0|s[5],S=8191&_,C=_>>>13,x=0|s[6],B=8191&x,k=x>>>13,F=0|s[7],N=8191&F,T=F>>>13,R=0|s[8],P=8191&R,O=R>>>13,U=0|s[9],D=8191&U,q=U>>>13,L=0|a[0],Q=8191&L,j=L>>>13,z=0|a[1],K=8191&z,H=z>>>13,G=0|a[2],V=8191&G,W=G>>>13,J=0|a[3],Z=8191&J,Y=J>>>13,X=0|a[4],$=8191&X,tt=X>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],ot=8191&it,st=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,lt=0|a[8],ft=8191&lt,ct=lt>>>13,dt=0|a[9],pt=8191&dt,mt=dt>>>13;r.negative=t.negative^e.negative,r.length=19;var gt=(h+(n=Math.imul(f,Q))|0)+((8191&(i=(i=Math.imul(f,j))+Math.imul(c,Q)|0))<<13)|0;h=((o=Math.imul(c,j))+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(p,Q),i=(i=Math.imul(p,j))+Math.imul(m,Q)|0,o=Math.imul(m,j);var yt=(h+(n=n+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,H)|0)+Math.imul(c,K)|0))<<13)|0;h=((o=o+Math.imul(c,H)|0)+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(y,Q),i=(i=Math.imul(y,j))+Math.imul(v,Q)|0,o=Math.imul(v,j),n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,H)|0)+Math.imul(m,K)|0,o=o+Math.imul(m,H)|0;var vt=(h+(n=n+Math.imul(f,V)|0)|0)+((8191&(i=(i=i+Math.imul(f,W)|0)+Math.imul(c,V)|0))<<13)|0;h=((o=o+Math.imul(c,W)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(b,Q),i=(i=Math.imul(b,j))+Math.imul(A,Q)|0,o=Math.imul(A,j),n=n+Math.imul(y,K)|0,i=(i=i+Math.imul(y,H)|0)+Math.imul(v,K)|0,o=o+Math.imul(v,H)|0,n=n+Math.imul(p,V)|0,i=(i=i+Math.imul(p,W)|0)+Math.imul(m,V)|0,o=o+Math.imul(m,W)|0;var wt=(h+(n=n+Math.imul(f,Z)|0)|0)+((8191&(i=(i=i+Math.imul(f,Y)|0)+Math.imul(c,Z)|0))<<13)|0;h=((o=o+Math.imul(c,Y)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(I,Q),i=(i=Math.imul(I,j))+Math.imul(E,Q)|0,o=Math.imul(E,j),n=n+Math.imul(b,K)|0,i=(i=i+Math.imul(b,H)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,H)|0,n=n+Math.imul(y,V)|0,i=(i=i+Math.imul(y,W)|0)+Math.imul(v,V)|0,o=o+Math.imul(v,W)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,Y)|0)+Math.imul(m,Z)|0,o=o+Math.imul(m,Y)|0;var bt=(h+(n=n+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,tt)|0)+Math.imul(c,$)|0))<<13)|0;h=((o=o+Math.imul(c,tt)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(S,Q),i=(i=Math.imul(S,j))+Math.imul(C,Q)|0,o=Math.imul(C,j),n=n+Math.imul(I,K)|0,i=(i=i+Math.imul(I,H)|0)+Math.imul(E,K)|0,o=o+Math.imul(E,H)|0,n=n+Math.imul(b,V)|0,i=(i=i+Math.imul(b,W)|0)+Math.imul(A,V)|0,o=o+Math.imul(A,W)|0,n=n+Math.imul(y,Z)|0,i=(i=i+Math.imul(y,Y)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,Y)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,tt)|0;var At=(h+(n=n+Math.imul(f,rt)|0)|0)+((8191&(i=(i=i+Math.imul(f,nt)|0)+Math.imul(c,rt)|0))<<13)|0;h=((o=o+Math.imul(c,nt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(B,Q),i=(i=Math.imul(B,j))+Math.imul(k,Q)|0,o=Math.imul(k,j),n=n+Math.imul(S,K)|0,i=(i=i+Math.imul(S,H)|0)+Math.imul(C,K)|0,o=o+Math.imul(C,H)|0,n=n+Math.imul(I,V)|0,i=(i=i+Math.imul(I,W)|0)+Math.imul(E,V)|0,o=o+Math.imul(E,W)|0,n=n+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,Y)|0)+Math.imul(A,Z)|0,o=o+Math.imul(A,Y)|0,n=n+Math.imul(y,$)|0,i=(i=i+Math.imul(y,tt)|0)+Math.imul(v,$)|0,o=o+Math.imul(v,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,o=o+Math.imul(m,nt)|0;var Mt=(h+(n=n+Math.imul(f,ot)|0)|0)+((8191&(i=(i=i+Math.imul(f,st)|0)+Math.imul(c,ot)|0))<<13)|0;h=((o=o+Math.imul(c,st)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(N,Q),i=(i=Math.imul(N,j))+Math.imul(T,Q)|0,o=Math.imul(T,j),n=n+Math.imul(B,K)|0,i=(i=i+Math.imul(B,H)|0)+Math.imul(k,K)|0,o=o+Math.imul(k,H)|0,n=n+Math.imul(S,V)|0,i=(i=i+Math.imul(S,W)|0)+Math.imul(C,V)|0,o=o+Math.imul(C,W)|0,n=n+Math.imul(I,Z)|0,i=(i=i+Math.imul(I,Y)|0)+Math.imul(E,Z)|0,o=o+Math.imul(E,Y)|0,n=n+Math.imul(b,$)|0,i=(i=i+Math.imul(b,tt)|0)+Math.imul(A,$)|0,o=o+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,i=(i=i+Math.imul(y,nt)|0)+Math.imul(v,rt)|0,o=o+Math.imul(v,nt)|0,n=n+Math.imul(p,ot)|0,i=(i=i+Math.imul(p,st)|0)+Math.imul(m,ot)|0,o=o+Math.imul(m,st)|0;var It=(h+(n=n+Math.imul(f,ut)|0)|0)+((8191&(i=(i=i+Math.imul(f,ht)|0)+Math.imul(c,ut)|0))<<13)|0;h=((o=o+Math.imul(c,ht)|0)+(i>>>13)|0)+(It>>>26)|0,It&=67108863,n=Math.imul(P,Q),i=(i=Math.imul(P,j))+Math.imul(O,Q)|0,o=Math.imul(O,j),n=n+Math.imul(N,K)|0,i=(i=i+Math.imul(N,H)|0)+Math.imul(T,K)|0,o=o+Math.imul(T,H)|0,n=n+Math.imul(B,V)|0,i=(i=i+Math.imul(B,W)|0)+Math.imul(k,V)|0,o=o+Math.imul(k,W)|0,n=n+Math.imul(S,Z)|0,i=(i=i+Math.imul(S,Y)|0)+Math.imul(C,Z)|0,o=o+Math.imul(C,Y)|0,n=n+Math.imul(I,$)|0,i=(i=i+Math.imul(I,tt)|0)+Math.imul(E,$)|0,o=o+Math.imul(E,tt)|0,n=n+Math.imul(b,rt)|0,i=(i=i+Math.imul(b,nt)|0)+Math.imul(A,rt)|0,o=o+Math.imul(A,nt)|0,n=n+Math.imul(y,ot)|0,i=(i=i+Math.imul(y,st)|0)+Math.imul(v,ot)|0,o=o+Math.imul(v,st)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,o=o+Math.imul(m,ht)|0;var Et=(h+(n=n+Math.imul(f,ft)|0)|0)+((8191&(i=(i=i+Math.imul(f,ct)|0)+Math.imul(c,ft)|0))<<13)|0;h=((o=o+Math.imul(c,ct)|0)+(i>>>13)|0)+(Et>>>26)|0,Et&=67108863,n=Math.imul(D,Q),i=(i=Math.imul(D,j))+Math.imul(q,Q)|0,o=Math.imul(q,j),n=n+Math.imul(P,K)|0,i=(i=i+Math.imul(P,H)|0)+Math.imul(O,K)|0,o=o+Math.imul(O,H)|0,n=n+Math.imul(N,V)|0,i=(i=i+Math.imul(N,W)|0)+Math.imul(T,V)|0,o=o+Math.imul(T,W)|0,n=n+Math.imul(B,Z)|0,i=(i=i+Math.imul(B,Y)|0)+Math.imul(k,Z)|0,o=o+Math.imul(k,Y)|0,n=n+Math.imul(S,$)|0,i=(i=i+Math.imul(S,tt)|0)+Math.imul(C,$)|0,o=o+Math.imul(C,tt)|0,n=n+Math.imul(I,rt)|0,i=(i=i+Math.imul(I,nt)|0)+Math.imul(E,rt)|0,o=o+Math.imul(E,nt)|0,n=n+Math.imul(b,ot)|0,i=(i=i+Math.imul(b,st)|0)+Math.imul(A,ot)|0,o=o+Math.imul(A,st)|0,n=n+Math.imul(y,ut)|0,i=(i=i+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,o=o+Math.imul(v,ht)|0,n=n+Math.imul(p,ft)|0,i=(i=i+Math.imul(p,ct)|0)+Math.imul(m,ft)|0,o=o+Math.imul(m,ct)|0;var _t=(h+(n=n+Math.imul(f,pt)|0)|0)+((8191&(i=(i=i+Math.imul(f,mt)|0)+Math.imul(c,pt)|0))<<13)|0;h=((o=o+Math.imul(c,mt)|0)+(i>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(D,K),i=(i=Math.imul(D,H))+Math.imul(q,K)|0,o=Math.imul(q,H),n=n+Math.imul(P,V)|0,i=(i=i+Math.imul(P,W)|0)+Math.imul(O,V)|0,o=o+Math.imul(O,W)|0,n=n+Math.imul(N,Z)|0,i=(i=i+Math.imul(N,Y)|0)+Math.imul(T,Z)|0,o=o+Math.imul(T,Y)|0,n=n+Math.imul(B,$)|0,i=(i=i+Math.imul(B,tt)|0)+Math.imul(k,$)|0,o=o+Math.imul(k,tt)|0,n=n+Math.imul(S,rt)|0,i=(i=i+Math.imul(S,nt)|0)+Math.imul(C,rt)|0,o=o+Math.imul(C,nt)|0,n=n+Math.imul(I,ot)|0,i=(i=i+Math.imul(I,st)|0)+Math.imul(E,ot)|0,o=o+Math.imul(E,st)|0,n=n+Math.imul(b,ut)|0,i=(i=i+Math.imul(b,ht)|0)+Math.imul(A,ut)|0,o=o+Math.imul(A,ht)|0,n=n+Math.imul(y,ft)|0,i=(i=i+Math.imul(y,ct)|0)+Math.imul(v,ft)|0,o=o+Math.imul(v,ct)|0;var St=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((o=o+Math.imul(m,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,W))+Math.imul(q,V)|0,o=Math.imul(q,W),n=n+Math.imul(P,Z)|0,i=(i=i+Math.imul(P,Y)|0)+Math.imul(O,Z)|0,o=o+Math.imul(O,Y)|0,n=n+Math.imul(N,$)|0,i=(i=i+Math.imul(N,tt)|0)+Math.imul(T,$)|0,o=o+Math.imul(T,tt)|0,n=n+Math.imul(B,rt)|0,i=(i=i+Math.imul(B,nt)|0)+Math.imul(k,rt)|0,o=o+Math.imul(k,nt)|0,n=n+Math.imul(S,ot)|0,i=(i=i+Math.imul(S,st)|0)+Math.imul(C,ot)|0,o=o+Math.imul(C,st)|0,n=n+Math.imul(I,ut)|0,i=(i=i+Math.imul(I,ht)|0)+Math.imul(E,ut)|0,o=o+Math.imul(E,ht)|0,n=n+Math.imul(b,ft)|0,i=(i=i+Math.imul(b,ct)|0)+Math.imul(A,ft)|0,o=o+Math.imul(A,ct)|0;var Ct=(h+(n=n+Math.imul(y,pt)|0)|0)+((8191&(i=(i=i+Math.imul(y,mt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((o=o+Math.imul(v,mt)|0)+(i>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,n=Math.imul(D,Z),i=(i=Math.imul(D,Y))+Math.imul(q,Z)|0,o=Math.imul(q,Y),n=n+Math.imul(P,$)|0,i=(i=i+Math.imul(P,tt)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,tt)|0,n=n+Math.imul(N,rt)|0,i=(i=i+Math.imul(N,nt)|0)+Math.imul(T,rt)|0,o=o+Math.imul(T,nt)|0,n=n+Math.imul(B,ot)|0,i=(i=i+Math.imul(B,st)|0)+Math.imul(k,ot)|0,o=o+Math.imul(k,st)|0,n=n+Math.imul(S,ut)|0,i=(i=i+Math.imul(S,ht)|0)+Math.imul(C,ut)|0,o=o+Math.imul(C,ht)|0,n=n+Math.imul(I,ft)|0,i=(i=i+Math.imul(I,ct)|0)+Math.imul(E,ft)|0,o=o+Math.imul(E,ct)|0;var xt=(h+(n=n+Math.imul(b,pt)|0)|0)+((8191&(i=(i=i+Math.imul(b,mt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((o=o+Math.imul(A,mt)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(D,$),i=(i=Math.imul(D,tt))+Math.imul(q,$)|0,o=Math.imul(q,tt),n=n+Math.imul(P,rt)|0,i=(i=i+Math.imul(P,nt)|0)+Math.imul(O,rt)|0,o=o+Math.imul(O,nt)|0,n=n+Math.imul(N,ot)|0,i=(i=i+Math.imul(N,st)|0)+Math.imul(T,ot)|0,o=o+Math.imul(T,st)|0,n=n+Math.imul(B,ut)|0,i=(i=i+Math.imul(B,ht)|0)+Math.imul(k,ut)|0,o=o+Math.imul(k,ht)|0,n=n+Math.imul(S,ft)|0,i=(i=i+Math.imul(S,ct)|0)+Math.imul(C,ft)|0,o=o+Math.imul(C,ct)|0;var Bt=(h+(n=n+Math.imul(I,pt)|0)|0)+((8191&(i=(i=i+Math.imul(I,mt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((o=o+Math.imul(E,mt)|0)+(i>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(D,rt),i=(i=Math.imul(D,nt))+Math.imul(q,rt)|0,o=Math.imul(q,nt),n=n+Math.imul(P,ot)|0,i=(i=i+Math.imul(P,st)|0)+Math.imul(O,ot)|0,o=o+Math.imul(O,st)|0,n=n+Math.imul(N,ut)|0,i=(i=i+Math.imul(N,ht)|0)+Math.imul(T,ut)|0,o=o+Math.imul(T,ht)|0,n=n+Math.imul(B,ft)|0,i=(i=i+Math.imul(B,ct)|0)+Math.imul(k,ft)|0,o=o+Math.imul(k,ct)|0;var kt=(h+(n=n+Math.imul(S,pt)|0)|0)+((8191&(i=(i=i+Math.imul(S,mt)|0)+Math.imul(C,pt)|0))<<13)|0;h=((o=o+Math.imul(C,mt)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(D,ot),i=(i=Math.imul(D,st))+Math.imul(q,ot)|0,o=Math.imul(q,st),n=n+Math.imul(P,ut)|0,i=(i=i+Math.imul(P,ht)|0)+Math.imul(O,ut)|0,o=o+Math.imul(O,ht)|0,n=n+Math.imul(N,ft)|0,i=(i=i+Math.imul(N,ct)|0)+Math.imul(T,ft)|0,o=o+Math.imul(T,ct)|0;var Ft=(h+(n=n+Math.imul(B,pt)|0)|0)+((8191&(i=(i=i+Math.imul(B,mt)|0)+Math.imul(k,pt)|0))<<13)|0;h=((o=o+Math.imul(k,mt)|0)+(i>>>13)|0)+(Ft>>>26)|0,Ft&=67108863,n=Math.imul(D,ut),i=(i=Math.imul(D,ht))+Math.imul(q,ut)|0,o=Math.imul(q,ht),n=n+Math.imul(P,ft)|0,i=(i=i+Math.imul(P,ct)|0)+Math.imul(O,ft)|0,o=o+Math.imul(O,ct)|0;var Nt=(h+(n=n+Math.imul(N,pt)|0)|0)+((8191&(i=(i=i+Math.imul(N,mt)|0)+Math.imul(T,pt)|0))<<13)|0;h=((o=o+Math.imul(T,mt)|0)+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(D,ft),i=(i=Math.imul(D,ct))+Math.imul(q,ft)|0,o=Math.imul(q,ct);var Tt=(h+(n=n+Math.imul(P,pt)|0)|0)+((8191&(i=(i=i+Math.imul(P,mt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((o=o+Math.imul(O,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Rt=(h+(n=Math.imul(D,pt))|0)+((8191&(i=(i=Math.imul(D,mt))+Math.imul(q,pt)|0))<<13)|0;return h=((o=Math.imul(q,mt))+(i>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,u[0]=gt,u[1]=yt,u[2]=vt,u[3]=wt,u[4]=bt,u[5]=At,u[6]=Mt,u[7]=It,u[8]=Et,u[9]=_t,u[10]=St,u[11]=Ct,u[12]=xt,u[13]=Bt,u[14]=kt,u[15]=Ft,u[16]=Nt,u[17]=Tt,u[18]=Rt,0!==h&&(u[19]=h,r.length++),r};function p(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(d=c),o.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,e):r<63?c(this,t,e):r<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,u=Math.min(o,e.length-1),h=Math.max(0,o-t.length+1);h<=u;h++){var l=o-h,f=(0|t.words[l])*(0|e.words[h]),c=67108863&f;a=67108863&(c=c+a|0),i+=(s=(s=s+(f/67108864|0)|0)+(c>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,t,e):p(this,t,e)},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=o.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},m.prototype.permute=function(t,e,r,n,i,o){for(var s=0;s<o;s++)n[s]=e[t[s]],i[s]=r[t[s]]},m.prototype.transform=function(t,e,r,n,i,o){this.permute(o,t,e,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),l=0;l<i;l+=a)for(var f=u,c=h,d=0;d<s;d++){var p=r[l+d],m=n[l+d],g=r[l+d+s],y=n[l+d+s],v=f*g-c*y;y=f*y+c*g,g=v,r[l+d]=p+g,n[l+d]=m+y,r[l+d+s]=p-g,n[l+d+s]=m-y,d!==a&&(v=u*f-h*c,c=u*c+h*f,f=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},m.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},m.prototype.convert13b=function(t,e,r,i){for(var o=0,s=0;s<e;s++)o+=0|t[s],r[2*s]=8191&o,o>>>=13,r[2*s+1]=8191&o,o>>>=13;for(s=2*e;s<i;++s)r[s]=0;n(0===o),n(0==(-8192&o))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),l=new Array(n),f=new Array(n),c=r.words;c.length=n,this.convert13b(t.words,t.length,s,n),this.convert13b(e.words,e.length,h,n),this.transform(s,o,a,u,n,i),this.transform(h,o,l,f,n,i);for(var d=0;d<n;d++){var p=a[d]*l[d]-u[d]*f[d];u[d]=a[d]*f[d]+u[d]*l[d],a[d]=p}return this.conjugate(a,u,n),this.transform(a,u,c,o,n,i),this.conjugate(c,o,n),this.normalize13b(c,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},o.prototype.mul=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},o.prototype.mulf=function(t){var e=new o(null);return e.words=new Array(this.length+t.length),p(this,t,e)},o.prototype.imul=function(t){return this.clone().mulTo(t,this)},o.prototype.imuln=function(t){n("number"==typeof t),n(t<67108864);for(var e=0,r=0;r<this.length;r++){var i=(0|this.words[r])*t,o=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=o>>>26,this.words[r]=67108863&o}return 0!==e&&(this.words[r]=e,this.length++),this},o.prototype.muln=function(t){return this.clone().imuln(t)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new o(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var i=r.sqr();n<e.length;n++,i=i.sqr())0!==e[n]&&(r=r.mul(i));return r},o.prototype.iushln=function(t){n("number"==typeof t&&t>=0);var e,r=t%26,i=(t-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var s=0;for(e=0;e<this.length;e++){var a=this.words[e]&o,u=(0|this.words[e])-a<<r;this.words[e]=u|s,s=a>>>26-r}s&&(this.words[e]=s,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},o.prototype.ishln=function(t){return n(0===this.negative),this.iushln(t)},o.prototype.iushrn=function(t,e,r){var i;n("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var o=t%26,s=Math.min((t-o)/26,this.length),a=67108863^67108863>>>o<<o,u=r;if(i-=s,i=Math.max(0,i),u){for(var h=0;h<s;h++)u.words[h]=this.words[h];u.length=s}if(0===s);else if(this.length>s)for(this.length-=s,h=0;h<this.length;h++)this.words[h]=this.words[h+s];else this.words[0]=0,this.length=1;var l=0;for(h=this.length-1;h>=0&&(0!==l||h>=i);h--){var f=0|this.words[h];this.words[h]=l<<26-o|f>>>o,l=f&a}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(t,e,r){return n(0===this.negative),this.iushrn(t,e,r)},o.prototype.shln=function(t){return this.clone().ishln(t)},o.prototype.ushln=function(t){return this.clone().iushln(t)},o.prototype.shrn=function(t){return this.clone().ishrn(t)},o.prototype.ushrn=function(t){return this.clone().iushrn(t)},o.prototype.testn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,i=1<<e;return!(this.length<=r||!(this.words[r]&i))},o.prototype.imaskn=function(t){n("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},o.prototype.maskn=function(t){return this.clone().imaskn(t)},o.prototype.iaddn=function(t){return n("number"==typeof t),n(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},o.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},o.prototype.isubn=function(t){if(n("number"==typeof t),n(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},o.prototype.addn=function(t){return this.clone().iaddn(t)},o.prototype.subn=function(t){return this.clone().isubn(t)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(t,e,r){var i,o,s=t.length+r;this._expand(s);var a=0;for(i=0;i<t.length;i++){o=(0|this.words[i+r])+a;var u=(0|t.words[i])*e;a=((o-=67108863&u)>>26)-(u/67108864|0),this.words[i+r]=67108863&o}for(;i<this.length-r;i++)a=(o=(0|this.words[i+r])+a)>>26,this.words[i+r]=67108863&o;if(0===a)return this.strip();for(n(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),i=t,s=0|i.words[i.length-1];0!=(r=26-this._countBits(s))&&(i=i.ushln(r),n.iushln(r),s=0|i.words[i.length-1]);var a,u=n.length-i.length;if("mod"!==e){(a=new o(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var l=n.clone()._ishlnsubmul(i,1,u);0===l.negative&&(n=l,a&&(a.words[u]=1));for(var f=u-1;f>=0;f--){var c=67108864*(0|n.words[i.length+f])+(0|n.words[i.length+f-1]);for(c=Math.min(c/s|0,67108863),n._ishlnsubmul(i,c,f);0!==n.negative;)c--,n.negative=0,n._ishlnsubmul(i,1,f),n.isZero()||(n.negative^=1);a&&(a.words[f]=c)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},o.prototype.divmod=function(t,e,r){return n(!t.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(i=a.div.neg()),"div"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.iadd(t)),{div:i,mod:s}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(i=a.div.neg()),{div:i,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(s=a.mod.neg(),r&&0!==s.negative&&s.isub(t)),{div:a.div,mod:s}):t.length>this.length||this.cmp(t)<0?{div:new o(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new o(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new o(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,s,a},o.prototype.div=function(t){return this.divmod(t,"div",!1).div},o.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},o.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},o.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},o.prototype.modn=function(t){n(t<=67108863);for(var e=(1<<26)%t,r=0,i=this.length-1;i>=0;i--)r=(e*r+(0|this.words[i]))%t;return r},o.prototype.idivn=function(t){n(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var i=(0|this.words[r])+67108864*e;this.words[r]=i/t|0,e=i%t}return this.strip()},o.prototype.divn=function(t){return this.clone().idivn(t)},o.prototype.egcd=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new o(1),s=new o(0),a=new o(0),u=new o(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var l=r.clone(),f=e.clone();!e.isZero();){for(var c=0,d=1;0==(e.words[0]&d)&&c<26;++c,d<<=1);if(c>0)for(e.iushrn(c);c-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(l),s.isub(f)),i.iushrn(1),s.iushrn(1);for(var p=0,m=1;0==(r.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(l),u.isub(f)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),i.isub(a),s.isub(u)):(r.isub(e),a.isub(i),u.isub(s))}return{a,b:u,gcd:r.iushln(h)}},o.prototype._invmp=function(t){n(0===t.negative),n(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,s=new o(1),a=new o(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,l=1;0==(e.words[0]&l)&&h<26;++h,l<<=1);if(h>0)for(e.iushrn(h);h-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);for(var f=0,c=1;0==(r.words[0]&c)&&f<26;++f,c<<=1);if(f>0)for(r.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),s.isub(a)):(r.isub(e),a.isub(s))}return(i=0===e.cmpn(1)?s:a).cmpn(0)<0&&i.iadd(t),i},o.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var o=e;e=r,r=o}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},o.prototype.invm=function(t){return this.egcd(t).a.umod(t)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(t){return this.words[0]&t},o.prototype.bincn=function(t){n("number"==typeof t);var e=t%26,r=(t-e)/26,i=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=i,this;for(var o=i,s=r;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),n(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},o.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},o.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},o.prototype.gtn=function(t){return 1===this.cmpn(t)},o.prototype.gt=function(t){return 1===this.cmp(t)},o.prototype.gten=function(t){return this.cmpn(t)>=0},o.prototype.gte=function(t){return this.cmp(t)>=0},o.prototype.ltn=function(t){return-1===this.cmpn(t)},o.prototype.lt=function(t){return-1===this.cmp(t)},o.prototype.lten=function(t){return this.cmpn(t)<=0},o.prototype.lte=function(t){return this.cmp(t)<=0},o.prototype.eqn=function(t){return 0===this.cmpn(t)},o.prototype.eq=function(t){return 0===this.cmp(t)},o.red=function(t){return new M(t)},o.prototype.toRed=function(t){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},o.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(t){return this.red=t,this},o.prototype.forceRed=function(t){return n(!this.red,"Already a number in reduction context"),this._forceRed(t)},o.prototype.redAdd=function(t){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},o.prototype.redIAdd=function(t){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},o.prototype.redSub=function(t){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},o.prototype.redISub=function(t){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},o.prototype.redShl=function(t){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},o.prototype.redMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},o.prototype.redIMul=function(t){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},o.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(t){return n(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var g={k256:null,p224:null,p192:null,p25519:null};function y(t,e){this.name=t,this.p=new o(e,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function b(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function A(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function M(t){if("string"==typeof t){var e=o._prime(t);this.m=e.p,this.prime=e}else n(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function I(t){M.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new o(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):r.strip(),r},y.prototype.split=function(t,e){t.iushrn(this.n,0,e)},y.prototype.imulK=function(t){return t.imul(this.k)},i(v,y),v.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var o=t.words[9];for(e.words[e.length++]=o&r,i=10;i<t.length;i++){var s=0|t.words[i];t.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,t.words[i-10]=o,0===o&&t.length>10?t.length-=10:t.length-=9},v.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(w,y),i(b,y),i(A,y),A.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},o._prime=function(t){if(g[t])return g[t];var e;if("k256"===t)e=new v;else if("p224"===t)e=new w;else if("p192"===t)e=new b;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new A}return g[t]=e,e},M.prototype._verify1=function(t){n(0===t.negative,"red works only with positives"),n(t.red,"red works only with red numbers")},M.prototype._verify2=function(t,e){n(0==(t.negative|e.negative),"red works only with positives"),n(t.red&&t.red===e.red,"red works only with red numbers")},M.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},M.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},M.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},M.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},M.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},M.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},M.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},M.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},M.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},M.prototype.isqr=function(t){return this.imul(t,t.clone())},M.prototype.sqr=function(t){return this.mul(t,t)},M.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(n(e%2==1),3===e){var r=this.m.add(new o(1)).iushrn(2);return this.pow(t,r)}for(var i=this.m.subn(1),s=0;!i.isZero()&&0===i.andln(1);)s++,i.iushrn(1);n(!i.isZero());var a=new o(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new o(2*l*l).toRed(this);0!==this.pow(l,h).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,i),c=this.pow(t,i.addn(1).iushrn(1)),d=this.pow(t,i),p=s;0!==d.cmp(a);){for(var m=d,g=0;0!==m.cmp(a);g++)m=m.redSqr();n(g<p);var y=this.pow(f,new o(1).iushln(p-g-1));c=c.redMul(y),f=y.redSqr(),d=d.redMul(f),p=g}return c},M.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},M.prototype.pow=function(t,e){if(e.isZero())return new o(1);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var i=r[0],s=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],l=u-1;l>=0;l--){var f=h>>l&1;i!==r[0]&&(i=this.sqr(i)),0!==f||0!==s?(s<<=1,s|=f,(4==++a||0===n&&0===l)&&(i=this.mul(i,r[s]),a=0,s=0)):a=0}u=26}return i},M.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},M.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},o.mont=function(t){return new I(t)},i(I,M),I.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},I.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},I.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},I.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new o(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),s=i;return i.cmp(this.m)>=0?s=i.isub(this.m):i.cmpn(0)<0&&(s=i.iadd(this.m)),s._forceRed(this)},I.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},3206:(t,e,r)=>{var n=r(5033),i=r(9604);t.exports=function(t){if("string"==typeof t||"number"==typeof t){var e=new n(1),r=String(t).toLowerCase().trim(),o="0x"===r.substr(0,2)||"-0x"===r.substr(0,3),s=i(r);if("-"===s.substr(0,1)&&(s=i(s.slice(1)),e=new n(-1,10)),!(s=""===s?"0":s).match(/^-?[0-9]+$/)&&s.match(/^[0-9A-Fa-f]+$/)||s.match(/^[a-fA-F]+$/)||!0===o&&s.match(/^[0-9A-Fa-f]+$/))return new n(s,16).mul(e);if((s.match(/^-?[0-9]+$/)||""===s)&&!1===o)return new n(s,10).mul(e)}else if("object"==typeof t&&t.toString&&!t.pop&&!t.push&&t.toString(10).match(/^-?[0-9]+$/)&&(t.mul||t.dividedToIntegerBy))return new n(t.toString(10),10);throw new Error("[number-to-bn] while converting number "+JSON.stringify(t)+" to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.")}},1353:(t,e,r)=>{t.exports=r(6417).randomBytes},7167:t=>{t.exports=function(){var t=Array.prototype.slice.call(arguments),e=t.shift()||[],r=t.pop();if("function"!=typeof r)throw new Error("No callback provided to asyncMap");if(!e)return r(null,[]);Array.isArray(e)||(e=[e]);var n=t.length,i=[],o=null,s=e.length,a=s*n;if(!a)return r(null,[]);function u(h){h&&!o&&(o=h);for(var l=arguments.length,f=1;f<l;f++)void 0!==arguments[f]&&(i[f-1]=(i[f-1]||[]).concat(arguments[f]));if(e.length>s){var c=e.slice(s);a+=(e.length-s)*n,s=e.length,process.nextTick((function(){c.forEach((function(e){t.forEach((function(t){t(e,u)}))}))}))}0==--a&&r.apply(null,[o].concat(i))}e.forEach((function(e){t.forEach((function(t){t(e,u)}))}))}},6271:t=>{t.exports=function(){var t,e=Array.prototype.slice.call(arguments),r=null;return"object"==typeof e[0]?(r=e.shift(),"string"==typeof(t=e.shift())&&(t=r[t])):t=e.shift(),function(n){t.apply(r,e.concat(n))}}},5666:(t,e,r)=>{t.exports=i;var n=r(6271);function i(t,e){var r=[];!function o(s,a){return s>=a?e(null,r):(Array.isArray(t[s])&&(t[s]=n.apply(null,t[s].map((function(t){return t===i.first?r[0]:t===i.last?r[r.length-1]:t})))),t[s]?void t[s]((function(t,n){if(t)return e(t,r);void 0!==n&&(r=r.concat(n)),o(s+1,a)})):o(s+1,a))}(0,t.length)}i.first={},i.last={}},4518:(t,e,r)=>{r(7167),r(6271),e.chain=r(5666)},9604:(t,e,r)=>{var n=r(3944);t.exports=function(t){return"string"!=typeof t?t:n(t)?t.slice(2):t}},2130:(t,e,r)=>{"use strict";const n=r(2087),i=r(6560),o=process.env;let s;function a(t){return 0!==(e=function(t){if(!1===s)return 0;if(i("color=16m")||i("color=full")||i("color=truecolor"))return 3;if(i("color=256"))return 2;if(t&&!t.isTTY&&!0!==s)return 0;const e=s?1:0;if("win32"===process.platform){const t=n.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(t[0])>=10&&Number(t[2])>=10586?Number(t[2])>=14931?3:2:1}if("CI"in o)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((t=>t in o))||"codeship"===o.CI_NAME?1:e;if("TEAMCITY_VERSION"in o)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION)?1:0;if("truecolor"===o.COLORTERM)return 3;if("TERM_PROGRAM"in o){const t=parseInt((o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(o.TERM_PROGRAM){case"iTerm.app":return t>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(o.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)||"COLORTERM"in o?1:(o.TERM,e)}(t))&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3};var e}i("no-color")||i("no-colors")||i("color=false")?s=!1:(i("color")||i("colors")||i("color=true")||i("color=always"))&&(s=!0),"FORCE_COLOR"in o&&(s=0===o.FORCE_COLOR.length||0!==parseInt(o.FORCE_COLOR,10)),t.exports={supportsColor:a,stdout:a(process.stdout),stderr:a(process.stderr)}},3469:(t,e,r)=>{var n;t=r.nmd(t),function(){var r="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this||{},i=r._,o=Array.prototype,s=Object.prototype,a="undefined"!=typeof Symbol?Symbol.prototype:null,u=o.push,h=o.slice,l=s.toString,f=s.hasOwnProperty,c=Array.isArray,d=Object.keys,p=Object.create,m=function(){},g=function(t){return t instanceof g?t:this instanceof g?void(this._wrapped=t):new g(t)};e.nodeType?r._=g:(!t.nodeType&&t.exports&&(e=t.exports=g),e._=g),g.VERSION="1.9.1";var y,v=function(t,e,r){if(void 0===e)return t;switch(null==r?3:r){case 1:return function(r){return t.call(e,r)};case 3:return function(r,n,i){return t.call(e,r,n,i)};case 4:return function(r,n,i,o){return t.call(e,r,n,i,o)}}return function(){return t.apply(e,arguments)}},w=function(t,e,r){return g.iteratee!==y?g.iteratee(t,e):null==t?g.identity:g.isFunction(t)?v(t,e,r):g.isObject(t)&&!g.isArray(t)?g.matcher(t):g.property(t)};g.iteratee=y=function(t,e){return w(t,e,1/0)};var b=function(t,e){return e=null==e?t.length-1:+e,function(){for(var r=Math.max(arguments.length-e,0),n=Array(r),i=0;i<r;i++)n[i]=arguments[i+e];switch(e){case 0:return t.call(this,n);case 1:return t.call(this,arguments[0],n);case 2:return t.call(this,arguments[0],arguments[1],n)}var o=Array(e+1);for(i=0;i<e;i++)o[i]=arguments[i];return o[e]=n,t.apply(this,o)}},A=function(t){if(!g.isObject(t))return{};if(p)return p(t);m.prototype=t;var e=new m;return m.prototype=null,e},M=function(t){return function(e){return null==e?void 0:e[t]}},I=function(t,e){return null!=t&&f.call(t,e)},E=function(t,e){for(var r=e.length,n=0;n<r;n++){if(null==t)return;t=t[e[n]]}return r?t:void 0},_=Math.pow(2,53)-1,S=M("length"),C=function(t){var e=S(t);return"number"==typeof e&&e>=0&&e<=_};g.each=g.forEach=function(t,e,r){var n,i;if(e=v(e,r),C(t))for(n=0,i=t.length;n<i;n++)e(t[n],n,t);else{var o=g.keys(t);for(n=0,i=o.length;n<i;n++)e(t[o[n]],o[n],t)}return t},g.map=g.collect=function(t,e,r){e=w(e,r);for(var n=!C(t)&&g.keys(t),i=(n||t).length,o=Array(i),s=0;s<i;s++){var a=n?n[s]:s;o[s]=e(t[a],a,t)}return o};var x=function(t){var e=function(e,r,n,i){var o=!C(e)&&g.keys(e),s=(o||e).length,a=t>0?0:s-1;for(i||(n=e[o?o[a]:a],a+=t);a>=0&&a<s;a+=t){var u=o?o[a]:a;n=r(n,e[u],u,e)}return n};return function(t,r,n,i){var o=arguments.length>=3;return e(t,v(r,i,4),n,o)}};g.reduce=g.foldl=g.inject=x(1),g.reduceRight=g.foldr=x(-1),g.find=g.detect=function(t,e,r){var n=(C(t)?g.findIndex:g.findKey)(t,e,r);if(void 0!==n&&-1!==n)return t[n]},g.filter=g.select=function(t,e,r){var n=[];return e=w(e,r),g.each(t,(function(t,r,i){e(t,r,i)&&n.push(t)})),n},g.reject=function(t,e,r){return g.filter(t,g.negate(w(e)),r)},g.every=g.all=function(t,e,r){e=w(e,r);for(var n=!C(t)&&g.keys(t),i=(n||t).length,o=0;o<i;o++){var s=n?n[o]:o;if(!e(t[s],s,t))return!1}return!0},g.some=g.any=function(t,e,r){e=w(e,r);for(var n=!C(t)&&g.keys(t),i=(n||t).length,o=0;o<i;o++){var s=n?n[o]:o;if(e(t[s],s,t))return!0}return!1},g.contains=g.includes=g.include=function(t,e,r,n){return C(t)||(t=g.values(t)),("number"!=typeof r||n)&&(r=0),g.indexOf(t,e,r)>=0},g.invoke=b((function(t,e,r){var n,i;return g.isFunction(e)?i=e:g.isArray(e)&&(n=e.slice(0,-1),e=e[e.length-1]),g.map(t,(function(t){var o=i;if(!o){if(n&&n.length&&(t=E(t,n)),null==t)return;o=t[e]}return null==o?o:o.apply(t,r)}))})),g.pluck=function(t,e){return g.map(t,g.property(e))},g.where=function(t,e){return g.filter(t,g.matcher(e))},g.findWhere=function(t,e){return g.find(t,g.matcher(e))},g.max=function(t,e,r){var n,i,o=-1/0,s=-1/0;if(null==e||"number"==typeof e&&"object"!=typeof t[0]&&null!=t)for(var a=0,u=(t=C(t)?t:g.values(t)).length;a<u;a++)null!=(n=t[a])&&n>o&&(o=n);else e=w(e,r),g.each(t,(function(t,r,n){((i=e(t,r,n))>s||i===-1/0&&o===-1/0)&&(o=t,s=i)}));return o},g.min=function(t,e,r){var n,i,o=1/0,s=1/0;if(null==e||"number"==typeof e&&"object"!=typeof t[0]&&null!=t)for(var a=0,u=(t=C(t)?t:g.values(t)).length;a<u;a++)null!=(n=t[a])&&n<o&&(o=n);else e=w(e,r),g.each(t,(function(t,r,n){((i=e(t,r,n))<s||i===1/0&&o===1/0)&&(o=t,s=i)}));return o},g.shuffle=function(t){return g.sample(t,1/0)},g.sample=function(t,e,r){if(null==e||r)return C(t)||(t=g.values(t)),t[g.random(t.length-1)];var n=C(t)?g.clone(t):g.values(t),i=S(n);e=Math.max(Math.min(e,i),0);for(var o=i-1,s=0;s<e;s++){var a=g.random(s,o),u=n[s];n[s]=n[a],n[a]=u}return n.slice(0,e)},g.sortBy=function(t,e,r){var n=0;return e=w(e,r),g.pluck(g.map(t,(function(t,r,i){return{value:t,index:n++,criteria:e(t,r,i)}})).sort((function(t,e){var r=t.criteria,n=e.criteria;if(r!==n){if(r>n||void 0===r)return 1;if(r<n||void 0===n)return-1}return t.index-e.index})),"value")};var B=function(t,e){return function(r,n,i){var o=e?[[],[]]:{};return n=w(n,i),g.each(r,(function(e,i){var s=n(e,i,r);t(o,e,s)})),o}};g.groupBy=B((function(t,e,r){I(t,r)?t[r].push(e):t[r]=[e]})),g.indexBy=B((function(t,e,r){t[r]=e})),g.countBy=B((function(t,e,r){I(t,r)?t[r]++:t[r]=1}));var k=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;g.toArray=function(t){return t?g.isArray(t)?h.call(t):g.isString(t)?t.match(k):C(t)?g.map(t,g.identity):g.values(t):[]},g.size=function(t){return null==t?0:C(t)?t.length:g.keys(t).length},g.partition=B((function(t,e,r){t[r?0:1].push(e)}),!0),g.first=g.head=g.take=function(t,e,r){return null==t||t.length<1?null==e?void 0:[]:null==e||r?t[0]:g.initial(t,t.length-e)},g.initial=function(t,e,r){return h.call(t,0,Math.max(0,t.length-(null==e||r?1:e)))},g.last=function(t,e,r){return null==t||t.length<1?null==e?void 0:[]:null==e||r?t[t.length-1]:g.rest(t,Math.max(0,t.length-e))},g.rest=g.tail=g.drop=function(t,e,r){return h.call(t,null==e||r?1:e)},g.compact=function(t){return g.filter(t,Boolean)};var F=function(t,e,r,n){for(var i=(n=n||[]).length,o=0,s=S(t);o<s;o++){var a=t[o];if(C(a)&&(g.isArray(a)||g.isArguments(a)))if(e)for(var u=0,h=a.length;u<h;)n[i++]=a[u++];else F(a,e,r,n),i=n.length;else r||(n[i++]=a)}return n};g.flatten=function(t,e){return F(t,e,!1)},g.without=b((function(t,e){return g.difference(t,e)})),g.uniq=g.unique=function(t,e,r,n){g.isBoolean(e)||(n=r,r=e,e=!1),null!=r&&(r=w(r,n));for(var i=[],o=[],s=0,a=S(t);s<a;s++){var u=t[s],h=r?r(u,s,t):u;e&&!r?(s&&o===h||i.push(u),o=h):r?g.contains(o,h)||(o.push(h),i.push(u)):g.contains(i,u)||i.push(u)}return i},g.union=b((function(t){return g.uniq(F(t,!0,!0))})),g.intersection=function(t){for(var e=[],r=arguments.length,n=0,i=S(t);n<i;n++){var o=t[n];if(!g.contains(e,o)){var s;for(s=1;s<r&&g.contains(arguments[s],o);s++);s===r&&e.push(o)}}return e},g.difference=b((function(t,e){return e=F(e,!0,!0),g.filter(t,(function(t){return!g.contains(e,t)}))})),g.unzip=function(t){for(var e=t&&g.max(t,S).length||0,r=Array(e),n=0;n<e;n++)r[n]=g.pluck(t,n);return r},g.zip=b(g.unzip),g.object=function(t,e){for(var r={},n=0,i=S(t);n<i;n++)e?r[t[n]]=e[n]:r[t[n][0]]=t[n][1];return r};var N=function(t){return function(e,r,n){r=w(r,n);for(var i=S(e),o=t>0?0:i-1;o>=0&&o<i;o+=t)if(r(e[o],o,e))return o;return-1}};g.findIndex=N(1),g.findLastIndex=N(-1),g.sortedIndex=function(t,e,r,n){for(var i=(r=w(r,n,1))(e),o=0,s=S(t);o<s;){var a=Math.floor((o+s)/2);r(t[a])<i?o=a+1:s=a}return o};var T=function(t,e,r){return function(n,i,o){var s=0,a=S(n);if("number"==typeof o)t>0?s=o>=0?o:Math.max(o+a,s):a=o>=0?Math.min(o+1,a):o+a+1;else if(r&&o&&a)return n[o=r(n,i)]===i?o:-1;if(i!=i)return(o=e(h.call(n,s,a),g.isNaN))>=0?o+s:-1;for(o=t>0?s:a-1;o>=0&&o<a;o+=t)if(n[o]===i)return o;return-1}};g.indexOf=T(1,g.findIndex,g.sortedIndex),g.lastIndexOf=T(-1,g.findLastIndex),g.range=function(t,e,r){null==e&&(e=t||0,t=0),r||(r=e<t?-1:1);for(var n=Math.max(Math.ceil((e-t)/r),0),i=Array(n),o=0;o<n;o++,t+=r)i[o]=t;return i},g.chunk=function(t,e){if(null==e||e<1)return[];for(var r=[],n=0,i=t.length;n<i;)r.push(h.call(t,n,n+=e));return r};var R=function(t,e,r,n,i){if(!(n instanceof e))return t.apply(r,i);var o=A(t.prototype),s=t.apply(o,i);return g.isObject(s)?s:o};g.bind=b((function(t,e,r){if(!g.isFunction(t))throw new TypeError("Bind must be called on a function");var n=b((function(i){return R(t,n,e,this,r.concat(i))}));return n})),g.partial=b((function(t,e){var r=g.partial.placeholder,n=function(){for(var i=0,o=e.length,s=Array(o),a=0;a<o;a++)s[a]=e[a]===r?arguments[i++]:e[a];for(;i<arguments.length;)s.push(arguments[i++]);return R(t,n,this,this,s)};return n})),g.partial.placeholder=g,g.bindAll=b((function(t,e){var r=(e=F(e,!1,!1)).length;if(r<1)throw new Error("bindAll must be passed function names");for(;r--;){var n=e[r];t[n]=g.bind(t[n],t)}})),g.memoize=function(t,e){var r=function(n){var i=r.cache,o=""+(e?e.apply(this,arguments):n);return I(i,o)||(i[o]=t.apply(this,arguments)),i[o]};return r.cache={},r},g.delay=b((function(t,e,r){return setTimeout((function(){return t.apply(null,r)}),e)})),g.defer=g.partial(g.delay,g,1),g.throttle=function(t,e,r){var n,i,o,s,a=0;r||(r={});var u=function(){a=!1===r.leading?0:g.now(),n=null,s=t.apply(i,o),n||(i=o=null)},h=function(){var h=g.now();a||!1!==r.leading||(a=h);var l=e-(h-a);return i=this,o=arguments,l<=0||l>e?(n&&(clearTimeout(n),n=null),a=h,s=t.apply(i,o),n||(i=o=null)):n||!1===r.trailing||(n=setTimeout(u,l)),s};return h.cancel=function(){clearTimeout(n),a=0,n=i=o=null},h},g.debounce=function(t,e,r){var n,i,o=function(e,r){n=null,r&&(i=t.apply(e,r))},s=b((function(s){if(n&&clearTimeout(n),r){var a=!n;n=setTimeout(o,e),a&&(i=t.apply(this,s))}else n=g.delay(o,e,this,s);return i}));return s.cancel=function(){clearTimeout(n),n=null},s},g.wrap=function(t,e){return g.partial(e,t)},g.negate=function(t){return function(){return!t.apply(this,arguments)}},g.compose=function(){var t=arguments,e=t.length-1;return function(){for(var r=e,n=t[e].apply(this,arguments);r--;)n=t[r].call(this,n);return n}},g.after=function(t,e){return function(){if(--t<1)return e.apply(this,arguments)}},g.before=function(t,e){var r;return function(){return--t>0&&(r=e.apply(this,arguments)),t<=1&&(e=null),r}},g.once=g.partial(g.before,2),g.restArguments=b;var P=!{toString:null}.propertyIsEnumerable("toString"),O=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],U=function(t,e){var r=O.length,n=t.constructor,i=g.isFunction(n)&&n.prototype||s,o="constructor";for(I(t,o)&&!g.contains(e,o)&&e.push(o);r--;)(o=O[r])in t&&t[o]!==i[o]&&!g.contains(e,o)&&e.push(o)};g.keys=function(t){if(!g.isObject(t))return[];if(d)return d(t);var e=[];for(var r in t)I(t,r)&&e.push(r);return P&&U(t,e),e},g.allKeys=function(t){if(!g.isObject(t))return[];var e=[];for(var r in t)e.push(r);return P&&U(t,e),e},g.values=function(t){for(var e=g.keys(t),r=e.length,n=Array(r),i=0;i<r;i++)n[i]=t[e[i]];return n},g.mapObject=function(t,e,r){e=w(e,r);for(var n=g.keys(t),i=n.length,o={},s=0;s<i;s++){var a=n[s];o[a]=e(t[a],a,t)}return o},g.pairs=function(t){for(var e=g.keys(t),r=e.length,n=Array(r),i=0;i<r;i++)n[i]=[e[i],t[e[i]]];return n},g.invert=function(t){for(var e={},r=g.keys(t),n=0,i=r.length;n<i;n++)e[t[r[n]]]=r[n];return e},g.functions=g.methods=function(t){var e=[];for(var r in t)g.isFunction(t[r])&&e.push(r);return e.sort()};var D=function(t,e){return function(r){var n=arguments.length;if(e&&(r=Object(r)),n<2||null==r)return r;for(var i=1;i<n;i++)for(var o=arguments[i],s=t(o),a=s.length,u=0;u<a;u++){var h=s[u];e&&void 0!==r[h]||(r[h]=o[h])}return r}};g.extend=D(g.allKeys),g.extendOwn=g.assign=D(g.keys),g.findKey=function(t,e,r){e=w(e,r);for(var n,i=g.keys(t),o=0,s=i.length;o<s;o++)if(e(t[n=i[o]],n,t))return n};var q,L,Q=function(t,e,r){return e in r};g.pick=b((function(t,e){var r={},n=e[0];if(null==t)return r;g.isFunction(n)?(e.length>1&&(n=v(n,e[1])),e=g.allKeys(t)):(n=Q,e=F(e,!1,!1),t=Object(t));for(var i=0,o=e.length;i<o;i++){var s=e[i],a=t[s];n(a,s,t)&&(r[s]=a)}return r})),g.omit=b((function(t,e){var r,n=e[0];return g.isFunction(n)?(n=g.negate(n),e.length>1&&(r=e[1])):(e=g.map(F(e,!1,!1),String),n=function(t,r){return!g.contains(e,r)}),g.pick(t,n,r)})),g.defaults=D(g.allKeys,!0),g.create=function(t,e){var r=A(t);return e&&g.extendOwn(r,e),r},g.clone=function(t){return g.isObject(t)?g.isArray(t)?t.slice():g.extend({},t):t},g.tap=function(t,e){return e(t),t},g.isMatch=function(t,e){var r=g.keys(e),n=r.length;if(null==t)return!n;for(var i=Object(t),o=0;o<n;o++){var s=r[o];if(e[s]!==i[s]||!(s in i))return!1}return!0},q=function(t,e,r,n){if(t===e)return 0!==t||1/t==1/e;if(null==t||null==e)return!1;if(t!=t)return e!=e;var i=typeof t;return("function"===i||"object"===i||"object"==typeof e)&&L(t,e,r,n)},L=function(t,e,r,n){t instanceof g&&(t=t._wrapped),e instanceof g&&(e=e._wrapped);var i=l.call(t);if(i!==l.call(e))return!1;switch(i){case"[object RegExp]":case"[object String]":return""+t==""+e;case"[object Number]":return+t!=+t?+e!=+e:0==+t?1/+t==1/e:+t==+e;case"[object Date]":case"[object Boolean]":return+t==+e;case"[object Symbol]":return a.valueOf.call(t)===a.valueOf.call(e)}var o="[object Array]"===i;if(!o){if("object"!=typeof t||"object"!=typeof e)return!1;var s=t.constructor,u=e.constructor;if(s!==u&&!(g.isFunction(s)&&s instanceof s&&g.isFunction(u)&&u instanceof u)&&"constructor"in t&&"constructor"in e)return!1}n=n||[];for(var h=(r=r||[]).length;h--;)if(r[h]===t)return n[h]===e;if(r.push(t),n.push(e),o){if((h=t.length)!==e.length)return!1;for(;h--;)if(!q(t[h],e[h],r,n))return!1}else{var f,c=g.keys(t);if(h=c.length,g.keys(e).length!==h)return!1;for(;h--;)if(f=c[h],!I(e,f)||!q(t[f],e[f],r,n))return!1}return r.pop(),n.pop(),!0},g.isEqual=function(t,e){return q(t,e)},g.isEmpty=function(t){return null==t||(C(t)&&(g.isArray(t)||g.isString(t)||g.isArguments(t))?0===t.length:0===g.keys(t).length)},g.isElement=function(t){return!(!t||1!==t.nodeType)},g.isArray=c||function(t){return"[object Array]"===l.call(t)},g.isObject=function(t){var e=typeof t;return"function"===e||"object"===e&&!!t},g.each(["Arguments","Function","String","Number","Date","RegExp","Error","Symbol","Map","WeakMap","Set","WeakSet"],(function(t){g["is"+t]=function(e){return l.call(e)==="[object "+t+"]"}})),g.isArguments(arguments)||(g.isArguments=function(t){return I(t,"callee")});var j=r.document&&r.document.childNodes;"object"!=typeof Int8Array&&"function"!=typeof j&&(g.isFunction=function(t){return"function"==typeof t||!1}),g.isFinite=function(t){return!g.isSymbol(t)&&isFinite(t)&&!isNaN(parseFloat(t))},g.isNaN=function(t){return g.isNumber(t)&&isNaN(t)},g.isBoolean=function(t){return!0===t||!1===t||"[object Boolean]"===l.call(t)},g.isNull=function(t){return null===t},g.isUndefined=function(t){return void 0===t},g.has=function(t,e){if(!g.isArray(e))return I(t,e);for(var r=e.length,n=0;n<r;n++){var i=e[n];if(null==t||!f.call(t,i))return!1;t=t[i]}return!!r},g.noConflict=function(){return r._=i,this},g.identity=function(t){return t},g.constant=function(t){return function(){return t}},g.noop=function(){},g.property=function(t){return g.isArray(t)?function(e){return E(e,t)}:M(t)},g.propertyOf=function(t){return null==t?function(){}:function(e){return g.isArray(e)?E(t,e):t[e]}},g.matcher=g.matches=function(t){return t=g.extendOwn({},t),function(e){return g.isMatch(e,t)}},g.times=function(t,e,r){var n=Array(Math.max(0,t));e=v(e,r,1);for(var i=0;i<t;i++)n[i]=e(i);return n},g.random=function(t,e){return null==e&&(e=t,t=0),t+Math.floor(Math.random()*(e-t+1))},g.now=Date.now||function(){return(new Date).getTime()};var z={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},K=g.invert(z),H=function(t){var e=function(e){return t[e]},r="(?:"+g.keys(t).join("|")+")",n=RegExp(r),i=RegExp(r,"g");return function(t){return t=null==t?"":""+t,n.test(t)?t.replace(i,e):t}};g.escape=H(z),g.unescape=H(K),g.result=function(t,e,r){g.isArray(e)||(e=[e]);var n=e.length;if(!n)return g.isFunction(r)?r.call(t):r;for(var i=0;i<n;i++){var o=null==t?void 0:t[e[i]];void 0===o&&(o=r,i=n),t=g.isFunction(o)?o.call(t):o}return t};var G=0;g.uniqueId=function(t){var e=++G+"";return t?t+e:e},g.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var V=/(.)^/,W={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},J=/\\|'|\r|\n|\u2028|\u2029/g,Z=function(t){return"\\"+W[t]};g.template=function(t,e,r){!e&&r&&(e=r),e=g.defaults({},e,g.templateSettings);var n,i=RegExp([(e.escape||V).source,(e.interpolate||V).source,(e.evaluate||V).source].join("|")+"|$","g"),o=0,s="__p+='";t.replace(i,(function(e,r,n,i,a){return s+=t.slice(o,a).replace(J,Z),o=a+e.length,r?s+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":n?s+="'+\n((__t=("+n+"))==null?'':__t)+\n'":i&&(s+="';\n"+i+"\n__p+='"),e})),s+="';\n",e.variable||(s="with(obj||{}){\n"+s+"}\n"),s="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+s+"return __p;\n";try{n=new Function(e.variable||"obj","_",s)}catch(t){throw t.source=s,t}var a=function(t){return n.call(this,t,g)},u=e.variable||"obj";return a.source="function("+u+"){\n"+s+"}",a},g.chain=function(t){var e=g(t);return e._chain=!0,e};var Y=function(t,e){return t._chain?g(e).chain():e};g.mixin=function(t){return g.each(g.functions(t),(function(e){var r=g[e]=t[e];g.prototype[e]=function(){var t=[this._wrapped];return u.apply(t,arguments),Y(this,r.apply(g,t))}})),g},g.mixin(g),g.each(["pop","push","reverse","shift","sort","splice","unshift"],(function(t){var e=o[t];g.prototype[t]=function(){var r=this._wrapped;return e.apply(r,arguments),"shift"!==t&&"splice"!==t||0!==r.length||delete r[0],Y(this,r)}})),g.each(["concat","join","slice"],(function(t){var e=o[t];g.prototype[t]=function(){return Y(this,e.apply(this._wrapped,arguments))}})),g.prototype.value=function(){return this._wrapped},g.prototype.valueOf=g.prototype.toJSON=g.prototype.value,g.prototype.toString=function(){return String(this._wrapped)},void 0===(n=function(){return g}.apply(e,[]))||(t.exports=n)}()},7458:(t,e)=>{!function(t){var e,r,n,i=String.fromCharCode;function o(t){for(var e,r,n=[],i=0,o=t.length;i<o;)(e=t.charCodeAt(i++))>=55296&&e<=56319&&i<o?56320==(64512&(r=t.charCodeAt(i++)))?n.push(((1023&e)<<10)+(1023&r)+65536):(n.push(e),i--):n.push(e);return n}function s(t){if(t>=55296&&t<=57343)throw Error("Lone surrogate U+"+t.toString(16).toUpperCase()+" is not a scalar value")}function a(t,e){return i(t>>e&63|128)}function u(t){if(0==(4294967168&t))return i(t);var e="";return 0==(4294965248&t)?e=i(t>>6&31|192):0==(4294901760&t)?(s(t),e=i(t>>12&15|224),e+=a(t,6)):0==(4292870144&t)&&(e=i(t>>18&7|240),e+=a(t,12),e+=a(t,6)),e+i(63&t|128)}function h(){if(n>=r)throw Error("Invalid byte index");var t=255&e[n];if(n++,128==(192&t))return 63&t;throw Error("Invalid continuation byte")}function l(){var t,i;if(n>r)throw Error("Invalid byte index");if(n==r)return!1;if(t=255&e[n],n++,0==(128&t))return t;if(192==(224&t)){if((i=(31&t)<<6|h())>=128)return i;throw Error("Invalid continuation byte")}if(224==(240&t)){if((i=(15&t)<<12|h()<<6|h())>=2048)return s(i),i;throw Error("Invalid continuation byte")}if(240==(248&t)&&(i=(7&t)<<18|h()<<12|h()<<6|h())>=65536&&i<=1114111)return i;throw Error("Invalid UTF-8 detected")}t.version="3.0.0",t.encode=function(t){for(var e=o(t),r=e.length,n=-1,i="";++n<r;)i+=u(e[n]);return i},t.decode=function(t){e=o(t),r=e.length,n=0;for(var s,a=[];!1!==(s=l());)a.push(s);return function(t){for(var e,r=t.length,n=-1,o="";++n<r;)(e=t[n])>65535&&(o+=i((e-=65536)>>>10&1023|55296),e=56320|1023&e),o+=i(e);return o}(a)}}(e)},8269:(t,e,r)=>{var n=r(3469),i=r(4278),o=r(329),s=r(8668),a=r(1353),u=r(3550),h=function(t,e){var r=[];return e.forEach((function(e){if("object"==typeof e.components){if("tuple"!==e.type.substring(0,5))throw new Error("components found but type is not tuple; report on GitHub");var i="",o=e.type.indexOf("[");o>=0&&(i=e.type.substring(o));var s=h(t,e.components);n.isArray(s)&&t?r.push("tuple("+s.join(",")+")"+i):t?r.push("("+s+")"):r.push("("+s.join(",")+")"+i)}else r.push(e.type)})),r},l=function(t){if(!o.isHexStrict(t))throw new Error("The parameter must be a valid HEX string.");var e="",r=0,n=t.length;for("0x"===t.substring(0,2)&&(r=2);r<n;r+=2){var i=parseInt(t.substr(r,2),16);e+=String.fromCharCode(i)}return e},f=function(t){if(!t)return"0x00";for(var e="",r=0;r<t.length;r++){var n=t.charCodeAt(r).toString(16);e+=n.length<2?"0"+n:n}return"0x"+e},c=function(t){if(t=t?t.toLowerCase():"ether",!i.unitMap[t])throw new Error('This unit "'+t+"\" doesn't exist, please use the one of the following units"+JSON.stringify(i.unitMap,null,2));return t};t.exports={_fireError:function(t,e,r,i,o){return!n.isObject(t)||t instanceof Error||!t.data||((n.isObject(t.data)||n.isArray(t.data))&&(t.data=JSON.stringify(t.data,null,2)),t=t.message+"\n"+t.data),n.isString(t)&&(t=new Error(t)),n.isFunction(i)&&i(t,o),n.isFunction(r)&&((e&&n.isFunction(e.listeners)&&e.listeners("error").length||n.isFunction(i))&&e.catch((function(){})),setTimeout((function(){r(t)}),1)),e&&n.isFunction(e.emit)&&setTimeout((function(){e.emit("error",t,o),e.removeAllListeners()}),1),e},_jsonInterfaceMethodToString:function(t){return n.isObject(t)&&t.name&&-1!==t.name.indexOf("(")?t.name:t.name+"("+h(!1,t.inputs).join(",")+")"},_flattenTypes:h,randomHex:function(t){return"0x"+a(t).toString("hex")},_:n,BN:o.BN,isBN:o.isBN,isBigNumber:o.isBigNumber,isHex:o.isHex,isHexStrict:o.isHexStrict,sha3:o.sha3,sha3Raw:o.sha3Raw,keccak256:o.sha3,soliditySha3:s.soliditySha3,soliditySha3Raw:s.soliditySha3Raw,encodePacked:s.encodePacked,isAddress:o.isAddress,checkAddressChecksum:o.checkAddressChecksum,toChecksumAddress:function(t){if(void 0===t)return"";if(!/^(0x)?[0-9a-f]{40}$/i.test(t))throw new Error('Given address "'+t+'" is not a valid Ethereum address.');t=t.toLowerCase().replace(/^0x/i,"");for(var e=o.sha3(t).replace(/^0x/i,""),r="0x",n=0;n<t.length;n++)parseInt(e[n],16)>7?r+=t[n].toUpperCase():r+=t[n];return r},toHex:o.toHex,toBN:o.toBN,bytesToHex:o.bytesToHex,hexToBytes:o.hexToBytes,hexToNumberString:o.hexToNumberString,hexToNumber:o.hexToNumber,toDecimal:o.hexToNumber,numberToHex:o.numberToHex,fromDecimal:o.numberToHex,hexToUtf8:o.hexToUtf8,hexToString:o.hexToUtf8,toUtf8:o.hexToUtf8,utf8ToHex:o.utf8ToHex,stringToHex:o.utf8ToHex,fromUtf8:o.utf8ToHex,hexToAscii:l,toAscii:l,asciiToHex:f,fromAscii:f,unitMap:i.unitMap,toWei:function(t,e){if(e=c(e),!o.isBN(t)&&!n.isString(t))throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");return o.isBN(t)?i.toWei(t,e):i.toWei(t,e).toString(10)},fromWei:function(t,e){if(e=c(e),!o.isBN(t)&&!n.isString(t))throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");return o.isBN(t)?i.fromWei(t,e):i.fromWei(t,e).toString(10)},padLeft:o.leftPad,leftPad:o.leftPad,padRight:o.rightPad,rightPad:o.rightPad,toTwosComplement:o.toTwosComplement,isBloom:o.isBloom,isUserEthereumAddressInBloom:o.isUserEthereumAddressInBloom,isContractAddressInBloom:o.isContractAddressInBloom,isTopic:o.isTopic,isTopicInBloom:o.isTopicInBloom,isInBloom:o.isInBloom,compareBlockNumbers:function(t,e){if(t==e)return 0;if("genesis"!=t&&"earliest"!=t&&0!=t||"genesis"!=e&&"earliest"!=e&&0!=e){if("genesis"==t||"earliest"==t)return-1;if("genesis"==e||"earliest"==e)return 1;if("latest"==t)return"pending"==e?-1:1;if("latest"===e)return"pending"==t?1:-1;if("pending"==t)return 1;if("pending"==e)return-1;{let r=new u(t),n=new u(e);return r.lt(n)?-1:r.eq(n)?0:1}}return 0}}},8668:(t,e,r)=>{var n=r(3469),i=r(3550),o=r(329),s=function(t){var e=typeof t;if("string"===e)return o.isHexStrict(t)?new i(t.replace(/0x/i,""),16):new i(t,10);if("number"===e)return new i(t);if(o.isBigNumber(t))return new i(t.toString(10));if(o.isBN(t))return t;throw new Error(t+" is not a number")},a=function(t,e,r){var n,a;if("bytes"===(t=function(t){return t.startsWith("int[")?"int256"+t.slice(3):"int"===t?"int256":t.startsWith("uint[")?"uint256"+t.slice(4):"uint"===t?"uint256":t.startsWith("fixed[")?"fixed128x128"+t.slice(5):"fixed"===t?"fixed128x128":t.startsWith("ufixed[")?"ufixed128x128"+t.slice(6):"ufixed"===t?"ufixed128x128":t}(t))){if(e.replace(/^0x/i,"").length%2!=0)throw new Error("Invalid bytes characters "+e.length);return e}if("string"===t)return o.utf8ToHex(e);if("bool"===t)return e?"01":"00";if(t.startsWith("address")){if(n=r?64:40,!o.isAddress(e))throw new Error(e+" is not a valid address, or the checksum is invalid.");return o.leftPad(e.toLowerCase(),n)}if(n=function(t){var e=/^\D+(\d+).*$/.exec(t);return e?parseInt(e[1],10):null}(t),t.startsWith("bytes")){if(!n)throw new Error("bytes[] not yet supported in solidity");if(r&&(n=32),n<1||n>32||n<e.replace(/^0x/i,"").length/2)throw new Error("Invalid bytes"+n+" for "+e);return o.rightPad(e,2*n)}if(t.startsWith("uint")){if(n%8||n<8||n>256)throw new Error("Invalid uint"+n+" size");if((a=s(e)).bitLength()>n)throw new Error("Supplied uint exceeds width: "+n+" vs "+a.bitLength());if(a.lt(new i(0)))throw new Error("Supplied uint "+a.toString()+" is negative");return n?o.leftPad(a.toString("hex"),n/8*2):a}if(t.startsWith("int")){if(n%8||n<8||n>256)throw new Error("Invalid int"+n+" size");if((a=s(e)).bitLength()>n)throw new Error("Supplied int exceeds width: "+n+" vs "+a.bitLength());return a.lt(new i(0))?a.toTwos(n).toString("hex"):n?o.leftPad(a.toString("hex"),n/8*2):a}throw new Error("Unsupported or invalid type: "+t)},u=function(t){if(n.isArray(t))throw new Error("Autodetection of array types is not supported.");var e,r,s="";if(n.isObject(t)&&(t.hasOwnProperty("v")||t.hasOwnProperty("t")||t.hasOwnProperty("value")||t.hasOwnProperty("type"))?(e=t.hasOwnProperty("t")?t.t:t.type,s=t.hasOwnProperty("v")?t.v:t.value):(e=o.toHex(t,!0),s=o.toHex(t),e.startsWith("int")||e.startsWith("uint")||(e="bytes")),!e.startsWith("int")&&!e.startsWith("uint")||"string"!=typeof s||/^(-)?0x/i.test(s)||(s=new i(s)),n.isArray(s)){if((r=function(t){var e=/^\D+\d*\[(\d+)\]$/.exec(t);return e?parseInt(e[1],10):null}(e))&&s.length!==r)throw new Error(e+" is not matching the given array "+JSON.stringify(s));r=s.length}return n.isArray(s)?s.map((function(t){return a(e,t,r).toString("hex").replace("0x","")})).join(""):a(e,s,r).toString("hex").replace("0x","")};t.exports={soliditySha3:function(){var t=Array.prototype.slice.call(arguments),e=n.map(t,u);return o.sha3("0x"+e.join(""))},soliditySha3Raw:function(){return o.sha3Raw("0x"+n.map(Array.prototype.slice.call(arguments),u).join(""))},encodePacked:function(){var t=Array.prototype.slice.call(arguments),e=n.map(t,u);return"0x"+e.join("").toLowerCase()}}},329:(t,e,r)=>{var n=r(3469),i=r(3550),o=r(3206),s=r(7458),a=r(1538),u=r(6877),h=function(t){return i.isBN(t)},l=function(t){return t&&t.constructor&&"BigNumber"===t.constructor.name},f=function(t){try{return o.apply(null,arguments)}catch(e){throw new Error(e+' Given value: "'+t+'"')}},c=function(t){return!!/^(0x)?[0-9a-f]{40}$/i.test(t)&&(!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t)&&!/^(0x|0X)?[0-9A-F]{40}$/.test(t))||d(t))},d=function(t){t=t.replace(/^0x/i,"");for(var e=w(t.toLowerCase()).replace(/^0x/i,""),r=0;r<40;r++)if(parseInt(e[r],16)>7&&t[r].toUpperCase()!==t[r]||parseInt(e[r],16)<=7&&t[r].toLowerCase()!==t[r])return!1;return!0},p=function(t){var e="";t=(t=(t=(t=(t=s.encode(t)).replace(/^(?:\u0000)*/,"")).split("").reverse().join("")).replace(/^(?:\u0000)*/,"")).split("").reverse().join("");for(var r=0;r<t.length;r++){var n=t.charCodeAt(r).toString(16);e+=n.length<2?"0"+n:n}return"0x"+e},m=function(t){if(n.isNull(t)||n.isUndefined(t))return t;if(!isFinite(t)&&!y(t))throw new Error('Given input "'+t+'" is not a number.');var e=f(t),r=e.toString(16);return e.lt(new i(0))?"-0x"+r.substr(1):"0x"+r},g=function(t){if(t=t.toString(16),!y(t))throw new Error('Given value "'+t+'" is not a valid hex string.');t=t.replace(/^0x/i,"");for(var e=[],r=0;r<t.length;r+=2)e.push(parseInt(t.substr(r,2),16));return e},y=function(t){return(n.isString(t)||n.isNumber(t))&&/^(-)?0x[0-9a-f]*$/i.test(t)},v="0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",w=function(t){h(t)&&(t=t.toString()),y(t)&&/^0x/i.test(t.toString())&&(t=g(t));var e=a.keccak256(t);return e===v?null:e};w._Hash=a,t.exports={BN:i,isBN:h,isBigNumber:l,toBN:f,isAddress:c,isBloom:function(t){return u.isBloom(t)},isUserEthereumAddressInBloom:function(t,e){return u.isUserEthereumAddressInBloom(t,e)},isContractAddressInBloom:function(t,e){return u.isContractAddressInBloom(t,e)},isTopic:function(t){return u.isTopic(t)},isTopicInBloom:function(t,e){return u.isTopicInBloom(t,e)},isInBloom:function(t,e){return u.isInBloom(t,e)},checkAddressChecksum:d,utf8ToHex:p,hexToUtf8:function(t){if(!y(t))throw new Error('The parameter "'+t+'" must be a valid HEX string.');for(var e="",r=0,n=(t=(t=(t=(t=(t=t.replace(/^0x/i,"")).replace(/^(?:00)*/,"")).split("").reverse().join("")).replace(/^(?:00)*/,"")).split("").reverse().join("")).length,i=0;i<n;i+=2)r=parseInt(t.substr(i,2),16),e+=String.fromCharCode(r);return s.decode(e)},hexToNumber:function(t){if(!t)return t;if(n.isString(t)&&!y(t))throw new Error('Given value "'+t+'" is not a valid hex string.');return f(t).toNumber()},hexToNumberString:function(t){if(!t)return t;if(n.isString(t)&&!y(t))throw new Error('Given value "'+t+'" is not a valid hex string.');return f(t).toString(10)},numberToHex:m,toHex:function(t,e){if(c(t))return e?"address":"0x"+t.toLowerCase().replace(/^0x/i,"");if(n.isBoolean(t))return e?"bool":t?"0x01":"0x00";if(Buffer.isBuffer(t))return"0x"+t.toString("hex");if(n.isObject(t)&&!l(t)&&!h(t))return e?"string":p(JSON.stringify(t));if(n.isString(t)){if(0===t.indexOf("-0x")||0===t.indexOf("-0X"))return e?"int256":m(t);if(0===t.indexOf("0x")||0===t.indexOf("0X"))return e?"bytes":t;if(!isFinite(t))return e?"string":p(t)}return e?t<0?"int256":"uint256":m(t)},hexToBytes:g,bytesToHex:function(t){for(var e=[],r=0;r<t.length;r++)e.push((t[r]>>>4).toString(16)),e.push((15&t[r]).toString(16));return"0x"+e.join("")},isHex:function(t){return(n.isString(t)||n.isNumber(t))&&/^(-0x|0x)?[0-9a-f]*$/i.test(t)},isHexStrict:y,leftPad:function(t,e,r){var n=/^0x/i.test(t)||"number"==typeof t,i=e-(t=t.toString(16).replace(/^0x/i,"")).length+1>=0?e-t.length+1:0;return(n?"0x":"")+new Array(i).join(r||"0")+t},rightPad:function(t,e,r){var n=/^0x/i.test(t)||"number"==typeof t,i=e-(t=t.toString(16).replace(/^0x/i,"")).length+1>=0?e-t.length+1:0;return(n?"0x":"")+t+new Array(i).join(r||"0")},toTwosComplement:function(t){return"0x"+f(t).toTwos(256).toString(16,64)},sha3:w,sha3Raw:function(t){return null===(t=w(t))?v:t}}},902:(t,e,r)=>{"use strict";t.exports=function(t,e,r,o){r instanceof Function&&(o=r,r=null),r||(r={}),n.realpath(t,(function(a,h){!function(t,e,r,o){var a=u(t);return r.mode&&r.chown?h():n.stat(t,(function(t,e){return t||!e||((r=s({},r)).mode||(r.mode=e.mode),!r.chown&&process.getuid&&(r.chown={uid:e.uid,gid:e.gid})),h()}));function h(){i([[l,a,e,r.mode,r.encoding||"utf8"],r.chown&&[n,n.chown,a,r.chown.uid,r.chown.gid],r.mode&&[n,n.chmod,a,r.mode],[n,n.rename,a,t]],(function(t){t?n.unlink(a,(function(){o(t)})):o()}))}function l(t,e,i,o,s){n.open(t,"w",r.mode,(function(t,r){return t?s(t):Buffer.isBuffer(e)?n.write(r,e,0,e.length,0,i):null!=e?n.write(r,String(e),0,String(o),i):i();function i(t){if(t)return s(t);n.fsync(r,(function(t){if(t)return s(t);n.close(r,s)}))}}))}}(h||t,e,r,o)}))},t.exports.sync=function(t,e,r){r||(r={});try{t=n.realpathSync(t)}catch(t){}var i=u(t);try{if(!r.mode||!r.chown)try{var o=n.statSync(t);(r=s({},r)).mode||(r.mode=o.mode),!r.chown&&process.getuid&&(r.chown={uid:o.uid,gid:o.gid})}catch(t){}var a=n.openSync(i,"w",r.mode);Buffer.isBuffer(e)?n.writeSync(a,e,0,e.length,0):null!=e&&n.writeSync(a,String(e),0,String(r.encoding||"utf8")),n.fsyncSync(a),n.closeSync(a),r.chown&&n.chownSync(i,r.chown.uid,r.chown.gid),r.mode&&n.chmodSync(i,r.mode),n.renameSync(i,t)}catch(t){try{n.unlinkSync(i)}catch(t){}throw t}},t.exports._getTmpname=u;var n=r(77),i=r(4518).chain,o=r(4269),s=Object.assign||r(1669)._extend,a=0;function u(t){return t+"."+o(__filename).hash(String(process.pid)).hash(String(++a)).result()}},9331:(t,e,r)=>{"use strict";r.r(e),r.d(e,{Addresses:()=>m,BabyJubWallet:()=>v,Constants:()=>c,CoordinatorAPI:()=>d,Float16:()=>f,Providers:()=>g,Tx:()=>w,TxPool:()=>p,TxUtils:()=>y,Utils:()=>l});var n={};r.r(n),r.d(n,{abs:()=>H,add:()=>D,band:()=>tt,bitLength:()=>S,bits:()=>P,bor:()=>et,bxor:()=>rt,div:()=>G,e:()=>E,eq:()=>W,exp:()=>K,fromArray:()=>_,fromString:()=>I,geq:()=>$,gt:()=>Y,isNegative:()=>C,isOdd:()=>T,isZero:()=>x,land:()=>nt,leq:()=>X,lnot:()=>ot,lor:()=>it,lt:()=>Z,mod:()=>V,mul:()=>Q,naf:()=>R,neg:()=>L,neq:()=>J,pow:()=>z,shiftLeft:()=>B,shiftRight:()=>k,shl:()=>F,shr:()=>N,square:()=>j,sub:()=>q,toArray:()=>U,toNumber:()=>O});var i={};r.r(i),r.d(i,{abs:()=>kt,add:()=>It,band:()=>qt,bitLength:()=>ft,bits:()=>bt,bor:()=>Lt,bxor:()=>Qt,div:()=>Ft,e:()=>ht,eq:()=>Tt,exp:()=>Bt,fromArray:()=>lt,fromString:()=>ut,geq:()=>Dt,gt:()=>Ot,isNegative:()=>ct,isOdd:()=>vt,isZero:()=>dt,land:()=>jt,leq:()=>Ut,lnot:()=>Kt,lor:()=>zt,lt:()=>Pt,mod:()=>Nt,mul:()=>St,naf:()=>wt,neg:()=>_t,neq:()=>Rt,pow:()=>xt,shiftLeft:()=>pt,shiftRight:()=>mt,shl:()=>gt,shr:()=>yt,square:()=>Ct,sub:()=>Et,toArray:()=>Mt,toNumber:()=>At});var o={};r.r(o),r.d(o,{abs:()=>Ie,add:()=>ge,band:()=>Ne,bitLength:()=>ie,bits:()=>de,bor:()=>Te,bxor:()=>Re,div:()=>Ee,e:()=>re,eq:()=>Se,exp:()=>Me,fromArray:()=>ne,fromRprBE:()=>Zt,fromRprLE:()=>Jt,fromString:()=>ee,geq:()=>Fe,gt:()=>Be,isNegative:()=>oe,isOdd:()=>fe,isZero:()=>se,land:()=>Pe,leq:()=>ke,lnot:()=>Ue,lor:()=>Oe,lt:()=>xe,mod:()=>_e,mul:()=>we,naf:()=>ce,neg:()=>ve,neq:()=>Ce,one:()=>te,pow:()=>Ae,shiftLeft:()=>ae,shiftRight:()=>ue,shl:()=>he,shr:()=>le,square:()=>be,sub:()=>ye,toArray:()=>me,toLEBuff:()=>Xt,toNumber:()=>pe,toRprBE:()=>Wt,toRprLE:()=>Vt,toString:()=>Yt,zero:()=>$t});var s={};r.r(s),r.d(s,{beBuff2int:()=>Ve,beInt2Buff:()=>We,leBuff2int:()=>Je,leInt2Buff:()=>Ze,stringifyBigInts:()=>He,unstringifyBigInts:()=>Ge});var a={};r.r(a),r.d(a,{beBuff2int:()=>$e,beInt2Buff:()=>tr,leBuff2int:()=>er,leInt2Buff:()=>rr,stringifyBigInts:()=>Ye,unstringifyBigInts:()=>Xe});var u={};r.r(u),r.d(u,{beBuff2int:()=>fr,beInt2Buff:()=>cr,bitReverse:()=>sr,buffReverseBits:()=>ur,leBuff2int:()=>dr,leInt2Buff:()=>pr,log2:()=>ar,stringifyBigInts:()=>hr,unstringifyBigInts:()=>lr});var h={};r.r(h),r.d(h,{P6:()=>Rc});var l={};r.r(l),r.d(l,{bufToHex:()=>Lc,getTokenAmountBigInt:()=>Kc,getTokenAmountString:()=>zc,hashBuffer:()=>Qc,hexToBuffer:()=>jc});var f={};r.r(f),r.d(f,{fix2Float:()=>Vc,float2Fix:()=>Hc,floorFix2Float:()=>Wc});var c={};r.r(c),r.d(c,{ETHER_TOKEN_ID:()=>Xc,GAS_LIMIT:()=>$c,GAS_MULTIPLIER:()=>td,METAMASK_MESSAGE:()=>Yc,TRANSACTION_POOL_KEY:()=>Zc,contractAddresses:()=>ed});var d={};r.r(d),r.d(d,{getAccount:()=>ad,getAccounts:()=>sd,getExit:()=>dd,getExits:()=>cd,getFees:()=>gd,getHistoryTransaction:()=>hd,getPoolTransaction:()=>ld,getToken:()=>md,getTokens:()=>pd,getTransactions:()=>ud,postPoolTransaction:()=>fd});var p={};r.r(p),r.d(p,{addPoolTransaction:()=>bd,getPoolTransactions:()=>wd,initializeTransactionPool:()=>vd,removePoolTransaction:()=>Ad});var m={};r.r(m),r.d(m,{getAccountIndex:()=>Ed,getEthereumAddress:()=>Id,getHermezAddress:()=>Md});var g={};r.r(g),r.d(g,{getProvider:()=>Sd,setProvider:()=>_d});var y={};r.r(y),r.d(y,{buildTransactionHashMessage:()=>Fd,generateL2Transaction:()=>Nd,getFee:()=>xd,getNonce:()=>kd,getTransactionType:()=>Bd,getTxId:()=>Cd});var v={};r.r(v),r.d(v,{BabyJubWallet:()=>Td,createWalletFromEtherAccount:()=>Pd,verifyBabyJub:()=>Rd});var w={};r.r(w),r.d(w,{TxState:()=>jd,TxType:()=>Qd,beautifyTransactionState:()=>Wd,deposit:()=>Kd,forceExit:()=>Hd,send:()=>Vd,withdraw:()=>Gd});var b=r(8935),A=r(1094);const M=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];function I(t,e){return e&&10!=e?16==e?"0x"==t.slice(0,2)?BigInt(t):BigInt("0x"+t):void 0:BigInt(t)}const E=I;function _(t,e){let r=0n;e=BigInt(e);for(let n=0;n<t.length;n++)r=r*e+BigInt(t[n]);return r}function S(t){const e=t.toString(16);return 4*(e.length-1)+M[parseInt(e[0],16)]}function C(t){return BigInt(t)<0n}function x(t){return!t}function B(t,e){return BigInt(t)<<BigInt(e)}function k(t,e){return BigInt(t)>>BigInt(e)}const F=B,N=k;function T(t){return 1n==(1n&BigInt(t))}function R(t){let e=BigInt(t);const r=[];for(;e;){if(1n&e){const t=2-Number(e%4n);r.push(t),e-=BigInt(t)}else r.push(0);e>>=1n}return r}function P(t){let e=BigInt(t);const r=[];for(;e;)1n&e?r.push(1):r.push(0),e>>=1n;return r}function O(t){if(t>BigInt(Number.MAX_SAFE_INTEGER))throw new Error("Number too big");return Number(t)}function U(t,e){const r=[];let n=BigInt(t);for(e=BigInt(e);n;)r.unshift(Number(n%e)),n/=e;return r}function D(t,e){return BigInt(t)+BigInt(e)}function q(t,e){return BigInt(t)-BigInt(e)}function L(t){return-BigInt(t)}function Q(t,e){return BigInt(t)*BigInt(e)}function j(t){return BigInt(t)*BigInt(t)}function z(t,e){return BigInt(t)**BigInt(e)}function K(t,e){return BigInt(t)**BigInt(e)}function H(t){return BigInt(t)>=0?BigInt(t):-BigInt(t)}function G(t,e){return BigInt(t)/BigInt(e)}function V(t,e){return BigInt(t)%BigInt(e)}function W(t,e){return BigInt(t)==BigInt(e)}function J(t,e){return BigInt(t)!=BigInt(e)}function Z(t,e){return BigInt(t)<BigInt(e)}function Y(t,e){return BigInt(t)>BigInt(e)}function X(t,e){return BigInt(t)<=BigInt(e)}function $(t,e){return BigInt(t)>=BigInt(e)}function tt(t,e){return BigInt(t)&BigInt(e)}function et(t,e){return BigInt(t)|BigInt(e)}function rt(t,e){return BigInt(t)^BigInt(e)}function nt(t,e){return BigInt(t)&&BigInt(e)}function it(t,e){return BigInt(t)||BigInt(e)}function ot(t){return!BigInt(t)}var st=r(4736),at=r.n(st);function ut(t,e){return"string"==typeof t&&"0x"==t.slice(0,2)?st(t.slice(2),16):st(t,e)}const ht=ut;function lt(t,e){return st.fromArray(t,e)}function ft(t){return st(t).bitLength()}function ct(t){return st(t).isNegative()}function dt(t){return st(t).isZero()}function pt(t,e){return st(t).shiftLeft(e)}function mt(t,e){return st(t).shiftRight(e)}const gt=pt,yt=mt;function vt(t){return st(t).isOdd()}function wt(t){let e=st(t);const r=[];for(;e.gt(st.zero);){if(e.isOdd()){const t=2-e.mod(4).toJSNumber();r.push(t),e=e.minus(t)}else r.push(0);e=e.shiftRight(1)}return r}function bt(t){let e=st(t);const r=[];for(;e.gt(st.zero);)e.isOdd()?r.push(1):r.push(0),e=e.shiftRight(1);return r}function At(t){if(!t.lt(st("9007199254740992",10)))throw new Error("Number too big");return t.toJSNumber()}function Mt(t,e){return st(t).toArray(e)}function It(t,e){return st(t).add(st(e))}function Et(t,e){return st(t).minus(st(e))}function _t(t){return st.zero.minus(st(t))}function St(t,e){return st(t).times(st(e))}function Ct(t){return st(t).square()}function xt(t,e){return st(t).pow(st(e))}function Bt(t,e){return st(t).pow(st(e))}function kt(t){return st(t).abs()}function Ft(t,e){return st(t).divide(st(e))}function Nt(t,e){return st(t).mod(st(e))}function Tt(t,e){return st(t).eq(st(e))}function Rt(t,e){return st(t).neq(st(e))}function Pt(t,e){return st(t).lt(st(e))}function Ot(t,e){return st(t).gt(st(e))}function Ut(t,e){return st(t).leq(st(e))}function Dt(t,e){return st(t).geq(st(e))}function qt(t,e){return st(t).and(st(e))}function Lt(t,e){return st(t).or(st(e))}function Qt(t,e){return st(t).xor(st(e))}function jt(t,e){return!st(t).isZero()&&!st(e).isZero()}function zt(t,e){return!st(t).isZero()||!st(e).isZero()}function Kt(t){return st(t).isZero()}const Ht="function"==typeof BigInt;let Gt={};Ht?Object.assign(Gt,n):Object.assign(Gt,i),Gt.toRprLE=function(t,e,r,n){const i="0000000"+r.toString(16),o=new Uint32Array(t.buffer,e,n/4),s=1+(4*(i.length-7)-1>>5);for(let t=0;t<s;t++)o[t]=parseInt(i.substring(i.length-8*t-8,i.length-8*t),16);for(let t=s;t<o.length;t++)o[t]=0;for(let e=4*o.length;e<n;e++)t[e]=Gt.toNumber(Gt.band(Gt.shiftRight(r,8*e),255))},Gt.toRprBE=function(t,e,r,n){const i="0000000"+r.toString(16),o=new DataView(t.buffer,t.byteOffset+e,n),s=1+(4*(i.length-7)-1>>5);for(let t=0;t<s;t++)o.setUint32(n-4*t-4,parseInt(i.substring(i.length-8*t-8,i.length-8*t),16),!1);for(let t=0;t<n/4-s;t++)o[t]=0},Gt.fromRprLE=function(t,e,r){r=r||t.byteLength;const n=new Uint32Array(t.buffer,e,r/4),i=new Array(r/4);return n.forEach(((t,e)=>i[i.length-e-1]=t.toString(16).padStart(8,"0"))),Gt.fromString(i.join(""),16)},Gt.fromRprBE=function(t,e,r){r=r||t.byteLength;const n=new DataView(t.buffer,t.byteOffset+e,r),i=new Array(r/4);for(let t=0;t<r/4;t++)i[t]=n.getUint32(4*t,!1).toString(16).padStart(8,"0");return Gt.fromString(i.join(""),16)},Gt.toString=function(t,e){return t.toString(e)},Gt.toLEBuff=function(t){const e=new Uint8Array(Math.floor((Gt.bitLength(t)-1)/8)+1);return Gt.toRprLE(e,0,t,e.byteLength),e},Gt.zero=Gt.e(0),Gt.one=Gt.e(1);let{toRprLE:Vt,toRprBE:Wt,fromRprLE:Jt,fromRprBE:Zt,toString:Yt,toLEBuff:Xt,zero:$t,one:te,fromString:ee,e:re,fromArray:ne,bitLength:ie,isNegative:oe,isZero:se,shiftLeft:ae,shiftRight:ue,shl:he,shr:le,isOdd:fe,naf:ce,bits:de,toNumber:pe,toArray:me,add:ge,sub:ye,neg:ve,mul:we,square:be,pow:Ae,exp:Me,abs:Ie,div:Ee,mod:_e,eq:Se,neq:Ce,lt:xe,gt:Be,leq:ke,geq:Fe,band:Ne,bor:Te,bxor:Re,land:Pe,lor:Oe,lnot:Ue}=Gt;const De=[];for(let t=0;t<256;t++)De[t]=qe(t,8);function qe(t,e){let r=0,n=t;for(let t=0;t<e;t++)r<<=1,r|=1&n,n>>=1;return r}function Le(t,e,r){if(se(r))return t.one;const n=de(r);if(0==n.legth)return t.one;let i=e;for(let r=n.length-2;r>=0;r--)i=t.square(i),n[r]&&(i=t.mul(i,e));return i}function Qe(t){if(t.m%2==1)if(Se(_e(t.p,4),1))if(Se(_e(t.p,8),1))if(Se(_e(t.p,16),1))!function(t){for(t.sqrt_q=Ae(t.p,t.m),t.sqrt_s=0,t.sqrt_t=ye(t.sqrt_q,1);!fe(t.sqrt_t);)t.sqrt_s=t.sqrt_s+1,t.sqrt_t=Ee(t.sqrt_t,2);let e=t.one;for(;t.eq(e,t.one);){const r=t.random();t.sqrt_z=t.pow(r,t.sqrt_t),e=t.pow(t.sqrt_z,2**(t.sqrt_s-1))}t.sqrt_tm1d2=Ee(ye(t.sqrt_t,1),2),t.sqrt=function(t){const e=this;if(e.isZero(t))return e.zero;let r=e.pow(t,e.sqrt_tm1d2);const n=e.pow(e.mul(e.square(r),t),2**(e.sqrt_s-1));if(e.eq(n,e.negone))return null;let i=e.sqrt_s,o=e.mul(t,r),s=e.mul(o,r),a=e.sqrt_z;for(;!e.eq(s,e.one);){let t=e.square(s),n=1;for(;!e.eq(t,e.one);)t=e.square(t),n++;r=a;for(let t=0;t<i-n-1;t++)r=e.square(r);a=e.square(r),s=e.mul(s,a),o=e.mul(o,r),i=n}return e.geq(o,e.zero)?o:e.neg(o)}}(t);else{if(!Se(_e(t.p,16),9))throw new Error("Field withot sqrt");!function(t){t.sqrt=function(){throw new Error("Sqrt alg 4 not implemented")}}(t)}else{if(!Se(_e(t.p,8),5))throw new Error("Field withot sqrt");!function(t){t.sqrt=function(){throw new Error("Sqrt alg 3 not implemented")}}(t)}else Se(_e(t.p,4),3)&&function(t){t.sqrt_q=Ae(t.p,t.m),t.sqrt_e1=Ee(ye(t.sqrt_q,3),4),t.sqrt=function(e){if(this.isZero(e))return this.zero;const r=this.pow(e,this.sqrt_e1),n=this.mul(this.square(r),e);if(this.eq(n,this.negone))return null;const i=this.mul(r,e);return t.geq(i,t.zero)?i:t.neg(i)}}(t);else{const e=_e(Ae(t.p,t.m/2),4);1==e?function(t){t.sqrt=function(){throw new Error("Sqrt alg 10 not implemented")}}(t):3==e?function(t){t.sqrt_q=Ae(t.p,t.m/2),t.sqrt_e34=Ee(ye(t.sqrt_q,3),4),t.sqrt_e12=Ee(ye(t.sqrt_q,1),2),t.frobenius=function(e,r){return e%2==1?t.conjugate(r):r},t.sqrt=function(t){const e=this,r=e.pow(t,e.sqrt_e34),n=e.mul(e.square(r),t),i=e.mul(e.frobenius(1,n),n);if(e.eq(i,e.negone))return null;const o=e.mul(r,t);let s;if(e.eq(n,e.negone))s=e.mul(o,[e.F.zero,e.F.one]);else{const t=e.pow(e.add(e.one,n),e.sqrt_e12);s=e.mul(t,o)}return e.geq(s,e.zero)?s:e.neg(s)}}(t):function(t){t.sqrt=function(){throw new Error("Sqrt alg 8 not implemented")}}(t)}}var je=r(6417);function ze(t){let e=new Uint8Array(t);if("undefined"!=typeof window)if(void 0!==window.crypto)window.crypto.getRandomValues(e);else for(let r=0;r<t;r++)e[r]=4294967296*Math.random()>>>0;else je.randomFillSync(e);return e}let Ke;function He(t){if("bigint"==typeof t||void 0!==t.eq)return t.toString(10);if(t instanceof Uint8Array)return Jt(t,0);if(Array.isArray(t))return t.map(He);if("object"==typeof t){const e={};return Object.keys(t).forEach((r=>{e[r]=He(t[r])})),e}return t}function Ge(t){if("string"==typeof t&&/^[0-9]+$/.test(t))return BigInt(t);if(Array.isArray(t))return t.map(Ge);if("object"==typeof t){if(null===t)return null;const e={};return Object.keys(t).forEach((r=>{e[r]=Ge(t[r])})),e}return t}function Ve(t){let e=0n,r=t.length,n=0;const i=new DataView(t.buffer,t.byteOffset,t.byteLength);for(;r>0;)r>=4?(r-=4,e+=BigInt(i.getUint32(r))<<BigInt(8*n),n+=4):r>=2?(r-=2,e+=BigInt(i.getUint16(r))<<BigInt(8*n),n+=2):(r-=1,e+=BigInt(i.getUint8(r))<<BigInt(8*n),n+=1);return e}function We(t,e){let r=t;const n=new Uint8Array(e),i=new DataView(n.buffer);let o=e;for(;o>0;)o-4>=0?(o-=4,i.setUint32(o,Number(0xFFFFFFFFn&r)),r>>=32n):o-2>=0?(o-=2,i.setUint16(o,Number(0xFFFFn&r)),r>>=16n):(o-=1,i.setUint8(o,Number(0xFFn&r)),r>>=8n);if(r)throw new Error("Number does not fit in this length");return n}function Je(t){let e=0n,r=0;const n=new DataView(t.buffer,t.byteOffset,t.byteLength);for(;r<t.length;)r+4<=t.length?(e+=BigInt(n.getUint32(r,!0))<<BigInt(8*r),r+=4):r+4<=t.length?(e+=BigInt(n.getUint16(r,!0))<<BigInt(8*r),r+=2):(e+=BigInt(n.getUint8(r,!0))<<BigInt(8*r),r+=1);return e}function Ze(t,e){let r=t;void 0===e&&0==(e=Math.floor((ie(t)-1)/8)+1)&&(e=1);const n=new Uint8Array(e),i=new DataView(n.buffer);let o=0;for(;o<e;)o+4<=e?(i.setUint32(o,Number(0xFFFFFFFFn&r),!0),o+=4,r>>=32n):o+2<=e?(i.setUint16(Number(o,0xFFFFn&r),!0),o+=2,r>>=16n):(i.setUint8(Number(o,0xFFn&r),!0),o+=1,r>>=8n);if(r)throw new Error("Number does not fit in this length");return n}function Ye(t){if("bigint"==typeof t||void 0!==t.eq)return t.toString(10);if(Array.isArray(t))return t.map(Ye);if("object"==typeof t){const e={};return Object.keys(t).forEach((r=>{e[r]=Ye(t[r])})),e}return t}function Xe(t){if("string"==typeof t&&/^[0-9]+$/.test(t))return st(t);if(Array.isArray(t))return t.map(Xe);if("object"==typeof t){const e={};return Object.keys(t).forEach((r=>{e[r]=Xe(t[r])})),e}return t}function $e(t){let e=st.zero;for(let r=0;r<t.length;r++){const n=st(t[t.length-r-1]);e=e.add(n.shiftLeft(8*r))}return e}function tr(t,e){let r=t,n=e-1;const i=new Uint8Array(e);for(;r.gt(st.zero)&&n>=0;){let t=Number(r.and(st("255")));i[n]=t,n--,r=r.shiftRight(8)}if(!r.eq(st.zero))throw new Error("Number does not fit in this length");return i}function er(t){let e=st.zero;for(let r=0;r<t.length;r++){const n=st(t[r]);e=e.add(n.shiftLeft(8*r))}return e}function rr(t,e){let r=t,n=0;const i=new Uint8Array(e);for(;r.gt(st.zero)&&n<i.length;){let t=Number(r.and(st(255)));i[n]=t,n++,r=r.shiftRight(8)}if(!r.eq(st.zero))throw new Error("Number does not fit in this length");return i}Ke="function"==typeof BigInt?class{constructor(t){this.type="F1",this.one=1n,this.zero=0n,this.p=BigInt(t),this.m=1,this.negone=this.p-1n,this.two=2n,this.half=this.p>>1n,this.bitLength=ie(this.p),this.mask=(1n<<BigInt(this.bitLength))-1n,this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=2*this.n64,this.n8=8*this.n64,this.R=this.e(1n<<BigInt(64*this.n64)),this.Ri=this.inv(this.R);const e=this.negone>>1n;this.nqr=this.two;let r=this.pow(this.nqr,e);for(;!this.eq(r,this.negone);)this.nqr=this.nqr+1n,r=this.pow(this.nqr,e);for(this.s=0,this.t=this.negone;0n==(1n&this.t);)this.s=this.s+1,this.t=this.t>>1n;this.nqr_to_t=this.pow(this.nqr,this.t),Qe(this)}e(t,e){let r;if(e?16==e&&(r=BigInt("0x"+t)):r=BigInt(t),r<0){let t=-r;return t>=this.p&&(t%=this.p),this.p-t}return r>=this.p?r%this.p:r}add(t,e){const r=t+e;return r>=this.p?r-this.p:r}sub(t,e){return t>=e?t-e:this.p-e+t}neg(t){return t?this.p-t:t}mul(t,e){return t*e%this.p}mulScalar(t,e){return t*this.e(e)%this.p}square(t){return t*t%this.p}eq(t,e){return t==e}neq(t,e){return t!=e}lt(t,e){return(t>this.half?t-this.p:t)<(e>this.half?e-this.p:e)}gt(t,e){return(t>this.half?t-this.p:t)>(e>this.half?e-this.p:e)}leq(t,e){return(t>this.half?t-this.p:t)<=(e>this.half?e-this.p:e)}geq(t,e){return(t>this.half?t-this.p:t)>=(e>this.half?e-this.p:e)}div(t,e){return this.mul(t,this.inv(e))}idiv(t,e){if(!e)throw new Error("Division by zero");return t/e}inv(t){if(!t)throw new Error("Division by zero");let e=0n,r=this.p,n=1n,i=t%this.p;for(;i;){let t=r/i;[e,n]=[n,e-t*n],[r,i]=[i,r-t*i]}return e<0n&&(e+=this.p),e}mod(t,e){return t%e}pow(t,e){return Le(this,t,e)}exp(t,e){return Le(this,t,e)}band(t,e){const r=t&e&this.mask;return r>=this.p?r-this.p:r}bor(t,e){const r=(t|e)&this.mask;return r>=this.p?r-this.p:r}bxor(t,e){const r=(t^e)&this.mask;return r>=this.p?r-this.p:r}bnot(t){const e=t^this.mask;return e>=this.p?e-this.p:e}shl(t,e){if(Number(e)<this.bitLength){const r=t<<e&this.mask;return r>=this.p?r-this.p:r}{const r=this.p-e;return Number(r)<this.bitLength?t>>r:0n}}shr(t,e){if(Number(e)<this.bitLength)return t>>e;{const r=this.p-e;if(Number(r)<this.bitLength){const e=t<<r&this.mask;return e>=this.p?e-this.p:e}return 0}}land(t,e){return t&&e?1n:0n}lor(t,e){return t||e?1n:0n}lnot(t){return t?0n:1n}sqrt_old(t){if(0n==t)return this.zero;if(1n!=this.pow(t,this.negone>>this.one))return null;let e=this.s,r=this.nqr_to_t,n=this.pow(t,this.t),i=this.pow(t,this.add(this.t,this.one)>>1n);for(;1n!=n;){let t=this.square(n),o=1;for(;1n!=t;)o++,t=this.square(t);let s=r;for(let t=0;t<e-o-1;t++)s=this.square(s);e=o,r=this.square(s),n=this.mul(n,r),i=this.mul(i,s)}return i>this.p>>1n&&(i=this.neg(i)),i}normalize(t,e){if((t=BigInt(t,e))<0){let e=-t;return e>=this.p&&(e%=this.p),this.p-e}return t>=this.p?t%this.p:t}random(){const t=2*this.bitLength/8;let e=0n;for(let r=0;r<t;r++)e=(e<<8n)+BigInt(ze(1)[0]);return e%this.p}toString(t,e){let r;return r=t>this.half?"-"+(this.p-t).toString(e):t.toString(e),r}isZero(t){return 0n==t}fromRng(t){let e;do{e=0n;for(let r=0;r<this.n64;r++)e+=t.nextU64()<<BigInt(64*r);e&=this.mask}while(e>=this.p);return e=e*this.Ri%this.p,e}}:class{constructor(t){this.type="F1",this.one=st.one,this.zero=st.zero,this.p=st(t),this.m=1,this.negone=this.p.minus(st.one),this.two=st(2),this.half=this.p.shiftRight(1),this.bitLength=this.p.bitLength(),this.mask=st.one.shiftLeft(this.bitLength).minus(st.one),this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=2*this.n64,this.n8=8*this.n64,this.R=st.one.shiftLeft(64*this.n64),this.Ri=this.inv(this.R);const e=this.negone.shiftRight(this.one);this.nqr=this.two;let r=this.pow(this.nqr,e);for(;!r.equals(this.negone);)this.nqr=this.nqr.add(this.one),r=this.pow(this.nqr,e);for(this.s=this.zero,this.t=this.negone;!this.t.isOdd();)this.s=this.s.add(this.one),this.t=this.t.shiftRight(this.one);this.nqr_to_t=this.pow(this.nqr,this.t),Qe(this)}e(t,e){const r=st(t,e);return this.normalize(r)}add(t,e){let r=t.add(e);return r.geq(this.p)&&(r=r.minus(this.p)),r}sub(t,e){return t.geq(e)?t.minus(e):this.p.minus(e.minus(t))}neg(t){return t.isZero()?t:this.p.minus(t)}mul(t,e){return t.times(e).mod(this.p)}mulScalar(t,e){return t.times(st(e)).mod(this.p)}square(t){return t.square().mod(this.p)}eq(t,e){return t.eq(e)}neq(t,e){return t.neq(e)}lt(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.lt(n)}gt(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.gt(n)}leq(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.leq(n)}geq(t,e){const r=t.gt(this.half)?t.minus(this.p):t,n=e.gt(this.half)?e.minus(this.p):e;return r.geq(n)}div(t,e){if(e.isZero())throw new Error("Division by zero");return t.times(e.modInv(this.p)).mod(this.p)}idiv(t,e){if(e.isZero())throw new Error("Division by zero");return t.divide(e)}inv(t){if(t.isZero())throw new Error("Division by zero");return t.modInv(this.p)}mod(t,e){return t.mod(e)}pow(t,e){return t.modPow(e,this.p)}exp(t,e){return t.modPow(e,this.p)}band(t,e){return t.and(e).and(this.mask).mod(this.p)}bor(t,e){return t.or(e).and(this.mask).mod(this.p)}bxor(t,e){return t.xor(e).and(this.mask).mod(this.p)}bnot(t){return t.xor(this.mask).mod(this.p)}shl(t,e){if(e.lt(this.bitLength))return t.shiftLeft(e).and(this.mask).mod(this.p);{const r=this.p.minus(e);return r.lt(this.bitLength)?this.shr(t,r):st.zero}}shr(t,e){if(e.lt(this.bitLength))return t.shiftRight(e);{const r=this.p.minus(e);return r.lt(this.bitLength)?this.shl(t,r):st.zero}}land(t,e){return t.isZero()||e.isZero()?st.zero:st.one}lor(t,e){return t.isZero()&&e.isZero()?st.zero:st.one}lnot(t){return t.isZero()?st.one:st.zero}sqrt_old(t){if(t.equals(this.zero))return this.zero;if(!this.pow(t,this.negone.shiftRight(this.one)).equals(this.one))return null;let e=parseInt(this.s),r=this.nqr_to_t,n=this.pow(t,this.t),i=this.pow(t,this.add(this.t,this.one).shiftRight(this.one));for(;!n.equals(this.one);){let t=this.square(n),o=1;for(;!t.equals(this.one);)o++,t=this.square(t);let s=r;for(let t=0;t<e-o-1;t++)s=this.square(s);e=o,r=this.square(s),n=this.mul(n,r),i=this.mul(i,s)}return i.greater(this.p.shiftRight(this.one))&&(i=this.neg(i)),i}normalize(t){return(t=st(t)).isNegative()?this.p.minus(t.abs().mod(this.p)):t.mod(this.p)}random(){let t=st(0),e=st(this.p.square());for(;!e.isZero();)t=t.shiftLeft(8).add(st(ze(1)[0])),e=e.shiftRight(8);return t.mod(this.p)}toString(t,e){let r;return r=t.lesserOrEquals(this.p.shiftRight(st(1)))?t.toString(e):"-"+this.p.minus(t).toString(e),r}isZero(t){return t.isZero()}fromRng(t){let e;do{e=st(0);for(let r=0;r<this.n64;r++)e=e.add(e,t.nextU64().shiftLeft(64*r));e=e.and(this.mask)}while(e.geq(this.p));return e=e.times(this.Ri).mod(this.q),e}},r(8178);let nr={};"function"==typeof BigInt?Object.assign(nr,s):Object.assign(nr,a);const ir=[];for(let t=0;t<256;t++)ir[t]=or(t,8);function or(t,e){let r=0,n=t;for(let t=0;t<e;t++)r<<=1,r|=1&n,n>>=1;return r}nr.bitReverse=function(t,e){return(ir[t>>>24]|ir[t>>>16&255]<<8|ir[t>>>8&255]<<16|ir[255&t]<<24)>>>32-e},nr.log2=function(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)},nr.buffReverseBits=function(t,e){const r=t.byteLength/e,n=nr.log2(r);if(r!=1<<n)throw new Error("Invalid number of pointers");for(let i=0;i<r;i++){const r=nr.bitReverse(i,n);if(i>r){const n=t.slice(i*e,(i+1)*e);t.set(t.slice(r*e,(r+1)*e),i*e),t.set(n,r*e)}}};let{bitReverse:sr,log2:ar,buffReverseBits:ur,stringifyBigInts:hr,unstringifyBigInts:lr,beBuff2int:fr,beInt2Buff:cr,leBuff2int:dr,leInt2Buff:pr}=nr;r(2087);const mr=require("worker_threads");let gr;"undefined"!=typeof window||(gr=mr.Worker),global.curve_bn128=null,global.curve_bls12381=null,re("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),re("21888242871839275222246405745257275088548364400416034343698204186575808495617"),re("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),re("21888242871839275222246405745257275088696311157297823662689037894645226208583");const yr=o,vr=u;class wr{constructor(t,e){this.r8=t,this.s=e}static newFromCompressed(t){if(64!==t.length)throw new Error("buf must be 64 bytes");const e=b.eddsa.unpackSignature(t);if(null==e.R8)throw new Error("unpackSignature failed");return new wr(e.R8,e.S)}}class br{constructor(t){this.p=t}static newFromCompressed(t){const e=vr.leInt2Buff(t,32);if(32!==e.length)throw new Error("buf must be 32 bytes");const r=b.babyJub.unpackPoint(e);if(null==r)throw new Error("unpackPoint failed");return new br(r)}compress(){return vr.leBuff2int(b.babyJub.packPoint(this.p))}}class Ar{constructor(t){if(32!==t.length)throw new Error("buf must be 32 bytes");this.sk=t}public(){return new br(b.eddsa.prv2pub(this.sk))}}const Mr=[0,316e-26,1e-23,316e-25,1e-22,316e-24,1e-21,316e-23,1e-20,3.16e-20,1e-19,316e-21,1e-18,316e-20,1e-17,316e-19,1e-16,316e-18,1e-15,316e-17,1e-14,316e-16,1e-13,316e-15,1e-12,316e-14,1e-11,316e-13,1e-10,3.16e-10,1e-9,3.16e-9,1e-8,11e-9,1.21e-8,1.33e-8,1.47e-8,1.62e-8,1.78e-8,1.96e-8,2.15e-8,2.37e-8,2.61e-8,2.87e-8,3.16e-8,3.48e-8,3.83e-8,4.22e-8,4.64e-8,5.11e-8,5.62e-8,6.19e-8,6.81e-8,75e-9,8.25e-8,9.09e-8,1e-7,11e-8,121e-9,133e-9,147e-9,162e-9,178e-9,196e-9,215e-9,237e-9,261e-9,287e-9,316e-9,348e-9,383e-9,422e-9,464e-9,511e-9,562e-9,619e-9,681e-9,75e-8,825e-9,909e-9,1e-6,11e-7,121e-8,133e-8,147e-8,162e-8,178e-8,196e-8,215e-8,237e-8,261e-8,287e-8,316e-8,348e-8,383e-8,422e-8,464e-8,511e-8,562e-8,619e-8,681e-8,75e-7,825e-8,909e-8,1e-5,11e-6,121e-7,133e-7,147e-7,162e-7,178e-7,196e-7,215e-7,237e-7,261e-7,287e-7,316e-7,348e-7,383e-7,422e-7,464e-7,511e-7,562e-7,619e-7,681e-7,75e-6,825e-7,909e-7,1e-4,11e-5,121e-6,133e-6,147e-6,162e-6,178e-6,196e-6,215e-6,237e-6,261e-6,287e-6,316e-6,348e-6,383e-6,422e-6,464e-6,511e-6,562e-6,619e-6,681e-6,75e-5,825e-6,909e-6,.001,.0011,.00121,.00133,.00147,.00162,.00178,.00196,.00215,.00237,.00261,.00287,.00316,.00348,.00383,.00422,.00464,.00511,.00562,.00619,.00681,.0075,.00825,.00909,.01,.011,.0121,.0133,.0147,.0162,.0178,.0196,.0215,.0237,.0261,.0287,.0316,.0348,.0383,.0422,.0464,.0511,.0562,.0619,.0681,.075,.0825,.0909,.1,.11,.121,.133,.147,.162,.178,.196,.215,.237,.261,.287,.316,.348,.383,.422,.464,.511,.562,.619,.681,.75,.825,.909,1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13,1e14,1e15,1e16,1e17,1e18,1e19,1e20,1e21,1e22,1e23,1e24,1e25,1e26,1e27,1e28,1e29,1e30,1e31];var Ir="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function Er(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function _r(t,e){return t(e={exports:{}},e.exports),e.exports}for(var Sr=[],Cr=[],xr="undefined"!=typeof Uint8Array?Uint8Array:Array,Br="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",kr=0,Fr=Br.length;kr<Fr;++kr)Sr[kr]=Br[kr],Cr[Br.charCodeAt(kr)]=kr;function Nr(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function Tr(t,e,r){for(var n,i,o=[],s=e;s<r;s+=3)n=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),o.push(Sr[(i=n)>>18&63]+Sr[i>>12&63]+Sr[i>>6&63]+Sr[63&i]);return o.join("")}Cr["-".charCodeAt(0)]=62,Cr["_".charCodeAt(0)]=63;var Rr=function(t){var e,r,n=Nr(t),i=n[0],o=n[1],s=new xr(function(t,e,r){return 3*(e+r)/4-r}(0,i,o)),a=0,u=o>0?i-4:i;for(r=0;r<u;r+=4)e=Cr[t.charCodeAt(r)]<<18|Cr[t.charCodeAt(r+1)]<<12|Cr[t.charCodeAt(r+2)]<<6|Cr[t.charCodeAt(r+3)],s[a++]=e>>16&255,s[a++]=e>>8&255,s[a++]=255&e;return 2===o&&(e=Cr[t.charCodeAt(r)]<<2|Cr[t.charCodeAt(r+1)]>>4,s[a++]=255&e),1===o&&(e=Cr[t.charCodeAt(r)]<<10|Cr[t.charCodeAt(r+1)]<<4|Cr[t.charCodeAt(r+2)]>>2,s[a++]=e>>8&255,s[a++]=255&e),s},Pr=function(t){for(var e,r=t.length,n=r%3,i=[],o=16383,s=0,a=r-n;s<a;s+=o)i.push(Tr(t,s,s+o>a?a:s+o));return 1===n?(e=t[r-1],i.push(Sr[e>>2]+Sr[e<<4&63]+"==")):2===n&&(e=(t[r-2]<<8)+t[r-1],i.push(Sr[e>>10]+Sr[e>>4&63]+Sr[e<<2&63]+"=")),i.join("")},Or=function(t,e,r,n,i){var o,s,a=8*i-n-1,u=(1<<a)-1,h=u>>1,l=-7,f=r?i-1:0,c=r?-1:1,d=t[e+f];for(f+=c,o=d&(1<<-l)-1,d>>=-l,l+=a;l>0;o=256*o+t[e+f],f+=c,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=n;l>0;s=256*s+t[e+f],f+=c,l-=8);if(0===o)o=1-h;else{if(o===u)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),o-=h}return(d?-1:1)*s*Math.pow(2,o-n)},Ur=function(t,e,r,n,i,o){var s,a,u,h=8*o-i-1,l=(1<<h)-1,f=l>>1,c=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,p=n?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=l):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),(e+=s+f>=1?c/u:c*Math.pow(2,1-f))*u>=2&&(s++,u/=2),s+f>=l?(a=0,s=l):s+f>=1?(a=(e*u-1)*Math.pow(2,i),s+=f):(a=e*Math.pow(2,f-1)*Math.pow(2,i),s=0));i>=8;t[r+d]=255&a,d+=p,a/=256,i-=8);for(s=s<<i|a,h+=i;h>0;t[r+d]=255&s,d+=p,s/=256,h-=8);t[r+d-p]|=128*m},Dr=_r((function(t,e){var r="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=o,e.SlowBuffer=function(t){return+t!=t&&(t=0),o.alloc(+t)},e.INSPECT_MAX_BYTES=50;var n=2147483647;function i(t){if(t>n)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return Object.setPrototypeOf(e,o.prototype),e}function o(t,e,r){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return u(t)}return s(t,e,r)}function s(t,e,r){if("string"==typeof t)return function(t,e){if("string"==typeof e&&""!==e||(e="utf8"),!o.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var r=0|c(t,e),n=i(r),s=n.write(t,e);return s!==r&&(n=n.slice(0,s)),n}(t,e);if(ArrayBuffer.isView(t))return h(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(q(t,ArrayBuffer)||t&&q(t.buffer,ArrayBuffer))return l(t,e,r);if("undefined"!=typeof SharedArrayBuffer&&(q(t,SharedArrayBuffer)||t&&q(t.buffer,SharedArrayBuffer)))return l(t,e,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return o.from(n,e,r);var s=function(t){if(o.isBuffer(t)){var e=0|f(t.length),r=i(e);return 0===r.length||t.copy(r,0,0,e),r}return void 0!==t.length?"number"!=typeof t.length||L(t.length)?i(0):h(t):"Buffer"===t.type&&Array.isArray(t.data)?h(t.data):void 0}(t);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return o.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function a(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function u(t){return a(t),i(t<0?0:0|f(t))}function h(t){for(var e=t.length<0?0:0|f(t.length),r=i(e),n=0;n<e;n+=1)r[n]=255&t[n];return r}function l(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');var n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,o.prototype),n}function f(t){if(t>=n)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+n.toString(16)+" bytes");return 0|t}function c(t,e){if(o.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||q(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;for(var i=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return O(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return U(t).length;default:if(i)return n?-1:O(t).length;e=(""+e).toLowerCase(),i=!0}}function d(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return x(this,e,r);case"utf8":case"utf-8":return E(this,e,r);case"ascii":return S(this,e,r);case"latin1":case"binary":return C(this,e,r);case"base64":return I(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function p(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,n,i){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),L(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof e&&(e=o.from(e,n)),o.isBuffer(e))return 0===e.length?-1:g(t,e,r,n,i);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):g(t,[e],r,n,i);throw new TypeError("val must be string, number or Buffer")}function g(t,e,r,n,i){var o,s=1,a=t.length,u=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;s=2,a/=2,u/=2,r/=2}function h(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){var l=-1;for(o=r;o<a;o++)if(h(t,o)===h(e,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*s}else-1!==l&&(o-=o-l),l=-1}else for(r+u>a&&(r=a-u),o=r;o>=0;o--){for(var f=!0,c=0;c<u;c++)if(h(t,o+c)!==h(e,c)){f=!1;break}if(f)return o}return-1}function y(t,e,r,n){r=Number(r)||0;var i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=e.length;n>o/2&&(n=o/2);for(var s=0;s<n;++s){var a=parseInt(e.substr(2*s,2),16);if(L(a))return s;t[r+s]=a}return s}function v(t,e,r,n){return D(O(e,t.length-r),t,r,n)}function w(t,e,r,n){return D(function(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function b(t,e,r,n){return w(t,e,r,n)}function A(t,e,r,n){return D(U(e),t,r,n)}function M(t,e,r,n){return D(function(t,e){for(var r,n,i,o=[],s=0;s<t.length&&!((e-=2)<0);++s)n=(r=t.charCodeAt(s))>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function I(t,e,r){return 0===e&&r===t.length?Pr(t):Pr(t.slice(e,r))}function E(t,e,r){r=Math.min(t.length,r);for(var n=[],i=e;i<r;){var o,s,a,u,h=t[i],l=null,f=h>239?4:h>223?3:h>191?2:1;if(i+f<=r)switch(f){case 1:h<128&&(l=h);break;case 2:128==(192&(o=t[i+1]))&&(u=(31&h)<<6|63&o)>127&&(l=u);break;case 3:o=t[i+1],s=t[i+2],128==(192&o)&&128==(192&s)&&(u=(15&h)<<12|(63&o)<<6|63&s)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:o=t[i+1],s=t[i+2],a=t[i+3],128==(192&o)&&128==(192&s)&&128==(192&a)&&(u=(15&h)<<18|(63&o)<<12|(63&s)<<6|63&a)>65535&&u<1114112&&(l=u)}null===l?(l=65533,f=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),i+=f}return function(t){var e=t.length;if(e<=_)return String.fromCharCode.apply(String,t);for(var r="",n=0;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=_));return r}(n)}e.kMaxLength=n,o.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),o.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.byteOffset}}),o.poolSize=8192,o.from=function(t,e,r){return s(t,e,r)},Object.setPrototypeOf(o.prototype,Uint8Array.prototype),Object.setPrototypeOf(o,Uint8Array),o.alloc=function(t,e,r){return function(t,e,r){return a(t),t<=0?i(t):void 0!==e?"string"==typeof r?i(t).fill(e,r):i(t).fill(e):i(t)}(t,e,r)},o.allocUnsafe=function(t){return u(t)},o.allocUnsafeSlow=function(t){return u(t)},o.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==o.prototype},o.compare=function(t,e){if(q(t,Uint8Array)&&(t=o.from(t,t.offset,t.byteLength)),q(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),!o.isBuffer(t)||!o.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var r=t.length,n=e.length,i=0,s=Math.min(r,n);i<s;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},o.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return o.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var n=o.allocUnsafe(e),i=0;for(r=0;r<t.length;++r){var s=t[r];if(q(s,Uint8Array)&&(s=o.from(s)),!o.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(n,i),i+=s.length}return n},o.byteLength=c,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)p(this,e,e+1);return this},o.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)p(this,e,e+3),p(this,e+1,e+2);return this},o.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)p(this,e,e+7),p(this,e+1,e+6),p(this,e+2,e+5),p(this,e+3,e+4);return this},o.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?E(this,0,t):d.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(t){if(!o.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===o.compare(this,t)},o.prototype.inspect=function(){var t="",r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},r&&(o.prototype[r]=o.prototype.inspect),o.prototype.compare=function(t,e,r,n,i){if(q(t,Uint8Array)&&(t=o.from(t,t.offset,t.byteLength)),!o.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;for(var s=(i>>>=0)-(n>>>=0),a=(r>>>=0)-(e>>>=0),u=Math.min(s,a),h=this.slice(n,i),l=t.slice(e,r),f=0;f<u;++f)if(h[f]!==l[f]){s=h[f],a=l[f];break}return s<a?-1:a<s?1:0},o.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},o.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},o.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},o.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return y(this,t,e,r);case"utf8":case"utf-8":return v(this,t,e,r);case"ascii":return w(this,t,e,r);case"latin1":case"binary":return b(this,t,e,r);case"base64":return A(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,t,e,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var _=4096;function S(t,e,r){var n="";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function C(t,e,r){var n="";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function x(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var i="",o=e;o<r;++o)i+=Q[t[o]];return i}function B(t,e,r){for(var n=t.slice(e,r),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function k(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function F(t,e,r,n,i,s){if(!o.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<s)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function N(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function T(t,e,r,n,i){return e=+e,r>>>=0,i||N(t,0,r,4),Ur(t,e,r,n,23,4),r+4}function R(t,e,r,n,i){return e=+e,r>>>=0,i||N(t,0,r,8),Ur(t,e,r,n,52,8),r+8}o.prototype.slice=function(t,e){var r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);var n=this.subarray(t,e);return Object.setPrototypeOf(n,o.prototype),n},o.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||k(t,e,this.length);for(var n=this[t],i=1,o=0;++o<e&&(i*=256);)n+=this[t+o]*i;return n},o.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||k(t,e,this.length);for(var n=this[t+--e],i=1;e>0&&(i*=256);)n+=this[t+--e]*i;return n},o.prototype.readUInt8=function(t,e){return t>>>=0,e||k(t,1,this.length),this[t]},o.prototype.readUInt16LE=function(t,e){return t>>>=0,e||k(t,2,this.length),this[t]|this[t+1]<<8},o.prototype.readUInt16BE=function(t,e){return t>>>=0,e||k(t,2,this.length),this[t]<<8|this[t+1]},o.prototype.readUInt32LE=function(t,e){return t>>>=0,e||k(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},o.prototype.readUInt32BE=function(t,e){return t>>>=0,e||k(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},o.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||k(t,e,this.length);for(var n=this[t],i=1,o=0;++o<e&&(i*=256);)n+=this[t+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*e)),n},o.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||k(t,e,this.length);for(var n=e,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*e)),o},o.prototype.readInt8=function(t,e){return t>>>=0,e||k(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},o.prototype.readInt16LE=function(t,e){t>>>=0,e||k(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},o.prototype.readInt16BE=function(t,e){t>>>=0,e||k(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},o.prototype.readInt32LE=function(t,e){return t>>>=0,e||k(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},o.prototype.readInt32BE=function(t,e){return t>>>=0,e||k(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},o.prototype.readFloatLE=function(t,e){return t>>>=0,e||k(t,4,this.length),Or(this,t,!0,23,4)},o.prototype.readFloatBE=function(t,e){return t>>>=0,e||k(t,4,this.length),Or(this,t,!1,23,4)},o.prototype.readDoubleLE=function(t,e){return t>>>=0,e||k(t,8,this.length),Or(this,t,!0,52,8)},o.prototype.readDoubleBE=function(t,e){return t>>>=0,e||k(t,8,this.length),Or(this,t,!1,52,8)},o.prototype.writeUIntLE=function(t,e,r,n){t=+t,e>>>=0,r>>>=0,n||F(this,t,e,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},o.prototype.writeUIntBE=function(t,e,r,n){t=+t,e>>>=0,r>>>=0,n||F(this,t,e,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},o.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,1,255,0),this[e]=255&t,e+1},o.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},o.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},o.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},o.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},o.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){var i=Math.pow(2,8*r-1);F(this,t,e,r,i-1,-i)}var o=0,s=1,a=0;for(this[e]=255&t;++o<r&&(s*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/s>>0)-a&255;return e+r},o.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){var i=Math.pow(2,8*r-1);F(this,t,e,r,i-1,-i)}var o=r-1,s=1,a=0;for(this[e+o]=255&t;--o>=0&&(s*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/s>>0)-a&255;return e+r},o.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},o.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},o.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},o.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},o.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||F(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},o.prototype.writeFloatLE=function(t,e,r){return T(this,t,e,!0,r)},o.prototype.writeFloatBE=function(t,e,r){return T(this,t,e,!1,r)},o.prototype.writeDoubleLE=function(t,e,r){return R(this,t,e,!0,r)},o.prototype.writeDoubleBE=function(t,e,r){return R(this,t,e,!1,r)},o.prototype.copy=function(t,e,r,n){if(!o.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i=n-r;if(this===t&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(e,r,n);else if(this===t&&r<e&&e<n)for(var s=i-1;s>=0;--s)t[s+e]=this[s+r];else Uint8Array.prototype.set.call(t,this.subarray(r,n),e);return i},o.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!o.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===t.length){var i=t.charCodeAt(0);("utf8"===n&&i<128||"latin1"===n)&&(t=i)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;var s;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(s=e;s<r;++s)this[s]=t;else{var a=o.isBuffer(t)?t:o.from(t,n),u=a.length;if(0===u)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(s=0;s<r-e;++s)this[s+e]=a[s%u]}return this};var P=/[^+/0-9A-Za-z-_]/g;function O(t,e){var r;e=e||1/0;for(var n=t.length,i=null,o=[],s=0;s<n;++s){if((r=t.charCodeAt(s))>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function U(t){return Rr(function(t){if((t=(t=t.split("=")[0]).trim().replace(P,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function D(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function q(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function L(t){return t!=t}var Q=function(){for(var t="0123456789abcdef",e=new Array(256),r=0;r<16;++r)for(var n=16*r,i=0;i<16;++i)e[n+i]=t[r]+t[i];return e}()})),qr=(Dr.Buffer,Dr.SlowBuffer,Dr.INSPECT_MAX_BYTES,Dr.kMaxLength,_r((function(t){!function(t,e){function r(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function i(t,e,r){if(i.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=i:e.BN=i,i.BN=i,i.wordSize=26;try{o=Dr.Buffer}catch(t){}function s(t,e,r){for(var n=0,i=Math.min(t.length,r),o=e;o<i;o++){var s=t.charCodeAt(o)-48;n<<=4,n|=s>=49&&s<=54?s-49+10:s>=17&&s<=22?s-17+10:15&s}return n}function a(t,e,r,n){for(var i=0,o=Math.min(t.length,r),s=e;s<o;s++){var a=t.charCodeAt(s)-48;i*=n,i+=a>=49?a-49+10:a>=17?a-17+10:a}return i}i.isBN=function(t){return t instanceof i||null!==t&&"object"==typeof t&&t.constructor.wordSize===i.wordSize&&Array.isArray(t.words)},i.max=function(t,e){return t.cmp(e)>0?t:e},i.min=function(t,e){return t.cmp(e)<0?t:e},i.prototype._init=function(t,e,n){if("number"==typeof t)return this._initNumber(t,e,n);if("object"==typeof t)return this._initArray(t,e,n);"hex"===e&&(e=16),r(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===n&&this._initArray(this.toArray(),e,n)},i.prototype._initNumber=function(t,e,n){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),e,n)},i.prototype._initArray=function(t,e,n){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,s,a=0;if("be"===n)for(i=t.length-1,o=0;i>=0;i-=3)s=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);else if("le"===n)for(i=0,o=0;i<t.length;i+=3)s=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[o]|=s<<a&67108863,this.words[o+1]=s>>>26-a&67108863,(a+=24)>=26&&(a-=26,o++);return this.strip()},i.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,i,o=0;for(r=t.length-6,n=0;r>=e;r-=6)i=s(t,r,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303,(o+=24)>=26&&(o-=26,n++);r+6!==e&&(i=s(t,e,r+6),this.words[n]|=i<<o&67108863,this.words[n+1]|=i>>>26-o&4194303),this.strip()},i.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var n=0,i=1;i<=67108863;i*=e)n++;n--,i=i/e|0;for(var o=t.length-r,s=o%n,u=Math.min(o,o-s)+r,h=0,l=r;l<u;l+=n)h=a(t,l,l+n,e),this.imuln(i),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(0!==s){var f=1;for(h=a(t,l,t.length,e),l=0;l<s;l++)f*=e;this.imuln(f),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}},i.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},i.prototype.clone=function(){var t=new i(null);return this.copy(t),t},i.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},i.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},i.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},i.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var u=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],h=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var n=t.length+e.length|0;r.length=n,n=n-1|0;var i=0|t.words[0],o=0|e.words[0],s=i*o,a=67108863&s,u=s/67108864|0;r.words[0]=a;for(var h=1;h<n;h++){for(var l=u>>>26,f=67108863&u,c=Math.min(h,e.length-1),d=Math.max(0,h-t.length+1);d<=c;d++){var p=h-d|0;l+=(s=(i=0|t.words[p])*(o=0|e.words[d])+f)/67108864|0,f=67108863&s}r.words[h]=0|f,u=0|l}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}i.prototype.toString=function(t,e){var n;if(e=0|e||1,16===(t=t||10)||"hex"===t){n="";for(var i=0,o=0,s=0;s<this.length;s++){var a=this.words[s],f=(16777215&(a<<i|o)).toString(16);n=0!=(o=a>>>24-i&16777215)||s!==this.length-1?u[6-f.length]+f+n:f+n,(i+=2)>=26&&(i-=26,s--)}for(0!==o&&(n=o.toString(16)+n);n.length%e!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(t===(0|t)&&t>=2&&t<=36){var c=h[t],d=l[t];n="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modn(d).toString(t);n=(p=p.idivn(d)).isZero()?m+n:u[c-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%e!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},i.prototype.toJSON=function(){return this.toString(16)},i.prototype.toBuffer=function(t,e){return r(void 0!==o),this.toArrayLike(o,t,e)},i.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},i.prototype.toArrayLike=function(t,e,n){var i=this.byteLength(),o=n||Math.max(1,i);r(i<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0"),this.strip();var s,a,u="le"===e,h=new t(o),l=this.clone();if(u){for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[a]=s;for(;a<o;a++)h[a]=0}else{for(a=0;a<o-i;a++)h[a]=0;for(a=0;!l.isZero();a++)s=l.andln(255),l.iushrn(8),h[o-a-1]=s}return h},Math.clz32?i.prototype._countBits=function(t){return 32-Math.clz32(t)}:i.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},i.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},i.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},i.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return 0!==this.negative},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},i.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},i.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},i.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},i.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},i.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},i.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},i.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},i.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=e.words[n]^r.words[n];if(this!==e)for(;n<e.length;n++)this.words[n]=e.words[n];return this.length=e.length,this.strip()},i.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},i.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},i.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},i.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),n=t%26;this._expand(e),n>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return n>0&&(this.words[i]=~this.words[i]&67108863>>26-n),this.strip()},i.prototype.notn=function(t){return this.clone().inotn(t)},i.prototype.setn=function(t,e){r("number"==typeof t&&t>=0);var n=t/26|0,i=t%26;return this._expand(n+1),this.words[n]=e?this.words[n]|1<<i:this.words[n]&~(1<<i),this.strip()},i.prototype.iadd=function(t){var e,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var i=0,o=0;o<n.length;o++)e=(0|r.words[o])+(0|n.words[o])+i,this.words[o]=67108863&e,i=e>>>26;for(;0!==i&&o<r.length;o++)e=(0|r.words[o])+i,this.words[o]=67108863&e,i=e>>>26;if(this.length=r.length,0!==i)this.words[this.length]=i,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},i.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},i.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(r=this,n=t):(r=t,n=this);for(var o=0,s=0;s<n.length;s++)o=(e=(0|r.words[s])-(0|n.words[s])+o)>>26,this.words[s]=67108863&e;for(;0!==o&&s<r.length;s++)o=(e=(0|r.words[s])+o)>>26,this.words[s]=67108863&e;if(0===o&&s<r.length&&r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this.length=Math.max(this.length,s),r!==this&&(this.negative=1),this.strip()},i.prototype.sub=function(t){return this.clone().isub(t)};var c=function(t,e,r){var n,i,o,s=t.words,a=e.words,u=r.words,h=0,l=0|s[0],f=8191&l,c=l>>>13,d=0|s[1],p=8191&d,m=d>>>13,g=0|s[2],y=8191&g,v=g>>>13,w=0|s[3],b=8191&w,A=w>>>13,M=0|s[4],I=8191&M,E=M>>>13,_=0|s[5],S=8191&_,C=_>>>13,x=0|s[6],B=8191&x,k=x>>>13,F=0|s[7],N=8191&F,T=F>>>13,R=0|s[8],P=8191&R,O=R>>>13,U=0|s[9],D=8191&U,q=U>>>13,L=0|a[0],Q=8191&L,j=L>>>13,z=0|a[1],K=8191&z,H=z>>>13,G=0|a[2],V=8191&G,W=G>>>13,J=0|a[3],Z=8191&J,Y=J>>>13,X=0|a[4],$=8191&X,tt=X>>>13,et=0|a[5],rt=8191&et,nt=et>>>13,it=0|a[6],ot=8191&it,st=it>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,lt=0|a[8],ft=8191&lt,ct=lt>>>13,dt=0|a[9],pt=8191&dt,mt=dt>>>13;r.negative=t.negative^e.negative,r.length=19;var gt=(h+(n=Math.imul(f,Q))|0)+((8191&(i=(i=Math.imul(f,j))+Math.imul(c,Q)|0))<<13)|0;h=((o=Math.imul(c,j))+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(p,Q),i=(i=Math.imul(p,j))+Math.imul(m,Q)|0,o=Math.imul(m,j);var yt=(h+(n=n+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,H)|0)+Math.imul(c,K)|0))<<13)|0;h=((o=o+Math.imul(c,H)|0)+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(y,Q),i=(i=Math.imul(y,j))+Math.imul(v,Q)|0,o=Math.imul(v,j),n=n+Math.imul(p,K)|0,i=(i=i+Math.imul(p,H)|0)+Math.imul(m,K)|0,o=o+Math.imul(m,H)|0;var vt=(h+(n=n+Math.imul(f,V)|0)|0)+((8191&(i=(i=i+Math.imul(f,W)|0)+Math.imul(c,V)|0))<<13)|0;h=((o=o+Math.imul(c,W)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(b,Q),i=(i=Math.imul(b,j))+Math.imul(A,Q)|0,o=Math.imul(A,j),n=n+Math.imul(y,K)|0,i=(i=i+Math.imul(y,H)|0)+Math.imul(v,K)|0,o=o+Math.imul(v,H)|0,n=n+Math.imul(p,V)|0,i=(i=i+Math.imul(p,W)|0)+Math.imul(m,V)|0,o=o+Math.imul(m,W)|0;var wt=(h+(n=n+Math.imul(f,Z)|0)|0)+((8191&(i=(i=i+Math.imul(f,Y)|0)+Math.imul(c,Z)|0))<<13)|0;h=((o=o+Math.imul(c,Y)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(I,Q),i=(i=Math.imul(I,j))+Math.imul(E,Q)|0,o=Math.imul(E,j),n=n+Math.imul(b,K)|0,i=(i=i+Math.imul(b,H)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,H)|0,n=n+Math.imul(y,V)|0,i=(i=i+Math.imul(y,W)|0)+Math.imul(v,V)|0,o=o+Math.imul(v,W)|0,n=n+Math.imul(p,Z)|0,i=(i=i+Math.imul(p,Y)|0)+Math.imul(m,Z)|0,o=o+Math.imul(m,Y)|0;var bt=(h+(n=n+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,tt)|0)+Math.imul(c,$)|0))<<13)|0;h=((o=o+Math.imul(c,tt)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(S,Q),i=(i=Math.imul(S,j))+Math.imul(C,Q)|0,o=Math.imul(C,j),n=n+Math.imul(I,K)|0,i=(i=i+Math.imul(I,H)|0)+Math.imul(E,K)|0,o=o+Math.imul(E,H)|0,n=n+Math.imul(b,V)|0,i=(i=i+Math.imul(b,W)|0)+Math.imul(A,V)|0,o=o+Math.imul(A,W)|0,n=n+Math.imul(y,Z)|0,i=(i=i+Math.imul(y,Y)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,Y)|0,n=n+Math.imul(p,$)|0,i=(i=i+Math.imul(p,tt)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,tt)|0;var At=(h+(n=n+Math.imul(f,rt)|0)|0)+((8191&(i=(i=i+Math.imul(f,nt)|0)+Math.imul(c,rt)|0))<<13)|0;h=((o=o+Math.imul(c,nt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(B,Q),i=(i=Math.imul(B,j))+Math.imul(k,Q)|0,o=Math.imul(k,j),n=n+Math.imul(S,K)|0,i=(i=i+Math.imul(S,H)|0)+Math.imul(C,K)|0,o=o+Math.imul(C,H)|0,n=n+Math.imul(I,V)|0,i=(i=i+Math.imul(I,W)|0)+Math.imul(E,V)|0,o=o+Math.imul(E,W)|0,n=n+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,Y)|0)+Math.imul(A,Z)|0,o=o+Math.imul(A,Y)|0,n=n+Math.imul(y,$)|0,i=(i=i+Math.imul(y,tt)|0)+Math.imul(v,$)|0,o=o+Math.imul(v,tt)|0,n=n+Math.imul(p,rt)|0,i=(i=i+Math.imul(p,nt)|0)+Math.imul(m,rt)|0,o=o+Math.imul(m,nt)|0;var Mt=(h+(n=n+Math.imul(f,ot)|0)|0)+((8191&(i=(i=i+Math.imul(f,st)|0)+Math.imul(c,ot)|0))<<13)|0;h=((o=o+Math.imul(c,st)|0)+(i>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,n=Math.imul(N,Q),i=(i=Math.imul(N,j))+Math.imul(T,Q)|0,o=Math.imul(T,j),n=n+Math.imul(B,K)|0,i=(i=i+Math.imul(B,H)|0)+Math.imul(k,K)|0,o=o+Math.imul(k,H)|0,n=n+Math.imul(S,V)|0,i=(i=i+Math.imul(S,W)|0)+Math.imul(C,V)|0,o=o+Math.imul(C,W)|0,n=n+Math.imul(I,Z)|0,i=(i=i+Math.imul(I,Y)|0)+Math.imul(E,Z)|0,o=o+Math.imul(E,Y)|0,n=n+Math.imul(b,$)|0,i=(i=i+Math.imul(b,tt)|0)+Math.imul(A,$)|0,o=o+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,i=(i=i+Math.imul(y,nt)|0)+Math.imul(v,rt)|0,o=o+Math.imul(v,nt)|0,n=n+Math.imul(p,ot)|0,i=(i=i+Math.imul(p,st)|0)+Math.imul(m,ot)|0,o=o+Math.imul(m,st)|0;var It=(h+(n=n+Math.imul(f,ut)|0)|0)+((8191&(i=(i=i+Math.imul(f,ht)|0)+Math.imul(c,ut)|0))<<13)|0;h=((o=o+Math.imul(c,ht)|0)+(i>>>13)|0)+(It>>>26)|0,It&=67108863,n=Math.imul(P,Q),i=(i=Math.imul(P,j))+Math.imul(O,Q)|0,o=Math.imul(O,j),n=n+Math.imul(N,K)|0,i=(i=i+Math.imul(N,H)|0)+Math.imul(T,K)|0,o=o+Math.imul(T,H)|0,n=n+Math.imul(B,V)|0,i=(i=i+Math.imul(B,W)|0)+Math.imul(k,V)|0,o=o+Math.imul(k,W)|0,n=n+Math.imul(S,Z)|0,i=(i=i+Math.imul(S,Y)|0)+Math.imul(C,Z)|0,o=o+Math.imul(C,Y)|0,n=n+Math.imul(I,$)|0,i=(i=i+Math.imul(I,tt)|0)+Math.imul(E,$)|0,o=o+Math.imul(E,tt)|0,n=n+Math.imul(b,rt)|0,i=(i=i+Math.imul(b,nt)|0)+Math.imul(A,rt)|0,o=o+Math.imul(A,nt)|0,n=n+Math.imul(y,ot)|0,i=(i=i+Math.imul(y,st)|0)+Math.imul(v,ot)|0,o=o+Math.imul(v,st)|0,n=n+Math.imul(p,ut)|0,i=(i=i+Math.imul(p,ht)|0)+Math.imul(m,ut)|0,o=o+Math.imul(m,ht)|0;var Et=(h+(n=n+Math.imul(f,ft)|0)|0)+((8191&(i=(i=i+Math.imul(f,ct)|0)+Math.imul(c,ft)|0))<<13)|0;h=((o=o+Math.imul(c,ct)|0)+(i>>>13)|0)+(Et>>>26)|0,Et&=67108863,n=Math.imul(D,Q),i=(i=Math.imul(D,j))+Math.imul(q,Q)|0,o=Math.imul(q,j),n=n+Math.imul(P,K)|0,i=(i=i+Math.imul(P,H)|0)+Math.imul(O,K)|0,o=o+Math.imul(O,H)|0,n=n+Math.imul(N,V)|0,i=(i=i+Math.imul(N,W)|0)+Math.imul(T,V)|0,o=o+Math.imul(T,W)|0,n=n+Math.imul(B,Z)|0,i=(i=i+Math.imul(B,Y)|0)+Math.imul(k,Z)|0,o=o+Math.imul(k,Y)|0,n=n+Math.imul(S,$)|0,i=(i=i+Math.imul(S,tt)|0)+Math.imul(C,$)|0,o=o+Math.imul(C,tt)|0,n=n+Math.imul(I,rt)|0,i=(i=i+Math.imul(I,nt)|0)+Math.imul(E,rt)|0,o=o+Math.imul(E,nt)|0,n=n+Math.imul(b,ot)|0,i=(i=i+Math.imul(b,st)|0)+Math.imul(A,ot)|0,o=o+Math.imul(A,st)|0,n=n+Math.imul(y,ut)|0,i=(i=i+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,o=o+Math.imul(v,ht)|0,n=n+Math.imul(p,ft)|0,i=(i=i+Math.imul(p,ct)|0)+Math.imul(m,ft)|0,o=o+Math.imul(m,ct)|0;var _t=(h+(n=n+Math.imul(f,pt)|0)|0)+((8191&(i=(i=i+Math.imul(f,mt)|0)+Math.imul(c,pt)|0))<<13)|0;h=((o=o+Math.imul(c,mt)|0)+(i>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(D,K),i=(i=Math.imul(D,H))+Math.imul(q,K)|0,o=Math.imul(q,H),n=n+Math.imul(P,V)|0,i=(i=i+Math.imul(P,W)|0)+Math.imul(O,V)|0,o=o+Math.imul(O,W)|0,n=n+Math.imul(N,Z)|0,i=(i=i+Math.imul(N,Y)|0)+Math.imul(T,Z)|0,o=o+Math.imul(T,Y)|0,n=n+Math.imul(B,$)|0,i=(i=i+Math.imul(B,tt)|0)+Math.imul(k,$)|0,o=o+Math.imul(k,tt)|0,n=n+Math.imul(S,rt)|0,i=(i=i+Math.imul(S,nt)|0)+Math.imul(C,rt)|0,o=o+Math.imul(C,nt)|0,n=n+Math.imul(I,ot)|0,i=(i=i+Math.imul(I,st)|0)+Math.imul(E,ot)|0,o=o+Math.imul(E,st)|0,n=n+Math.imul(b,ut)|0,i=(i=i+Math.imul(b,ht)|0)+Math.imul(A,ut)|0,o=o+Math.imul(A,ht)|0,n=n+Math.imul(y,ft)|0,i=(i=i+Math.imul(y,ct)|0)+Math.imul(v,ft)|0,o=o+Math.imul(v,ct)|0;var St=(h+(n=n+Math.imul(p,pt)|0)|0)+((8191&(i=(i=i+Math.imul(p,mt)|0)+Math.imul(m,pt)|0))<<13)|0;h=((o=o+Math.imul(m,mt)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(D,V),i=(i=Math.imul(D,W))+Math.imul(q,V)|0,o=Math.imul(q,W),n=n+Math.imul(P,Z)|0,i=(i=i+Math.imul(P,Y)|0)+Math.imul(O,Z)|0,o=o+Math.imul(O,Y)|0,n=n+Math.imul(N,$)|0,i=(i=i+Math.imul(N,tt)|0)+Math.imul(T,$)|0,o=o+Math.imul(T,tt)|0,n=n+Math.imul(B,rt)|0,i=(i=i+Math.imul(B,nt)|0)+Math.imul(k,rt)|0,o=o+Math.imul(k,nt)|0,n=n+Math.imul(S,ot)|0,i=(i=i+Math.imul(S,st)|0)+Math.imul(C,ot)|0,o=o+Math.imul(C,st)|0,n=n+Math.imul(I,ut)|0,i=(i=i+Math.imul(I,ht)|0)+Math.imul(E,ut)|0,o=o+Math.imul(E,ht)|0,n=n+Math.imul(b,ft)|0,i=(i=i+Math.imul(b,ct)|0)+Math.imul(A,ft)|0,o=o+Math.imul(A,ct)|0;var Ct=(h+(n=n+Math.imul(y,pt)|0)|0)+((8191&(i=(i=i+Math.imul(y,mt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((o=o+Math.imul(v,mt)|0)+(i>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,n=Math.imul(D,Z),i=(i=Math.imul(D,Y))+Math.imul(q,Z)|0,o=Math.imul(q,Y),n=n+Math.imul(P,$)|0,i=(i=i+Math.imul(P,tt)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,tt)|0,n=n+Math.imul(N,rt)|0,i=(i=i+Math.imul(N,nt)|0)+Math.imul(T,rt)|0,o=o+Math.imul(T,nt)|0,n=n+Math.imul(B,ot)|0,i=(i=i+Math.imul(B,st)|0)+Math.imul(k,ot)|0,o=o+Math.imul(k,st)|0,n=n+Math.imul(S,ut)|0,i=(i=i+Math.imul(S,ht)|0)+Math.imul(C,ut)|0,o=o+Math.imul(C,ht)|0,n=n+Math.imul(I,ft)|0,i=(i=i+Math.imul(I,ct)|0)+Math.imul(E,ft)|0,o=o+Math.imul(E,ct)|0;var xt=(h+(n=n+Math.imul(b,pt)|0)|0)+((8191&(i=(i=i+Math.imul(b,mt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((o=o+Math.imul(A,mt)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(D,$),i=(i=Math.imul(D,tt))+Math.imul(q,$)|0,o=Math.imul(q,tt),n=n+Math.imul(P,rt)|0,i=(i=i+Math.imul(P,nt)|0)+Math.imul(O,rt)|0,o=o+Math.imul(O,nt)|0,n=n+Math.imul(N,ot)|0,i=(i=i+Math.imul(N,st)|0)+Math.imul(T,ot)|0,o=o+Math.imul(T,st)|0,n=n+Math.imul(B,ut)|0,i=(i=i+Math.imul(B,ht)|0)+Math.imul(k,ut)|0,o=o+Math.imul(k,ht)|0,n=n+Math.imul(S,ft)|0,i=(i=i+Math.imul(S,ct)|0)+Math.imul(C,ft)|0,o=o+Math.imul(C,ct)|0;var Bt=(h+(n=n+Math.imul(I,pt)|0)|0)+((8191&(i=(i=i+Math.imul(I,mt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((o=o+Math.imul(E,mt)|0)+(i>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(D,rt),i=(i=Math.imul(D,nt))+Math.imul(q,rt)|0,o=Math.imul(q,nt),n=n+Math.imul(P,ot)|0,i=(i=i+Math.imul(P,st)|0)+Math.imul(O,ot)|0,o=o+Math.imul(O,st)|0,n=n+Math.imul(N,ut)|0,i=(i=i+Math.imul(N,ht)|0)+Math.imul(T,ut)|0,o=o+Math.imul(T,ht)|0,n=n+Math.imul(B,ft)|0,i=(i=i+Math.imul(B,ct)|0)+Math.imul(k,ft)|0,o=o+Math.imul(k,ct)|0;var kt=(h+(n=n+Math.imul(S,pt)|0)|0)+((8191&(i=(i=i+Math.imul(S,mt)|0)+Math.imul(C,pt)|0))<<13)|0;h=((o=o+Math.imul(C,mt)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(D,ot),i=(i=Math.imul(D,st))+Math.imul(q,ot)|0,o=Math.imul(q,st),n=n+Math.imul(P,ut)|0,i=(i=i+Math.imul(P,ht)|0)+Math.imul(O,ut)|0,o=o+Math.imul(O,ht)|0,n=n+Math.imul(N,ft)|0,i=(i=i+Math.imul(N,ct)|0)+Math.imul(T,ft)|0,o=o+Math.imul(T,ct)|0;var Ft=(h+(n=n+Math.imul(B,pt)|0)|0)+((8191&(i=(i=i+Math.imul(B,mt)|0)+Math.imul(k,pt)|0))<<13)|0;h=((o=o+Math.imul(k,mt)|0)+(i>>>13)|0)+(Ft>>>26)|0,Ft&=67108863,n=Math.imul(D,ut),i=(i=Math.imul(D,ht))+Math.imul(q,ut)|0,o=Math.imul(q,ht),n=n+Math.imul(P,ft)|0,i=(i=i+Math.imul(P,ct)|0)+Math.imul(O,ft)|0,o=o+Math.imul(O,ct)|0;var Nt=(h+(n=n+Math.imul(N,pt)|0)|0)+((8191&(i=(i=i+Math.imul(N,mt)|0)+Math.imul(T,pt)|0))<<13)|0;h=((o=o+Math.imul(T,mt)|0)+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(D,ft),i=(i=Math.imul(D,ct))+Math.imul(q,ft)|0,o=Math.imul(q,ct);var Tt=(h+(n=n+Math.imul(P,pt)|0)|0)+((8191&(i=(i=i+Math.imul(P,mt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((o=o+Math.imul(O,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Rt=(h+(n=Math.imul(D,pt))|0)+((8191&(i=(i=Math.imul(D,mt))+Math.imul(q,pt)|0))<<13)|0;return h=((o=Math.imul(q,mt))+(i>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,u[0]=gt,u[1]=yt,u[2]=vt,u[3]=wt,u[4]=bt,u[5]=At,u[6]=Mt,u[7]=It,u[8]=Et,u[9]=_t,u[10]=St,u[11]=Ct,u[12]=xt,u[13]=Bt,u[14]=kt,u[15]=Ft,u[16]=Nt,u[17]=Tt,u[18]=Rt,0!==h&&(u[19]=h,r.length++),r};function d(t,e,r){return(new p).mulp(t,e,r)}function p(t,e){this.x=t,this.y=e}Math.imul||(c=f),i.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?c(this,t,e):r<63?f(this,t,e):r<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var n=0,i=0,o=0;o<r.length-1;o++){var s=i;i=0;for(var a=67108863&n,u=Math.min(o,e.length-1),h=Math.max(0,o-t.length+1);h<=u;h++){var l=o-h,f=(0|t.words[l])*(0|e.words[h]),c=67108863&f;a=67108863&(c=c+a|0),i+=(s=(s=s+(f/67108864|0)|0)+(c>>>26)|0)>>>26,s&=67108863}r.words[o]=a,n=s,s=i}return 0!==n?r.words[o]=n:r.length--,r.strip()}(this,t,e):d(this,t,e)},p.prototype.makeRBT=function(t){for(var e=new Array(t),r=i.prototype._countBits(t)-1,n=0;n<t;n++)e[n]=this.revBin(n,r,t);return e},p.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var n=0,i=0;i<e;i++)n|=(1&t)<<e-i-1,t>>=1;return n},p.prototype.permute=function(t,e,r,n,i,o){for(var s=0;s<o;s++)n[s]=e[t[s]],i[s]=r[t[s]]},p.prototype.transform=function(t,e,r,n,i,o){this.permute(o,t,e,r,n,i);for(var s=1;s<i;s<<=1)for(var a=s<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),l=0;l<i;l+=a)for(var f=u,c=h,d=0;d<s;d++){var p=r[l+d],m=n[l+d],g=r[l+d+s],y=n[l+d+s],v=f*g-c*y;y=f*y+c*g,g=v,r[l+d]=p+g,n[l+d]=m+y,r[l+d+s]=p-g,n[l+d+s]=m-y,d!==a&&(v=u*f-h*c,c=u*c+h*f,f=v)}},p.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),n=1&r,i=0;for(r=r/2|0;r;r>>>=1)i++;return 1<<i+1+n},p.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var n=0;n<r/2;n++){var i=t[n];t[n]=t[r-n-1],t[r-n-1]=i,i=e[n],e[n]=-e[r-n-1],e[r-n-1]=-i}},p.prototype.normalize13b=function(t,e){for(var r=0,n=0;n<e/2;n++){var i=8192*Math.round(t[2*n+1]/e)+Math.round(t[2*n]/e)+r;t[n]=67108863&i,r=i<67108864?0:i/67108864|0}return t},p.prototype.convert13b=function(t,e,n,i){for(var o=0,s=0;s<e;s++)o+=0|t[s],n[2*s]=8191&o,o>>>=13,n[2*s+1]=8191&o,o>>>=13;for(s=2*e;s<i;++s)n[s]=0;r(0===o),r(0==(-8192&o))},p.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},p.prototype.mulp=function(t,e,r){var n=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(n),o=this.stub(n),s=new Array(n),a=new Array(n),u=new Array(n),h=new Array(n),l=new Array(n),f=new Array(n),c=r.words;c.length=n,this.convert13b(t.words,t.length,s,n),this.convert13b(e.words,e.length,h,n),this.transform(s,o,a,u,n,i),this.transform(h,o,l,f,n,i);for(var d=0;d<n;d++){var p=a[d]*l[d]-u[d]*f[d];u[d]=a[d]*f[d]+u[d]*l[d],a[d]=p}return this.conjugate(a,u,n),this.transform(a,u,c,o,n,i),this.conjugate(c,o,n),this.normalize13b(c,n),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},i.prototype.mul=function(t){var e=new i(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},i.prototype.mulf=function(t){var e=new i(null);return e.words=new Array(this.length+t.length),d(this,t,e)},i.prototype.imul=function(t){return this.clone().mulTo(t,this)},i.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var e=0,n=0;n<this.length;n++){var i=(0|this.words[n])*t,o=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=o>>>26,this.words[n]=67108863&o}return 0!==e&&(this.words[n]=e,this.length++),this},i.prototype.muln=function(t){return this.clone().imuln(t)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var n=r/26|0,i=r%26;e[r]=(t.words[n]&1<<i)>>>i}return e}(t);if(0===e.length)return new i(1);for(var r=this,n=0;n<e.length&&0===e[n];n++,r=r.sqr());if(++n<e.length)for(var o=r.sqr();n<e.length;n++,o=o.sqr())0!==e[n]&&(r=r.mul(o));return r},i.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var e,n=t%26,i=(t-n)/26,o=67108863>>>26-n<<26-n;if(0!==n){var s=0;for(e=0;e<this.length;e++){var a=this.words[e]&o,u=(0|this.words[e])-a<<n;this.words[e]=u|s,s=a>>>26-n}s&&(this.words[e]=s,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},i.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},i.prototype.iushrn=function(t,e,n){var i;r("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var o=t%26,s=Math.min((t-o)/26,this.length),a=67108863^67108863>>>o<<o,u=n;if(i-=s,i=Math.max(0,i),u){for(var h=0;h<s;h++)u.words[h]=this.words[h];u.length=s}if(0===s);else if(this.length>s)for(this.length-=s,h=0;h<this.length;h++)this.words[h]=this.words[h+s];else this.words[0]=0,this.length=1;var l=0;for(h=this.length-1;h>=0&&(0!==l||h>=i);h--){var f=0|this.words[h];this.words[h]=l<<26-o|f>>>o,l=f&a}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},i.prototype.ishrn=function(t,e,n){return r(0===this.negative),this.iushrn(t,e,n)},i.prototype.shln=function(t){return this.clone().ishln(t)},i.prototype.ushln=function(t){return this.clone().iushln(t)},i.prototype.shrn=function(t){return this.clone().ishrn(t)},i.prototype.ushrn=function(t){return this.clone().iushrn(t)},i.prototype.testn=function(t){r("number"==typeof t&&t>=0);var e=t%26,n=(t-e)/26,i=1<<e;return!(this.length<=n||!(this.words[n]&i))},i.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var e=t%26,n=(t-e)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==e&&n++,this.length=Math.min(n,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},i.prototype.maskn=function(t){return this.clone().imaskn(t)},i.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},i.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},i.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},i.prototype.addn=function(t){return this.clone().iaddn(t)},i.prototype.subn=function(t){return this.clone().isubn(t)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(t,e,n){var i,o,s=t.length+n;this._expand(s);var a=0;for(i=0;i<t.length;i++){o=(0|this.words[i+n])+a;var u=(0|t.words[i])*e;a=((o-=67108863&u)>>26)-(u/67108864|0),this.words[i+n]=67108863&o}for(;i<this.length-n;i++)a=(o=(0|this.words[i+n])+a)>>26,this.words[i+n]=67108863&o;if(0===a)return this.strip();for(r(-1===a),a=0,i=0;i<this.length;i++)a=(o=-(0|this.words[i])+a)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},i.prototype._wordDiv=function(t,e){var r=(this.length,t.length),n=this.clone(),o=t,s=0|o.words[o.length-1];0!=(r=26-this._countBits(s))&&(o=o.ushln(r),n.iushln(r),s=0|o.words[o.length-1]);var a,u=n.length-o.length;if("mod"!==e){(a=new i(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var l=n.clone()._ishlnsubmul(o,1,u);0===l.negative&&(n=l,a&&(a.words[u]=1));for(var f=u-1;f>=0;f--){var c=67108864*(0|n.words[o.length+f])+(0|n.words[o.length+f-1]);for(c=Math.min(c/s|0,67108863),n._ishlnsubmul(o,c,f);0!==n.negative;)c--,n.negative=0,n._ishlnsubmul(o,1,f),n.isZero()||(n.negative^=1);a&&(a.words[f]=c)}return a&&a.strip(),n.strip(),"div"!==e&&0!==r&&n.iushrn(r),{div:a||null,mod:n}},i.prototype.divmod=function(t,e,n){return r(!t.isZero()),this.isZero()?{div:new i(0),mod:new i(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(o=a.div.neg()),"div"!==e&&(s=a.mod.neg(),n&&0!==s.negative&&s.iadd(t)),{div:o,mod:s}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(o=a.div.neg()),{div:o,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(s=a.mod.neg(),n&&0!==s.negative&&s.isub(t)),{div:a.div,mod:s}):t.length>this.length||this.cmp(t)<0?{div:new i(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new i(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new i(this.modn(t.words[0]))}:this._wordDiv(t,e);var o,s,a},i.prototype.div=function(t){return this.divmod(t,"div",!1).div},i.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},i.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},i.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,n=t.ushrn(1),i=t.andln(1),o=r.cmp(n);return o<0||1===i&&0===o?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},i.prototype.modn=function(t){r(t<=67108863);for(var e=(1<<26)%t,n=0,i=this.length-1;i>=0;i--)n=(e*n+(0|this.words[i]))%t;return n},i.prototype.idivn=function(t){r(t<=67108863);for(var e=0,n=this.length-1;n>=0;n--){var i=(0|this.words[n])+67108864*e;this.words[n]=i/t|0,e=i%t}return this.strip()},i.prototype.divn=function(t){return this.clone().idivn(t)},i.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var e=this,n=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var o=new i(1),s=new i(0),a=new i(0),u=new i(1),h=0;e.isEven()&&n.isEven();)e.iushrn(1),n.iushrn(1),++h;for(var l=n.clone(),f=e.clone();!e.isZero();){for(var c=0,d=1;0==(e.words[0]&d)&&c<26;++c,d<<=1);if(c>0)for(e.iushrn(c);c-- >0;)(o.isOdd()||s.isOdd())&&(o.iadd(l),s.isub(f)),o.iushrn(1),s.iushrn(1);for(var p=0,m=1;0==(n.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(n.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(l),u.isub(f)),a.iushrn(1),u.iushrn(1);e.cmp(n)>=0?(e.isub(n),o.isub(a),s.isub(u)):(n.isub(e),a.isub(o),u.isub(s))}return{a,b:u,gcd:n.iushln(h)}},i.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var e=this,n=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var o,s=new i(1),a=new i(0),u=n.clone();e.cmpn(1)>0&&n.cmpn(1)>0;){for(var h=0,l=1;0==(e.words[0]&l)&&h<26;++h,l<<=1);if(h>0)for(e.iushrn(h);h-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);for(var f=0,c=1;0==(n.words[0]&c)&&f<26;++f,c<<=1);if(f>0)for(n.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(n)>=0?(e.isub(n),s.isub(a)):(n.isub(e),a.isub(s))}return(o=0===e.cmpn(1)?s:a).cmpn(0)<0&&o.iadd(t),o},i.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var n=0;e.isEven()&&r.isEven();n++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var i=e.cmp(r);if(i<0){var o=e;e=r,r=o}else if(0===i||0===r.cmpn(1))break;e.isub(r)}return r.iushln(n)},i.prototype.invm=function(t){return this.egcd(t).a.umod(t)},i.prototype.isEven=function(){return 0==(1&this.words[0])},i.prototype.isOdd=function(){return 1==(1&this.words[0])},i.prototype.andln=function(t){return this.words[0]&t},i.prototype.bincn=function(t){r("number"==typeof t);var e=t%26,n=(t-e)/26,i=1<<e;if(this.length<=n)return this._expand(n+1),this.words[n]|=i,this;for(var o=i,s=n;0!==o&&s<this.length;s++){var a=0|this.words[s];o=(a+=o)>>>26,a&=67108863,this.words[s]=a}return 0!==o&&(this.words[s]=o,this.length++),this},i.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},i.prototype.cmpn=function(t){var e,n=t<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this.strip(),this.length>1)e=1;else{n&&(t=-t),r(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},i.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},i.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],i=0|t.words[r];if(n!==i){n<i?e=-1:n>i&&(e=1);break}}return e},i.prototype.gtn=function(t){return 1===this.cmpn(t)},i.prototype.gt=function(t){return 1===this.cmp(t)},i.prototype.gten=function(t){return this.cmpn(t)>=0},i.prototype.gte=function(t){return this.cmp(t)>=0},i.prototype.ltn=function(t){return-1===this.cmpn(t)},i.prototype.lt=function(t){return-1===this.cmp(t)},i.prototype.lten=function(t){return this.cmpn(t)<=0},i.prototype.lte=function(t){return this.cmp(t)<=0},i.prototype.eqn=function(t){return 0===this.cmpn(t)},i.prototype.eq=function(t){return 0===this.cmp(t)},i.red=function(t){return new A(t)},i.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},i.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(t){return this.red=t,this},i.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},i.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},i.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},i.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},i.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},i.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},i.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},i.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},i.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var m={k256:null,p224:null,p192:null,p25519:null};function g(t,e){this.name=t,this.p=new i(e,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function y(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function v(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function A(t){if("string"==typeof t){var e=i._prime(t);this.m=e.p,this.prime=e}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){A.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new i(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var n=e<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},g.prototype.split=function(t,e){t.iushrn(this.n,0,e)},g.prototype.imulK=function(t){return t.imul(this.k)},n(y,g),y.prototype.split=function(t,e){for(var r=4194303,n=Math.min(t.length,9),i=0;i<n;i++)e.words[i]=t.words[i];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var o=t.words[9];for(e.words[e.length++]=o&r,i=10;i<t.length;i++){var s=0|t.words[i];t.words[i-10]=(s&r)<<4|o>>>22,o=s}o>>>=22,t.words[i-10]=o,0===o&&t.length>10?t.length-=10:t.length-=9},y.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var n=0|t.words[r];e+=977*n,t.words[r]=67108863&e,e=64*n+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(v,g),n(w,g),n(b,g),b.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+e,i=67108863&n;n>>>=26,t.words[r]=i,e=n}return 0!==e&&(t.words[t.length++]=e),t},i._prime=function(t){if(m[t])return m[t];var e;if("k256"===t)e=new y;else if("p224"===t)e=new v;else if("p192"===t)e=new w;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new b}return m[t]=e,e},A.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},A.prototype._verify2=function(t,e){r(0==(t.negative|e.negative),"red works only with positives"),r(t.red&&t.red===e.red,"red works only with red numbers")},A.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},A.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},A.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},A.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},A.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},A.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},A.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},A.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},A.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},A.prototype.isqr=function(t){return this.imul(t,t.clone())},A.prototype.sqr=function(t){return this.mul(t,t)},A.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(r(e%2==1),3===e){var n=this.m.add(new i(1)).iushrn(2);return this.pow(t,n)}for(var o=this.m.subn(1),s=0;!o.isZero()&&0===o.andln(1);)s++,o.iushrn(1);r(!o.isZero());var a=new i(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new i(2*l*l).toRed(this);0!==this.pow(l,h).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,o),c=this.pow(t,o.addn(1).iushrn(1)),d=this.pow(t,o),p=s;0!==d.cmp(a);){for(var m=d,g=0;0!==m.cmp(a);g++)m=m.redSqr();r(g<p);var y=this.pow(f,new i(1).iushln(p-g-1));c=c.redMul(y),f=y.redSqr(),d=d.redMul(f),p=g}return c},A.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},A.prototype.pow=function(t,e){if(e.isZero())return new i(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new i(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var o=r[0],s=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),n=e.length-1;n>=0;n--){for(var h=e.words[n],l=u-1;l>=0;l--){var f=h>>l&1;o!==r[0]&&(o=this.sqr(o)),0!==f||0!==s?(s<<=1,s|=f,(4==++a||0===n&&0===l)&&(o=this.mul(o,r[s]),a=0,s=0)):a=0}u=26}return o},A.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},A.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},i.mont=function(t){return new M(t)},n(M,A),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=r.isub(n).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new i(0)._forceRed(this);var r=t.mul(e),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),o=r.isub(n).iushrn(this.shift),s=o;return o.cmp(this.m)>=0?s=o.isub(this.m):o.cmpn(0)<0&&(s=o.iadd(this.m)),s._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t,Ir)}))),Lr=qr.BN;let Qr=!1,jr=!1;const zr={debug:1,default:2,info:2,warning:3,error:4,off:5};let Kr=zr.default,Hr=null;const Gr=function(){try{const t=[];if(["NFD","NFC","NFKD","NFKC"].forEach((e=>{try{if("test"!=="test".normalize(e))throw new Error("bad normalize")}catch(r){t.push(e)}})),t.length)throw new Error("missing "+t.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(t){return t.message}return null}();var Vr,Wr;!function(t){t.DEBUG="DEBUG",t.INFO="INFO",t.WARNING="WARNING",t.ERROR="ERROR",t.OFF="OFF"}(Vr||(Vr={})),function(t){t.UNKNOWN_ERROR="UNKNOWN_ERROR",t.NOT_IMPLEMENTED="NOT_IMPLEMENTED",t.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",t.NETWORK_ERROR="NETWORK_ERROR",t.SERVER_ERROR="SERVER_ERROR",t.TIMEOUT="TIMEOUT",t.BUFFER_OVERRUN="BUFFER_OVERRUN",t.NUMERIC_FAULT="NUMERIC_FAULT",t.MISSING_NEW="MISSING_NEW",t.INVALID_ARGUMENT="INVALID_ARGUMENT",t.MISSING_ARGUMENT="MISSING_ARGUMENT",t.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",t.CALL_EXCEPTION="CALL_EXCEPTION",t.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",t.NONCE_EXPIRED="NONCE_EXPIRED",t.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",t.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT"}(Wr||(Wr={}));class Jr{constructor(t){Object.defineProperty(this,"version",{enumerable:!0,value:t,writable:!1})}_log(t,e){const r=t.toLowerCase();null==zr[r]&&this.throwArgumentError("invalid log level name","logLevel",t),Kr>zr[r]||console.log.apply(console,e)}debug(...t){this._log(Jr.levels.DEBUG,t)}info(...t){this._log(Jr.levels.INFO,t)}warn(...t){this._log(Jr.levels.WARNING,t)}makeError(t,e,r){if(jr)return this.makeError("censored error",e,{});e||(e=Jr.errors.UNKNOWN_ERROR),r||(r={});const n=[];Object.keys(r).forEach((t=>{try{n.push(t+"="+JSON.stringify(r[t]))}catch(e){n.push(t+"="+JSON.stringify(r[t].toString()))}})),n.push("code="+e),n.push("version="+this.version);const i=t;n.length&&(t+=" ("+n.join(", ")+")");const o=new Error(t);return o.reason=i,o.code=e,Object.keys(r).forEach((function(t){o[t]=r[t]})),o}throwError(t,e,r){throw this.makeError(t,e,r)}throwArgumentError(t,e,r){return this.throwError(t,Jr.errors.INVALID_ARGUMENT,{argument:e,value:r})}assert(t,e,r,n){t||this.throwError(e,r,n)}assertArgument(t,e,r,n){t||this.throwArgumentError(e,r,n)}checkNormalize(t){null==t&&(t="platform missing String.prototype.normalize"),Gr&&this.throwError("platform missing String.prototype.normalize",Jr.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:Gr})}checkSafeUint53(t,e){"number"==typeof t&&(null==e&&(e="value not safe"),(t<0||t>=9007199254740991)&&this.throwError(e,Jr.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:t}),t%1&&this.throwError(e,Jr.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:t}))}checkArgumentCount(t,e,r){r=r?": "+r:"",t<e&&this.throwError("missing argument"+r,Jr.errors.MISSING_ARGUMENT,{count:t,expectedCount:e}),t>e&&this.throwError("too many arguments"+r,Jr.errors.UNEXPECTED_ARGUMENT,{count:t,expectedCount:e})}checkNew(t,e){t!==Object&&null!=t||this.throwError("missing new",Jr.errors.MISSING_NEW,{name:e.name})}checkAbstract(t,e){t===e?this.throwError("cannot instantiate abstract class "+JSON.stringify(e.name)+" directly; use a sub-class",Jr.errors.UNSUPPORTED_OPERATION,{name:t.name,operation:"new"}):t!==Object&&null!=t||this.throwError("missing new",Jr.errors.MISSING_NEW,{name:e.name})}static globalLogger(){return Hr||(Hr=new Jr("logger/5.0.6")),Hr}static setCensorship(t,e){if(!t&&e&&this.globalLogger().throwError("cannot permanently disable censorship",Jr.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Qr){if(!t)return;this.globalLogger().throwError("error censorship permanent",Jr.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}jr=!!t,Qr=!!e}static setLogLevel(t){const e=zr[t.toLowerCase()];null!=e?Kr=e:Jr.globalLogger().warn("invalid log level - "+t)}}Jr.errors=Wr,Jr.levels=Vr;var Zr=Object.freeze({get LogLevel(){return Vr},get ErrorCode(){return Wr},Logger:Jr});const Yr=new Jr("bytes/5.0.5");function Xr(t){return!!t.toHexString}function $r(t){return t.slice||(t.slice=function(){const e=Array.prototype.slice.call(arguments);return $r(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}function tn(t){return an(t)&&!(t.length%2)||en(t)}function en(t){if(null==t)return!1;if(t.constructor===Uint8Array)return!0;if("string"==typeof t)return!1;if(null==t.length)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(r<0||r>=256||r%1)return!1}return!0}function rn(t,e){if(e||(e={}),"number"==typeof t){Yr.checkSafeUint53(t,"invalid arrayify value");const e=[];for(;t;)e.unshift(255&t),t=parseInt(String(t/256));return 0===e.length&&e.push(0),$r(new Uint8Array(e))}if(e.allowMissingPrefix&&"string"==typeof t&&"0x"!==t.substring(0,2)&&(t="0x"+t),Xr(t)&&(t=t.toHexString()),an(t)){let r=t.substring(2);r.length%2&&("left"===e.hexPad?r="0x0"+r.substring(2):"right"===e.hexPad?r+="0":Yr.throwArgumentError("hex data is odd-length","value",t));const n=[];for(let t=0;t<r.length;t+=2)n.push(parseInt(r.substring(t,t+2),16));return $r(new Uint8Array(n))}return en(t)?$r(new Uint8Array(t)):Yr.throwArgumentError("invalid arrayify value","value",t)}function nn(t){const e=t.map((t=>rn(t))),r=e.reduce(((t,e)=>t+e.length),0),n=new Uint8Array(r);return e.reduce(((t,e)=>(n.set(e,t),t+e.length)),0),$r(n)}function on(t){let e=rn(t);if(0===e.length)return e;let r=0;for(;r<e.length&&0===e[r];)r++;return r&&(e=e.slice(r)),e}function sn(t,e){(t=rn(t)).length>e&&Yr.throwArgumentError("value out of range","value",arguments[0]);const r=new Uint8Array(e);return r.set(t,e-t.length),$r(r)}function an(t,e){return!("string"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/)||e&&t.length!==2+2*e)}const un="0123456789abcdef";function hn(t,e){if(e||(e={}),"number"==typeof t){Yr.checkSafeUint53(t,"invalid hexlify value");let e="";for(;t;)e=un[15&t]+e,t=Math.floor(t/16);return e.length?(e.length%2&&(e="0"+e),"0x"+e):"0x00"}if(e.allowMissingPrefix&&"string"==typeof t&&"0x"!==t.substring(0,2)&&(t="0x"+t),Xr(t))return t.toHexString();if(an(t))return t.length%2&&("left"===e.hexPad?t="0x0"+t.substring(2):"right"===e.hexPad?t+="0":Yr.throwArgumentError("hex data is odd-length","value",t)),t.toLowerCase();if(en(t)){let e="0x";for(let r=0;r<t.length;r++){let n=t[r];e+=un[(240&n)>>4]+un[15&n]}return e}return Yr.throwArgumentError("invalid hexlify value","value",t)}function ln(t){if("string"!=typeof t)t=hn(t);else if(!an(t)||t.length%2)return null;return(t.length-2)/2}function fn(t,e,r){return"string"!=typeof t?t=hn(t):(!an(t)||t.length%2)&&Yr.throwArgumentError("invalid hexData","value",t),e=2+2*e,null!=r?"0x"+t.substring(e,2+2*r):"0x"+t.substring(e)}function cn(t){let e="0x";return t.forEach((t=>{e+=hn(t).substring(2)})),e}function dn(t){const e=pn(hn(t,{hexPad:"left"}));return"0x"===e?"0x0":e}function pn(t){"string"!=typeof t&&(t=hn(t)),an(t)||Yr.throwArgumentError("invalid hex string","value",t),t=t.substring(2);let e=0;for(;e<t.length&&"0"===t[e];)e++;return"0x"+t.substring(e)}function mn(t,e){for("string"!=typeof t?t=hn(t):an(t)||Yr.throwArgumentError("invalid hex string","value",t),t.length>2*e+2&&Yr.throwArgumentError("value out of range","value",arguments[1]);t.length<2*e+2;)t="0x0"+t.substring(2);return t}function gn(t){const e={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0};if(tn(t)){const r=rn(t);65!==r.length&&Yr.throwArgumentError("invalid signature string; must be 65 bytes","signature",t),e.r=hn(r.slice(0,32)),e.s=hn(r.slice(32,64)),e.v=r[64],e.v<27&&(0===e.v||1===e.v?e.v+=27:Yr.throwArgumentError("signature invalid v byte","signature",t)),e.recoveryParam=1-e.v%2,e.recoveryParam&&(r[32]|=128),e._vs=hn(r.slice(32,64))}else{if(e.r=t.r,e.s=t.s,e.v=t.v,e.recoveryParam=t.recoveryParam,e._vs=t._vs,null!=e._vs){const r=sn(rn(e._vs),32);e._vs=hn(r);const n=r[0]>=128?1:0;null==e.recoveryParam?e.recoveryParam=n:e.recoveryParam!==n&&Yr.throwArgumentError("signature recoveryParam mismatch _vs","signature",t),r[0]&=127;const i=hn(r);null==e.s?e.s=i:e.s!==i&&Yr.throwArgumentError("signature v mismatch _vs","signature",t)}null==e.recoveryParam?null==e.v?Yr.throwArgumentError("signature missing v and recoveryParam","signature",t):e.recoveryParam=1-e.v%2:null==e.v?e.v=27+e.recoveryParam:e.recoveryParam!==1-e.v%2&&Yr.throwArgumentError("signature recoveryParam mismatch v","signature",t),null!=e.r&&an(e.r)?e.r=mn(e.r,32):Yr.throwArgumentError("signature missing or invalid r","signature",t),null!=e.s&&an(e.s)?e.s=mn(e.s,32):Yr.throwArgumentError("signature missing or invalid s","signature",t);const r=rn(e.s);r[0]>=128&&Yr.throwArgumentError("signature s out of range","signature",t),e.recoveryParam&&(r[0]|=128);const n=hn(r);e._vs&&(an(e._vs)||Yr.throwArgumentError("signature invalid _vs","signature",t),e._vs=mn(e._vs,32)),null==e._vs?e._vs=n:e._vs!==n&&Yr.throwArgumentError("signature _vs mismatch v and s","signature",t)}return e}function yn(t){return hn(nn([(t=gn(t)).r,t.s,t.recoveryParam?"0x1c":"0x1b"]))}var vn=Object.freeze({isBytesLike:tn,isBytes:en,arrayify:rn,concat:nn,stripZeros:on,zeroPad:sn,isHexString:an,hexlify:hn,hexDataLength:ln,hexDataSlice:fn,hexConcat:cn,hexValue:dn,hexStripZeros:pn,hexZeroPad:mn,splitSignature:gn,joinSignature:yn});const wn="bignumber/5.0.8",bn=new Jr(wn),An={},Mn=9007199254740991;class In{constructor(t,e){bn.checkNew(new.target,In),t!==An&&bn.throwError("cannot call constructor directly; use BigNumber.from",Jr.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=e,this._isBigNumber=!0,Object.freeze(this)}fromTwos(t){return _n(Sn(this).fromTwos(t))}toTwos(t){return _n(Sn(this).toTwos(t))}abs(){return"-"===this._hex[0]?In.from(this._hex.substring(1)):this}add(t){return _n(Sn(this).add(Sn(t)))}sub(t){return _n(Sn(this).sub(Sn(t)))}div(t){return In.from(t).isZero()&&Cn("division by zero","div"),_n(Sn(this).div(Sn(t)))}mul(t){return _n(Sn(this).mul(Sn(t)))}mod(t){const e=Sn(t);return e.isNeg()&&Cn("cannot modulo negative values","mod"),_n(Sn(this).umod(e))}pow(t){const e=Sn(t);return e.isNeg()&&Cn("cannot raise to negative values","pow"),_n(Sn(this).pow(e))}and(t){const e=Sn(t);return(this.isNegative()||e.isNeg())&&Cn("cannot 'and' negative values","and"),_n(Sn(this).and(e))}or(t){const e=Sn(t);return(this.isNegative()||e.isNeg())&&Cn("cannot 'or' negative values","or"),_n(Sn(this).or(e))}xor(t){const e=Sn(t);return(this.isNegative()||e.isNeg())&&Cn("cannot 'xor' negative values","xor"),_n(Sn(this).xor(e))}mask(t){return(this.isNegative()||t<0)&&Cn("cannot mask negative values","mask"),_n(Sn(this).maskn(t))}shl(t){return(this.isNegative()||t<0)&&Cn("cannot shift negative values","shl"),_n(Sn(this).shln(t))}shr(t){return(this.isNegative()||t<0)&&Cn("cannot shift negative values","shr"),_n(Sn(this).shrn(t))}eq(t){return Sn(this).eq(Sn(t))}lt(t){return Sn(this).lt(Sn(t))}lte(t){return Sn(this).lte(Sn(t))}gt(t){return Sn(this).gt(Sn(t))}gte(t){return Sn(this).gte(Sn(t))}isNegative(){return"-"===this._hex[0]}isZero(){return Sn(this).isZero()}toNumber(){try{return Sn(this).toNumber()}catch(t){Cn("overflow","toNumber",this.toString())}return null}toString(){return 0!==arguments.length&&bn.throwError("bigNumber.toString does not accept parameters",Jr.errors.UNEXPECTED_ARGUMENT,{}),Sn(this).toString(10)}toHexString(){return this._hex}toJSON(t){return{type:"BigNumber",hex:this.toHexString()}}static from(t){if(t instanceof In)return t;if("string"==typeof t)return t.match(/^-?0x[0-9a-f]+$/i)?new In(An,En(t)):t.match(/^-?[0-9]+$/)?new In(An,En(new Lr(t))):bn.throwArgumentError("invalid BigNumber string","value",t);if("number"==typeof t)return t%1&&Cn("underflow","BigNumber.from",t),(t>=Mn||t<=-Mn)&&Cn("overflow","BigNumber.from",t),In.from(String(t));const e=t;if("bigint"==typeof e)return In.from(e.toString());if(en(e))return In.from(hn(e));if(e)if(e.toHexString){const t=e.toHexString();if("string"==typeof t)return In.from(t)}else{let t=e._hex;if(null==t&&"BigNumber"===e.type&&(t=e.hex),"string"==typeof t&&(an(t)||"-"===t[0]&&an(t.substring(1))))return In.from(t)}return bn.throwArgumentError("invalid BigNumber value","value",t)}static isBigNumber(t){return!(!t||!t._isBigNumber)}}function En(t){if("string"!=typeof t)return En(t.toString(16));if("-"===t[0])return"-"===(t=t.substring(1))[0]&&bn.throwArgumentError("invalid hex","value",t),"0x00"===(t=En(t))?t:"-"+t;if("0x"!==t.substring(0,2)&&(t="0x"+t),"0x"===t)return"0x00";for(t.length%2&&(t="0x0"+t.substring(2));t.length>4&&"0x00"===t.substring(0,4);)t="0x"+t.substring(4);return t}function _n(t){return In.from(En(t))}function Sn(t){const e=In.from(t).toHexString();return"-"===e[0]?new Lr("-"+e.substring(3),16):new Lr(e.substring(2),16)}function Cn(t,e,r){const n={fault:t,operation:e};return null!=r&&(n.value=r),bn.throwError(t,Jr.errors.NUMERIC_FAULT,n)}const xn=new Jr(wn),Bn={},kn=In.from(0),Fn=In.from(-1);function Nn(t,e,r,n){const i={fault:e,operation:r};return void 0!==n&&(i.value=n),xn.throwError(t,Jr.errors.NUMERIC_FAULT,i)}let Tn="0";for(;Tn.length<256;)Tn+=Tn;function Rn(t){if("number"!=typeof t)try{t=In.from(t).toNumber()}catch(t){}return"number"==typeof t&&t>=0&&t<=256&&!(t%1)?"1"+Tn.substring(0,t):xn.throwArgumentError("invalid decimal size","decimals",t)}function Pn(t,e){null==e&&(e=0);const r=Rn(e),n=(t=In.from(t)).lt(kn);n&&(t=t.mul(Fn));let i=t.mod(r).toString();for(;i.length<r.length-1;)i="0"+i;i=i.match(/^([0-9]*[1-9]|0)(0*)/)[1];const o=t.div(r).toString();return t=o+"."+i,n&&(t="-"+t),t}function On(t,e){null==e&&(e=0);const r=Rn(e);if("string"==typeof t&&t.match(/^-?[0-9.,]+$/)||xn.throwArgumentError("invalid decimal value","value",t),r.length-1==0)return In.from(t);const n="-"===t.substring(0,1);n&&(t=t.substring(1)),"."===t&&xn.throwArgumentError("missing value","value",t);const i=t.split(".");i.length>2&&xn.throwArgumentError("too many decimal points","value",t);let o=i[0],s=i[1];for(o||(o="0"),s||(s="0"),s.length>r.length-1&&Nn("fractional component exceeds decimals","underflow","parseFixed");s.length<r.length-1;)s+="0";const a=In.from(o),u=In.from(s);let h=a.mul(r).add(u);return n&&(h=h.mul(Fn)),h}class Un{constructor(t,e,r,n){t!==Bn&&xn.throwError("cannot use FixedFormat constructor; use FixedFormat.from",Jr.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=e,this.width=r,this.decimals=n,this.name=(e?"":"u")+"fixed"+String(r)+"x"+String(n),this._multiplier=Rn(n),Object.freeze(this)}static from(t){if(t instanceof Un)return t;let e=!0,r=128,n=18;if("string"==typeof t){if("fixed"===t);else if("ufixed"===t)e=!1;else if(null!=t){const i=t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);i||xn.throwArgumentError("invalid fixed format","format",t),e="u"!==i[1],r=parseInt(i[2]),n=parseInt(i[3])}}else if(t){const i=(e,r,n)=>null==t[e]?n:(typeof t[e]!==r&&xn.throwArgumentError("invalid fixed format ("+e+" not "+r+")","format."+e,t[e]),t[e]);e=i("signed","boolean",e),r=i("width","number",r),n=i("decimals","number",n)}return r%8&&xn.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",r),n>80&&xn.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",n),new Un(Bn,e,r,n)}}class Dn{constructor(t,e,r,n){xn.checkNew(new.target,Dn),t!==Bn&&xn.throwError("cannot use FixedNumber constructor; use FixedNumber.from",Jr.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=n,this._hex=e,this._value=r,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(t){this.format.name!==t.format.name&&xn.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",t)}addUnsafe(t){this._checkFormat(t);const e=On(this._value,this.format.decimals),r=On(t._value,t.format.decimals);return Dn.fromValue(e.add(r),this.format.decimals,this.format)}subUnsafe(t){this._checkFormat(t);const e=On(this._value,this.format.decimals),r=On(t._value,t.format.decimals);return Dn.fromValue(e.sub(r),this.format.decimals,this.format)}mulUnsafe(t){this._checkFormat(t);const e=On(this._value,this.format.decimals),r=On(t._value,t.format.decimals);return Dn.fromValue(e.mul(r).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(t){this._checkFormat(t);const e=On(this._value,this.format.decimals),r=On(t._value,t.format.decimals);return Dn.fromValue(e.mul(this.format._multiplier).div(r),this.format.decimals,this.format)}floor(){let t=this.toString().split("."),e=Dn.from(t[0],this.format);const r=!t[1].match(/^(0*)$/);return this.isNegative()&&r&&(e=e.subUnsafe(qn)),e}ceiling(){let t=this.toString().split("."),e=Dn.from(t[0],this.format);const r=!t[1].match(/^(0*)$/);return!this.isNegative()&&r&&(e=e.addUnsafe(qn)),e}round(t){null==t&&(t=0);let e=this.toString().split(".");if((t<0||t>80||t%1)&&xn.throwArgumentError("invalid decimal count","decimals",t),e[1].length<=t)return this;const r=Dn.from("1"+Tn.substring(0,t));return this.mulUnsafe(r).addUnsafe(Ln).floor().divUnsafe(r)}isZero(){return"0.0"===this._value}isNegative(){return"-"===this._value[0]}toString(){return this._value}toHexString(t){return null==t?this._hex:(t%8&&xn.throwArgumentError("invalid byte width","width",t),mn(In.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString(),t/8))}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(t){return Dn.fromString(this._value,t)}static fromValue(t,e,r){return null!=r||null==e||function(t){return null!=t&&(In.isBigNumber(t)||"number"==typeof t&&t%1==0||"string"==typeof t&&!!t.match(/^-?[0-9]+$/)||an(t)||"bigint"==typeof t||en(t))}(e)||(r=e,e=null),null==e&&(e=0),null==r&&(r="fixed"),Dn.fromString(Pn(t,e),Un.from(r))}static fromString(t,e){null==e&&(e="fixed");const r=Un.from(e),n=On(t,r.decimals);!r.signed&&n.lt(kn)&&Nn("unsigned value cannot be negative","overflow","value",t);let i=null;r.signed?i=n.toTwos(r.width).toHexString():(i=n.toHexString(),i=mn(i,r.width/8));const o=Pn(n,r.decimals);return new Dn(Bn,i,o,r)}static fromBytes(t,e){null==e&&(e="fixed");const r=Un.from(e);if(rn(t).length>r.width/8)throw new Error("overflow");let n=In.from(t);r.signed&&(n=n.fromTwos(r.width));const i=n.toTwos((r.signed?0:1)+r.width).toHexString(),o=Pn(n,r.decimals);return new Dn(Bn,i,o,r)}static from(t,e){if("string"==typeof t)return Dn.fromString(t,e);if(en(t))return Dn.fromBytes(t,e);try{return Dn.fromValue(t,0,e)}catch(t){if(t.code!==Jr.errors.INVALID_ARGUMENT)throw t}return xn.throwArgumentError("invalid FixedNumber value","value",t)}static isFixedNumber(t){return!(!t||!t._isFixedNumber)}}const qn=Dn.from(1),Ln=Dn.from("0.5");var Qn=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const jn=new Jr("properties/5.0.4");function zn(t,e,r){Object.defineProperty(t,e,{enumerable:!0,value:r,writable:!1})}function Kn(t,e){for(let r=0;r<32;r++){if(t[e])return t[e];if(!t.prototype||"object"!=typeof t.prototype)break;t=Object.getPrototypeOf(t.prototype).constructor}return null}function Hn(t){return Qn(this,void 0,void 0,(function*(){const e=Object.keys(t).map((e=>{const r=t[e];return Promise.resolve(r).then((t=>({key:e,value:t})))}));return(yield Promise.all(e)).reduce(((t,e)=>(t[e.key]=e.value,t)),{})}))}function Gn(t,e){t&&"object"==typeof t||jn.throwArgumentError("invalid object","object",t),Object.keys(t).forEach((r=>{e[r]||jn.throwArgumentError("invalid object key - "+r,"transaction:"+r,t)}))}function Vn(t){const e={};for(const r in t)e[r]=t[r];return e}const Wn={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function Jn(t){if(null==t||Wn[typeof t])return!0;if(Array.isArray(t)||"object"==typeof t){if(!Object.isFrozen(t))return!1;const e=Object.keys(t);for(let r=0;r<e.length;r++)if(!Jn(t[e[r]]))return!1;return!0}return jn.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}function Zn(t){if(Jn(t))return t;if(Array.isArray(t))return Object.freeze(t.map((t=>Yn(t))));if("object"==typeof t){const e={};for(const r in t){const n=t[r];void 0!==n&&zn(e,r,Yn(n))}return e}return jn.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}function Yn(t){return Zn(t)}class Xn{constructor(t){for(const e in t)this[e]=Yn(t[e])}}const $n="abi/5.0.7",ti=new Jr($n),ei={};let ri={calldata:!0,memory:!0,storage:!0},ni={calldata:!0,memory:!0};function ii(t,e){if("bytes"===t||"string"===t){if(ri[e])return!0}else if("address"===t){if("payable"===e)return!0}else if((t.indexOf("[")>=0||"tuple"===t)&&ni[e])return!0;return(ri[e]||"payable"===e)&&ti.throwArgumentError("invalid modifier","name",e),!1}function oi(t,e){for(let r in e)zn(t,r,e[r])}const si=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"}),ai=new RegExp(/^(.*)\[([0-9]*)\]$/);class ui{constructor(t,e){t!==ei&&ti.throwError("use fromString",Jr.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),oi(this,e);let r=this.type.match(ai);oi(this,r?{arrayLength:parseInt(r[2]||"-1"),arrayChildren:ui.fromObject({type:r[1],components:this.components}),baseType:"array"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}format(t){if(t||(t=si.sighash),si[t]||ti.throwArgumentError("invalid format type","format",t),t===si.json){let e={type:"tuple"===this.baseType?"tuple":this.type,name:this.name||void 0};return"boolean"==typeof this.indexed&&(e.indexed=this.indexed),this.components&&(e.components=this.components.map((e=>JSON.parse(e.format(t))))),JSON.stringify(e)}let e="";return"array"===this.baseType?(e+=this.arrayChildren.format(t),e+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):"tuple"===this.baseType?(t!==si.sighash&&(e+=this.type),e+="("+this.components.map((e=>e.format(t))).join(t===si.full?", ":",")+")"):e+=this.type,t!==si.sighash&&(!0===this.indexed&&(e+=" indexed"),t===si.full&&this.name&&(e+=" "+this.name)),e}static from(t,e){return"string"==typeof t?ui.fromString(t,e):ui.fromObject(t)}static fromObject(t){return ui.isParamType(t)?t:new ui(ei,{name:t.name||null,type:yi(t.type),indexed:null==t.indexed?null:!!t.indexed,components:t.components?t.components.map(ui.fromObject):null})}static fromString(t,e){return r=function(t,e){let r=t;function n(e){ti.throwArgumentError("unexpected character at position "+e,"param",t)}function i(t){let r={type:"",name:"",parent:t,state:{allowType:!0}};return e&&(r.indexed=!1),r}t=t.replace(/\s/g," ");let o={type:"",name:"",state:{allowType:!0}},s=o;for(let r=0;r<t.length;r++){let o=t[r];switch(o){case"(":s.state.allowType&&""===s.type?s.type="tuple":s.state.allowParams||n(r),s.state.allowType=!1,s.type=yi(s.type),s.components=[i(s)],s=s.components[0];break;case")":delete s.state,"indexed"===s.name&&(e||n(r),s.indexed=!0,s.name=""),ii(s.type,s.name)&&(s.name=""),s.type=yi(s.type);let t=s;s=s.parent,s||n(r),delete t.parent,s.state.allowParams=!1,s.state.allowName=!0,s.state.allowArray=!0;break;case",":delete s.state,"indexed"===s.name&&(e||n(r),s.indexed=!0,s.name=""),ii(s.type,s.name)&&(s.name=""),s.type=yi(s.type);let a=i(s.parent);s.parent.components.push(a),delete s.parent,s=a;break;case" ":s.state.allowType&&""!==s.type&&(s.type=yi(s.type),delete s.state.allowType,s.state.allowName=!0,s.state.allowParams=!0),s.state.allowName&&""!==s.name&&("indexed"===s.name?(e||n(r),s.indexed&&n(r),s.indexed=!0,s.name=""):ii(s.type,s.name)?s.name="":s.state.allowName=!1);break;case"[":s.state.allowArray||n(r),s.type+=o,s.state.allowArray=!1,s.state.allowName=!1,s.state.readArray=!0;break;case"]":s.state.readArray||n(r),s.type+=o,s.state.readArray=!1,s.state.allowArray=!0,s.state.allowName=!0;break;default:s.state.allowType?(s.type+=o,s.state.allowParams=!0,s.state.allowArray=!0):s.state.allowName?(s.name+=o,delete s.state.allowArray):s.state.readArray?s.type+=o:n(r)}}return s.parent&&ti.throwArgumentError("unexpected eof","param",t),delete o.state,"indexed"===s.name?(e||n(r.length-7),s.indexed&&n(r.length-7),s.indexed=!0,s.name=""):ii(s.type,s.name)&&(s.name=""),o.type=yi(o.type),o}(t,!!e),ui.fromObject({name:r.name,type:r.type,indexed:r.indexed,components:r.components});var r}static isParamType(t){return!(null==t||!t._isParamType)}}function hi(t,e){return function(t){t=t.trim();let e=[],r="",n=0;for(let i=0;i<t.length;i++){let o=t[i];","===o&&0===n?(e.push(r),r=""):(r+=o,"("===o?n++:")"===o&&(n--,-1===n&&ti.throwArgumentError("unbalanced parenthesis","value",t)))}return r&&e.push(r),e}(t).map((t=>ui.fromString(t,e)))}class li{constructor(t,e){t!==ei&&ti.throwError("use a static from method",Jr.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),oi(this,e),this._isFragment=!0,Object.freeze(this)}static from(t){return li.isFragment(t)?t:"string"==typeof t?li.fromString(t):li.fromObject(t)}static fromObject(t){if(li.isFragment(t))return t;switch(t.type){case"function":return gi.fromObject(t);case"event":return fi.fromObject(t);case"constructor":return mi.fromObject(t);case"fallback":case"receive":return null}return ti.throwArgumentError("invalid fragment object","value",t)}static fromString(t){return"event"===(t=(t=(t=t.replace(/\s/g," ")).replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ")).trim()).split(" ")[0]?fi.fromString(t.substring(5).trim()):"function"===t.split(" ")[0]?gi.fromString(t.substring(8).trim()):"constructor"===t.split("(")[0].trim()?mi.fromString(t.trim()):ti.throwArgumentError("unsupported fragment","value",t)}static isFragment(t){return!(!t||!t._isFragment)}}class fi extends li{format(t){if(t||(t=si.sighash),si[t]||ti.throwArgumentError("invalid format type","format",t),t===si.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map((e=>JSON.parse(e.format(t))))});let e="";return t!==si.sighash&&(e+="event "),e+=this.name+"("+this.inputs.map((e=>e.format(t))).join(t===si.full?", ":",")+") ",t!==si.sighash&&this.anonymous&&(e+="anonymous "),e.trim()}static from(t){return"string"==typeof t?fi.fromString(t):fi.fromObject(t)}static fromObject(t){if(fi.isEventFragment(t))return t;"event"!==t.type&&ti.throwArgumentError("invalid event object","value",t);const e={name:wi(t.name),anonymous:t.anonymous,inputs:t.inputs?t.inputs.map(ui.fromObject):[],type:"event"};return new fi(ei,e)}static fromString(t){let e=t.match(bi);e||ti.throwArgumentError("invalid event string","value",t);let r=!1;return e[3].split(" ").forEach((t=>{switch(t.trim()){case"anonymous":r=!0;break;case"":break;default:ti.warn("unknown modifier: "+t)}})),fi.fromObject({name:e[1].trim(),anonymous:r,inputs:hi(e[2],!0),type:"event"})}static isEventFragment(t){return t&&t._isFragment&&"event"===t.type}}function ci(t,e){e.gas=null;let r=t.split("@");return 1!==r.length?(r.length>2&&ti.throwArgumentError("invalid human-readable ABI signature","value",t),r[1].match(/^[0-9]+$/)||ti.throwArgumentError("invalid human-readable ABI signature gas","value",t),e.gas=In.from(r[1]),r[0]):t}function di(t,e){e.constant=!1,e.payable=!1,e.stateMutability="nonpayable",t.split(" ").forEach((t=>{switch(t.trim()){case"constant":e.constant=!0;break;case"payable":e.payable=!0,e.stateMutability="payable";break;case"nonpayable":e.payable=!1,e.stateMutability="nonpayable";break;case"pure":e.constant=!0,e.stateMutability="pure";break;case"view":e.constant=!0,e.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+t)}}))}function pi(t){let e={constant:!1,payable:!0,stateMutability:"payable"};return null!=t.stateMutability?(e.stateMutability=t.stateMutability,e.constant="view"===e.stateMutability||"pure"===e.stateMutability,null!=t.constant&&!!t.constant!==e.constant&&ti.throwArgumentError("cannot have constant function with mutability "+e.stateMutability,"value",t),e.payable="payable"===e.stateMutability,null!=t.payable&&!!t.payable!==e.payable&&ti.throwArgumentError("cannot have payable function with mutability "+e.stateMutability,"value",t)):null!=t.payable?(e.payable=!!t.payable,null!=t.constant||e.payable||"constructor"===t.type||ti.throwArgumentError("unable to determine stateMutability","value",t),e.constant=!!t.constant,e.constant?e.stateMutability="view":e.stateMutability=e.payable?"payable":"nonpayable",e.payable&&e.constant&&ti.throwArgumentError("cannot have constant payable function","value",t)):null!=t.constant?(e.constant=!!t.constant,e.payable=!e.constant,e.stateMutability=e.constant?"view":"payable"):"constructor"!==t.type&&ti.throwArgumentError("unable to determine stateMutability","value",t),e}class mi extends li{format(t){if(t||(t=si.sighash),si[t]||ti.throwArgumentError("invalid format type","format",t),t===si.json)return JSON.stringify({type:"constructor",stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payble:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((e=>JSON.parse(e.format(t))))});t===si.sighash&&ti.throwError("cannot format a constructor for sighash",Jr.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let e="constructor("+this.inputs.map((e=>e.format(t))).join(t===si.full?", ":",")+") ";return this.stateMutability&&"nonpayable"!==this.stateMutability&&(e+=this.stateMutability+" "),e.trim()}static from(t){return"string"==typeof t?mi.fromString(t):mi.fromObject(t)}static fromObject(t){if(mi.isConstructorFragment(t))return t;"constructor"!==t.type&&ti.throwArgumentError("invalid constructor object","value",t);let e=pi(t);e.constant&&ti.throwArgumentError("constructor cannot be constant","value",t);const r={name:null,type:t.type,inputs:t.inputs?t.inputs.map(ui.fromObject):[],payable:e.payable,stateMutability:e.stateMutability,gas:t.gas?In.from(t.gas):null};return new mi(ei,r)}static fromString(t){let e={type:"constructor"},r=(t=ci(t,e)).match(bi);return r&&"constructor"===r[1].trim()||ti.throwArgumentError("invalid constructor string","value",t),e.inputs=hi(r[2].trim(),!1),di(r[3].trim(),e),mi.fromObject(e)}static isConstructorFragment(t){return t&&t._isFragment&&"constructor"===t.type}}class gi extends mi{format(t){if(t||(t=si.sighash),si[t]||ti.throwArgumentError("invalid format type","format",t),t===si.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payble:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((e=>JSON.parse(e.format(t)))),ouputs:this.outputs.map((e=>JSON.parse(e.format(t))))});let e="";return t!==si.sighash&&(e+="function "),e+=this.name+"("+this.inputs.map((e=>e.format(t))).join(t===si.full?", ":",")+") ",t!==si.sighash&&(this.stateMutability?"nonpayable"!==this.stateMutability&&(e+=this.stateMutability+" "):this.constant&&(e+="view "),this.outputs&&this.outputs.length&&(e+="returns ("+this.outputs.map((e=>e.format(t))).join(", ")+") "),null!=this.gas&&(e+="@"+this.gas.toString()+" ")),e.trim()}static from(t){return"string"==typeof t?gi.fromString(t):gi.fromObject(t)}static fromObject(t){if(gi.isFunctionFragment(t))return t;"function"!==t.type&&ti.throwArgumentError("invalid function object","value",t);let e=pi(t);const r={type:t.type,name:wi(t.name),constant:e.constant,inputs:t.inputs?t.inputs.map(ui.fromObject):[],outputs:t.outputs?t.outputs.map(ui.fromObject):[],payable:e.payable,stateMutability:e.stateMutability,gas:t.gas?In.from(t.gas):null};return new gi(ei,r)}static fromString(t){let e={type:"function"},r=(t=ci(t,e)).split(" returns ");r.length>2&&ti.throwArgumentError("invalid function string","value",t);let n=r[0].match(bi);if(n||ti.throwArgumentError("invalid function signature","value",t),e.name=n[1].trim(),e.name&&wi(e.name),e.inputs=hi(n[2],!1),di(n[3].trim(),e),r.length>1){let n=r[1].match(bi);""==n[1].trim()&&""==n[3].trim()||ti.throwArgumentError("unexpected tokens","value",t),e.outputs=hi(n[2],!1)}else e.outputs=[];return gi.fromObject(e)}static isFunctionFragment(t){return t&&t._isFragment&&"function"===t.type}}function yi(t){return t.match(/^uint($|[^1-9])/)?t="uint256"+t.substring(4):t.match(/^int($|[^1-9])/)&&(t="int256"+t.substring(3)),t}const vi=new RegExp("^[A-Za-z_][A-Za-z0-9_]*$");function wi(t){return t&&t.match(vi)||ti.throwArgumentError(`invalid identifier "${t}"`,"value",t),t}const bi=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$"),Ai=new Jr($n);function Mi(t){const e=[],r=function(t,n){if(Array.isArray(n))for(let i in n){const o=t.slice();o.push(i);try{r(o,n[i])}catch(t){e.push({path:o,error:t})}}};return r([],t),e}class Ii{constructor(t,e,r,n){this.name=t,this.type=e,this.localName=r,this.dynamic=n}_throwError(t,e){Ai.throwArgumentError(t,this.localName,e)}}class Ei{constructor(t){zn(this,"wordSize",t||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(t)}get data(){return cn(this._data)}get length(){return this._dataLength}_writeData(t){return this._data.push(t),this._dataLength+=t.length,t.length}appendWriter(t){return this._writeData(nn(t._data))}writeBytes(t){let e=rn(t);const r=e.length%this.wordSize;return r&&(e=nn([e,this._padding.slice(r)])),this._writeData(e)}_getValue(t){let e=rn(In.from(t));return e.length>this.wordSize&&Ai.throwError("value out-of-bounds",Jr.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:e.length}),e.length%this.wordSize&&(e=nn([this._padding.slice(e.length%this.wordSize),e])),e}writeValue(t){return this._writeData(this._getValue(t))}writeUpdatableValue(){const t=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,e=>{this._data[t]=this._getValue(e)}}}class _i{constructor(t,e,r,n){zn(this,"_data",rn(t)),zn(this,"wordSize",e||32),zn(this,"_coerceFunc",r),zn(this,"allowLoose",n),this._offset=0}get data(){return hn(this._data)}get consumed(){return this._offset}static coerce(t,e){let r=t.match("^u?int([0-9]+)$");return r&&parseInt(r[1])<=48&&(e=e.toNumber()),e}coerce(t,e){return this._coerceFunc?this._coerceFunc(t,e):_i.coerce(t,e)}_peekBytes(t,e,r){let n=Math.ceil(e/this.wordSize)*this.wordSize;return this._offset+n>this._data.length&&(this.allowLoose&&r&&this._offset+e<=this._data.length?n=e:Ai.throwError("data out-of-bounds",Jr.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+n})),this._data.slice(this._offset,this._offset+n)}subReader(t){return new _i(this._data.slice(this._offset+t),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(t,e){let r=this._peekBytes(0,t,!!e);return this._offset+=r.length,r.slice(0,t)}readValue(){return In.from(this.readBytes(this.wordSize))}}var Si=_r((function(t){!function(){var e="object"==typeof window?window:{};!e.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(e=Ir);for(var r=!e.JS_SHA3_NO_COMMON_JS&&t.exports,n="0123456789abcdef".split(""),i=[0,8,16,24],o=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],s=[224,256,384,512],a=["hex","buffer","arrayBuffer","array"],u=function(t,e,r){return function(n){return new w(t,e,t).update(n)[r]()}},h=function(t,e,r){return function(n,i){return new w(t,e,i).update(n)[r]()}},l=function(t,e){var r=u(t,e,"hex");r.create=function(){return new w(t,e,t)},r.update=function(t){return r.create().update(t)};for(var n=0;n<a.length;++n){var i=a[n];r[i]=u(t,e,i)}return r},f=[{name:"keccak",padding:[1,256,65536,16777216],bits:s,createMethod:l},{name:"sha3",padding:[6,1536,393216,100663296],bits:s,createMethod:l},{name:"shake",padding:[31,7936,2031616,520093696],bits:[128,256],createMethod:function(t,e){var r=h(t,e,"hex");r.create=function(r){return new w(t,e,r)},r.update=function(t,e){return r.create(e).update(t)};for(var n=0;n<a.length;++n){var i=a[n];r[i]=h(t,e,i)}return r}}],c={},d=[],p=0;p<f.length;++p)for(var m=f[p],g=m.bits,y=0;y<g.length;++y){var v=m.name+"_"+g[y];d.push(v),c[v]=m.createMethod(g[y],m.padding)}function w(t,e,r){this.blocks=[],this.s=[],this.padding=e,this.outputBits=r,this.reset=!0,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var n=0;n<50;++n)this.s[n]=0}w.prototype.update=function(t){var e="string"!=typeof t;e&&t.constructor===ArrayBuffer&&(t=new Uint8Array(t));for(var r,n,o=t.length,s=this.blocks,a=this.byteCount,u=this.blockCount,h=0,l=this.s;h<o;){if(this.reset)for(this.reset=!1,s[0]=this.block,r=1;r<u+1;++r)s[r]=0;if(e)for(r=this.start;h<o&&r<a;++h)s[r>>2]|=t[h]<<i[3&r++];else for(r=this.start;h<o&&r<a;++h)(n=t.charCodeAt(h))<128?s[r>>2]|=n<<i[3&r++]:n<2048?(s[r>>2]|=(192|n>>6)<<i[3&r++],s[r>>2]|=(128|63&n)<<i[3&r++]):n<55296||n>=57344?(s[r>>2]|=(224|n>>12)<<i[3&r++],s[r>>2]|=(128|n>>6&63)<<i[3&r++],s[r>>2]|=(128|63&n)<<i[3&r++]):(n=65536+((1023&n)<<10|1023&t.charCodeAt(++h)),s[r>>2]|=(240|n>>18)<<i[3&r++],s[r>>2]|=(128|n>>12&63)<<i[3&r++],s[r>>2]|=(128|n>>6&63)<<i[3&r++],s[r>>2]|=(128|63&n)<<i[3&r++]);if(this.lastByteIndex=r,r>=a){for(this.start=r-a,this.block=s[u],r=0;r<u;++r)l[r]^=s[r];b(l),this.reset=!0}else this.start=r}return this},w.prototype.finalize=function(){var t=this.blocks,e=this.lastByteIndex,r=this.blockCount,n=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[r],e=1;e<r+1;++e)t[e]=0;for(t[r-1]|=2147483648,e=0;e<r;++e)n[e]^=t[e];b(n)},w.prototype.toString=w.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,r=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,u="";a<i;){for(s=0;s<e&&a<i;++s,++a)t=r[s],u+=n[t>>4&15]+n[15&t]+n[t>>12&15]+n[t>>8&15]+n[t>>20&15]+n[t>>16&15]+n[t>>28&15]+n[t>>24&15];a%e==0&&(b(r),s=0)}return o&&(t=r[s],o>0&&(u+=n[t>>4&15]+n[15&t]),o>1&&(u+=n[t>>12&15]+n[t>>8&15]),o>2&&(u+=n[t>>20&15]+n[t>>16&15])),u},w.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,r=this.s,n=this.outputBlocks,i=this.extraBytes,o=0,s=0,a=this.outputBits>>3;t=i?new ArrayBuffer(n+1<<2):new ArrayBuffer(a);for(var u=new Uint32Array(t);s<n;){for(o=0;o<e&&s<n;++o,++s)u[s]=r[o];s%e==0&&b(r)}return i&&(u[o]=r[o],t=t.slice(0,a)),t},w.prototype.buffer=w.prototype.arrayBuffer,w.prototype.digest=w.prototype.array=function(){this.finalize();for(var t,e,r=this.blockCount,n=this.s,i=this.outputBlocks,o=this.extraBytes,s=0,a=0,u=[];a<i;){for(s=0;s<r&&a<i;++s,++a)t=a<<2,e=n[s],u[t]=255&e,u[t+1]=e>>8&255,u[t+2]=e>>16&255,u[t+3]=e>>24&255;a%r==0&&b(n)}return o&&(t=a<<2,e=n[s],o>0&&(u[t]=255&e),o>1&&(u[t+1]=e>>8&255),o>2&&(u[t+2]=e>>16&255)),u};var b=function(t){var e,r,n,i,s,a,u,h,l,f,c,d,p,m,g,y,v,w,b,A,M,I,E,_,S,C,x,B,k,F,N,T,R,P,O,U,D,q,L,Q,j,z,K,H,G,V,W,J,Z,Y,X,$,tt,et,rt,nt,it,ot,st,at,ut,ht,lt;for(n=0;n<48;n+=2)i=t[0]^t[10]^t[20]^t[30]^t[40],s=t[1]^t[11]^t[21]^t[31]^t[41],a=t[2]^t[12]^t[22]^t[32]^t[42],u=t[3]^t[13]^t[23]^t[33]^t[43],h=t[4]^t[14]^t[24]^t[34]^t[44],l=t[5]^t[15]^t[25]^t[35]^t[45],f=t[6]^t[16]^t[26]^t[36]^t[46],c=t[7]^t[17]^t[27]^t[37]^t[47],e=(d=t[8]^t[18]^t[28]^t[38]^t[48])^(a<<1|u>>>31),r=(p=t[9]^t[19]^t[29]^t[39]^t[49])^(u<<1|a>>>31),t[0]^=e,t[1]^=r,t[10]^=e,t[11]^=r,t[20]^=e,t[21]^=r,t[30]^=e,t[31]^=r,t[40]^=e,t[41]^=r,e=i^(h<<1|l>>>31),r=s^(l<<1|h>>>31),t[2]^=e,t[3]^=r,t[12]^=e,t[13]^=r,t[22]^=e,t[23]^=r,t[32]^=e,t[33]^=r,t[42]^=e,t[43]^=r,e=a^(f<<1|c>>>31),r=u^(c<<1|f>>>31),t[4]^=e,t[5]^=r,t[14]^=e,t[15]^=r,t[24]^=e,t[25]^=r,t[34]^=e,t[35]^=r,t[44]^=e,t[45]^=r,e=h^(d<<1|p>>>31),r=l^(p<<1|d>>>31),t[6]^=e,t[7]^=r,t[16]^=e,t[17]^=r,t[26]^=e,t[27]^=r,t[36]^=e,t[37]^=r,t[46]^=e,t[47]^=r,e=f^(i<<1|s>>>31),r=c^(s<<1|i>>>31),t[8]^=e,t[9]^=r,t[18]^=e,t[19]^=r,t[28]^=e,t[29]^=r,t[38]^=e,t[39]^=r,t[48]^=e,t[49]^=r,m=t[0],g=t[1],V=t[11]<<4|t[10]>>>28,W=t[10]<<4|t[11]>>>28,B=t[20]<<3|t[21]>>>29,k=t[21]<<3|t[20]>>>29,at=t[31]<<9|t[30]>>>23,ut=t[30]<<9|t[31]>>>23,z=t[40]<<18|t[41]>>>14,K=t[41]<<18|t[40]>>>14,P=t[2]<<1|t[3]>>>31,O=t[3]<<1|t[2]>>>31,y=t[13]<<12|t[12]>>>20,v=t[12]<<12|t[13]>>>20,J=t[22]<<10|t[23]>>>22,Z=t[23]<<10|t[22]>>>22,F=t[33]<<13|t[32]>>>19,N=t[32]<<13|t[33]>>>19,ht=t[42]<<2|t[43]>>>30,lt=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,rt=t[4]<<30|t[5]>>>2,U=t[14]<<6|t[15]>>>26,D=t[15]<<6|t[14]>>>26,w=t[25]<<11|t[24]>>>21,b=t[24]<<11|t[25]>>>21,Y=t[34]<<15|t[35]>>>17,X=t[35]<<15|t[34]>>>17,T=t[45]<<29|t[44]>>>3,R=t[44]<<29|t[45]>>>3,_=t[6]<<28|t[7]>>>4,S=t[7]<<28|t[6]>>>4,nt=t[17]<<23|t[16]>>>9,it=t[16]<<23|t[17]>>>9,q=t[26]<<25|t[27]>>>7,L=t[27]<<25|t[26]>>>7,A=t[36]<<21|t[37]>>>11,M=t[37]<<21|t[36]>>>11,$=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,H=t[8]<<27|t[9]>>>5,G=t[9]<<27|t[8]>>>5,C=t[18]<<20|t[19]>>>12,x=t[19]<<20|t[18]>>>12,ot=t[29]<<7|t[28]>>>25,st=t[28]<<7|t[29]>>>25,Q=t[38]<<8|t[39]>>>24,j=t[39]<<8|t[38]>>>24,I=t[48]<<14|t[49]>>>18,E=t[49]<<14|t[48]>>>18,t[0]=m^~y&w,t[1]=g^~v&b,t[10]=_^~C&B,t[11]=S^~x&k,t[20]=P^~U&q,t[21]=O^~D&L,t[30]=H^~V&J,t[31]=G^~W&Z,t[40]=et^~nt&ot,t[41]=rt^~it&st,t[2]=y^~w&A,t[3]=v^~b&M,t[12]=C^~B&F,t[13]=x^~k&N,t[22]=U^~q&Q,t[23]=D^~L&j,t[32]=V^~J&Y,t[33]=W^~Z&X,t[42]=nt^~ot&at,t[43]=it^~st&ut,t[4]=w^~A&I,t[5]=b^~M&E,t[14]=B^~F&T,t[15]=k^~N&R,t[24]=q^~Q&z,t[25]=L^~j&K,t[34]=J^~Y&$,t[35]=Z^~X&tt,t[44]=ot^~at&ht,t[45]=st^~ut&lt,t[6]=A^~I&m,t[7]=M^~E&g,t[16]=F^~T&_,t[17]=N^~R&S,t[26]=Q^~z&P,t[27]=j^~K&O,t[36]=Y^~$&H,t[37]=X^~tt&G,t[46]=at^~ht&et,t[47]=ut^~lt&rt,t[8]=I^~m&y,t[9]=E^~g&v,t[18]=T^~_&C,t[19]=R^~S&x,t[28]=z^~P&U,t[29]=K^~O&D,t[38]=$^~H&V,t[39]=tt^~G&W,t[48]=ht^~et&nt,t[49]=lt^~rt&it,t[0]^=o[n],t[1]^=o[n+1]};if(r)t.exports=c;else for(p=0;p<d.length;++p)e[d[p]]=c[d[p]]}()}));function Ci(t){return"0x"+Si.keccak_256(rn(t))}const xi=new Jr("rlp/5.0.4");function Bi(t){const e=[];for(;t;)e.unshift(255&t),t>>=8;return e}function ki(t,e,r){let n=0;for(let i=0;i<r;i++)n=256*n+t[e+i];return n}function Fi(t){if(Array.isArray(t)){let e=[];if(t.forEach((function(t){e=e.concat(Fi(t))})),e.length<=55)return e.unshift(192+e.length),e;const r=Bi(e.length);return r.unshift(247+r.length),r.concat(e)}tn(t)||xi.throwArgumentError("RLP object must be BytesLike","object",t);const e=Array.prototype.slice.call(rn(t));if(1===e.length&&e[0]<=127)return e;if(e.length<=55)return e.unshift(128+e.length),e;const r=Bi(e.length);return r.unshift(183+r.length),r.concat(e)}function Ni(t){return hn(Fi(t))}function Ti(t,e,r,n){const i=[];for(;r<e+1+n;){const o=Ri(t,r);i.push(o.result),(r+=o.consumed)>e+1+n&&xi.throwError("child data too short",Jr.errors.BUFFER_OVERRUN,{})}return{consumed:1+n,result:i}}function Ri(t,e){if(0===t.length&&xi.throwError("data too short",Jr.errors.BUFFER_OVERRUN,{}),t[e]>=248){const r=t[e]-247;e+1+r>t.length&&xi.throwError("data short segment too short",Jr.errors.BUFFER_OVERRUN,{});const n=ki(t,e+1,r);return e+1+r+n>t.length&&xi.throwError("data long segment too short",Jr.errors.BUFFER_OVERRUN,{}),Ti(t,e,e+1+r,r+n)}if(t[e]>=192){const r=t[e]-192;return e+1+r>t.length&&xi.throwError("data array too short",Jr.errors.BUFFER_OVERRUN,{}),Ti(t,e,e+1,r)}if(t[e]>=184){const r=t[e]-183;e+1+r>t.length&&xi.throwError("data array too short",Jr.errors.BUFFER_OVERRUN,{});const n=ki(t,e+1,r);return e+1+r+n>t.length&&xi.throwError("data array too short",Jr.errors.BUFFER_OVERRUN,{}),{consumed:1+r+n,result:hn(t.slice(e+1+r,e+1+r+n))}}if(t[e]>=128){const r=t[e]-128;return e+1+r>t.length&&xi.throwError("data too short",Jr.errors.BUFFER_OVERRUN,{}),{consumed:1+r,result:hn(t.slice(e+1,e+1+r))}}return{consumed:1,result:hn(t[e])}}function Pi(t){const e=rn(t),r=Ri(e,0);return r.consumed!==e.length&&xi.throwArgumentError("invalid rlp data","data",t),r.result}var Oi=Object.freeze({encode:Ni,decode:Pi});const Ui=new Jr("address/5.0.5");function Di(t){an(t,20)||Ui.throwArgumentError("invalid address","address",t);const e=(t=t.toLowerCase()).substring(2).split(""),r=new Uint8Array(40);for(let t=0;t<40;t++)r[t]=e[t].charCodeAt(0);const n=rn(Ci(r));for(let t=0;t<40;t+=2)n[t>>1]>>4>=8&&(e[t]=e[t].toUpperCase()),(15&n[t>>1])>=8&&(e[t+1]=e[t+1].toUpperCase());return"0x"+e.join("")}const qi={};for(let t=0;t<10;t++)qi[String(t)]=String(t);for(let t=0;t<26;t++)qi[String.fromCharCode(65+t)]=String(10+t);const Li=Math.floor(function(t){return Math.log10?Math.log10(t):Math.log(t)/Math.LN10}(9007199254740991));function Qi(t){let e=(t=(t=t.toUpperCase()).substring(4)+t.substring(0,2)+"00").split("").map((t=>qi[t])).join("");for(;e.length>=Li;){let t=e.substring(0,Li);e=parseInt(t,10)%97+e.substring(t.length)}let r=String(98-parseInt(e,10)%97);for(;r.length<2;)r="0"+r;return r}function ji(t){let e=null;if("string"!=typeof t&&Ui.throwArgumentError("invalid address","address",t),t.match(/^(0x)?[0-9a-fA-F]{40}$/))"0x"!==t.substring(0,2)&&(t="0x"+t),e=Di(t),t.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&e!==t&&Ui.throwArgumentError("bad address checksum","address",t);else if(t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(t.substring(2,4)!==Qi(t)&&Ui.throwArgumentError("bad icap checksum","address",t),e=new Lr(t.substring(4),36).toString(16);e.length<40;)e="0"+e;e=Di("0x"+e)}else Ui.throwArgumentError("invalid address","address",t);return e}function zi(t){let e=null;try{e=ji(t.from)}catch(e){Ui.throwArgumentError("missing from address","transaction",t)}return ji(fn(Ci(Ni([e,on(rn(In.from(t.nonce).toHexString()))])),12))}class Ki extends Ii{constructor(t){super("address","address",t,!1)}encode(t,e){try{ji(e)}catch(t){this._throwError(t.message,e)}return t.writeValue(e)}decode(t){return ji(mn(t.readValue().toHexString(),20))}}class Hi extends Ii{constructor(t){super(t.name,t.type,void 0,t.dynamic),this.coder=t}encode(t,e){return this.coder.encode(t,e)}decode(t){return this.coder.decode(t)}}const Gi=new Jr($n);function Vi(t,e,r){let n=null;if(Array.isArray(r))n=r;else if(r&&"object"==typeof r){let t={};n=e.map((e=>{const n=e.localName;return n||Gi.throwError("cannot encode object for signature with missing names",Jr.errors.INVALID_ARGUMENT,{argument:"values",coder:e,value:r}),t[n]&&Gi.throwError("cannot encode object for signature with duplicate names",Jr.errors.INVALID_ARGUMENT,{argument:"values",coder:e,value:r}),t[n]=!0,r[n]}))}else Gi.throwArgumentError("invalid tuple value","tuple",r);e.length!==n.length&&Gi.throwArgumentError("types/value length mismatch","tuple",r);let i=new Ei(t.wordSize),o=new Ei(t.wordSize),s=[];e.forEach(((t,e)=>{let r=n[e];if(t.dynamic){let e=o.length;t.encode(o,r);let n=i.writeUpdatableValue();s.push((t=>{n(t+e)}))}else t.encode(i,r)})),s.forEach((t=>{t(i.length)}));let a=t.appendWriter(i);return a+=t.appendWriter(o),a}function Wi(t,e){let r=[],n=t.subReader(0);e.forEach((e=>{let i=null;if(e.dynamic){let r=t.readValue(),o=n.subReader(r.toNumber());try{i=e.decode(o)}catch(t){if(t.code===Jr.errors.BUFFER_OVERRUN)throw t;i=t,i.baseType=e.name,i.name=e.localName,i.type=e.type}}else try{i=e.decode(t)}catch(t){if(t.code===Jr.errors.BUFFER_OVERRUN)throw t;i=t,i.baseType=e.name,i.name=e.localName,i.type=e.type}null!=i&&r.push(i)}));const i=e.reduce(((t,e)=>{const r=e.localName;return r&&(t[r]||(t[r]=0),t[r]++),t}),{});e.forEach(((t,e)=>{let n=t.localName;if(!n||1!==i[n])return;if("length"===n&&(n="_length"),null!=r[n])return;const o=r[e];o instanceof Error?Object.defineProperty(r,n,{get:()=>{throw o}}):r[n]=o}));for(let t=0;t<r.length;t++){const e=r[t];e instanceof Error&&Object.defineProperty(r,t,{get:()=>{throw e}})}return Object.freeze(r)}class Ji extends Ii{constructor(t,e,r){super("array",t.type+"["+(e>=0?e:"")+"]",r,-1===e||t.dynamic),this.coder=t,this.length=e}encode(t,e){Array.isArray(e)||this._throwError("expected array value",e);let r=this.length;-1===r&&(r=e.length,t.writeValue(e.length)),Gi.checkArgumentCount(e.length,r,"coder array"+(this.localName?" "+this.localName:""));let n=[];for(let t=0;t<e.length;t++)n.push(this.coder);return Vi(t,n,e)}decode(t){let e=this.length;-1===e&&(e=t.readValue().toNumber());let r=[];for(let t=0;t<e;t++)r.push(new Hi(this.coder));return t.coerce(this.name,Wi(t,r))}}class Zi extends Ii{constructor(t){super("bool","bool",t,!1)}encode(t,e){return t.writeValue(e?1:0)}decode(t){return t.coerce(this.type,!t.readValue().isZero())}}class Yi extends Ii{constructor(t,e){super(t,t,e,!0)}encode(t,e){e=rn(e);let r=t.writeValue(e.length);return r+=t.writeBytes(e),r}decode(t){return t.readBytes(t.readValue().toNumber(),!0)}}class Xi extends Yi{constructor(t){super("bytes",t)}decode(t){return t.coerce(this.name,hn(super.decode(t)))}}class $i extends Ii{constructor(t,e){let r="bytes"+String(t);super(r,r,e,!1),this.size=t}encode(t,e){let r=rn(e);return r.length!==this.size&&this._throwError("incorrect data length",e),t.writeBytes(r)}decode(t){return t.coerce(this.name,hn(t.readBytes(this.size)))}}class to extends Ii{constructor(t){super("null","",t,!1)}encode(t,e){return null!=e&&this._throwError("not null",e),t.writeBytes([])}decode(t){return t.readBytes(0),t.coerce(this.name,null)}}const eo="0x0000000000000000000000000000000000000000",ro="0x0000000000000000000000000000000000000000000000000000000000000000",no=In.from(-1),io=In.from(0),oo=In.from(1),so=In.from(2),ao=In.from("1000000000000000000"),uo=In.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");var ho=Object.freeze({AddressZero:eo,HashZero:ro,EtherSymbol:"Ξ",NegativeOne:no,Zero:io,One:oo,Two:so,WeiPerEther:ao,MaxUint256:uo});class lo extends Ii{constructor(t,e,r){const n=(e?"int":"uint")+8*t;super(n,n,r,!1),this.size=t,this.signed=e}encode(t,e){let r=In.from(e),n=uo.mask(8*t.wordSize);if(this.signed){let t=n.mask(8*this.size-1);(r.gt(t)||r.lt(t.add(oo).mul(no)))&&this._throwError("value out-of-bounds",e)}else(r.lt(io)||r.gt(n.mask(8*this.size)))&&this._throwError("value out-of-bounds",e);return r=r.toTwos(8*this.size).mask(8*this.size),this.signed&&(r=r.fromTwos(8*this.size).toTwos(8*t.wordSize)),t.writeValue(r)}decode(t){let e=t.readValue().mask(8*this.size);return this.signed&&(e=e.fromTwos(8*this.size)),t.coerce(this.name,e)}}const fo=new Jr("strings/5.0.5");var co,po;function mo(t,e,r,n,i){if(t===po.BAD_PREFIX||t===po.UNEXPECTED_CONTINUE){let t=0;for(let n=e+1;n<r.length&&r[n]>>6==2;n++)t++;return t}return t===po.OVERRUN?r.length-e-1:0}!function(t){t.current="",t.NFC="NFC",t.NFD="NFD",t.NFKC="NFKC",t.NFKD="NFKD"}(co||(co={})),function(t){t.UNEXPECTED_CONTINUE="unexpected continuation byte",t.BAD_PREFIX="bad codepoint prefix",t.OVERRUN="string overrun",t.MISSING_CONTINUE="missing continuation byte",t.OUT_OF_RANGE="out of UTF-8 range",t.UTF16_SURROGATE="UTF-16 surrogate",t.OVERLONG="overlong representation"}(po||(po={}));const go=Object.freeze({error:function(t,e,r,n,i){return fo.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`,"bytes",r)},ignore:mo,replace:function(t,e,r,n,i){return t===po.OVERLONG?(n.push(i),0):(n.push(65533),mo(t,e,r))}});function yo(t,e){null==e&&(e=go.error),t=rn(t);const r=[];let n=0;for(;n<t.length;){const i=t[n++];if(i>>7==0){r.push(i);continue}let o=null,s=null;if(192==(224&i))o=1,s=127;else if(224==(240&i))o=2,s=2047;else{if(240!=(248&i)){n+=e(128==(192&i)?po.UNEXPECTED_CONTINUE:po.BAD_PREFIX,n-1,t,r);continue}o=3,s=65535}if(n-1+o>=t.length){n+=e(po.OVERRUN,n-1,t,r);continue}let a=i&(1<<8-o-1)-1;for(let i=0;i<o;i++){let i=t[n];if(128!=(192&i)){n+=e(po.MISSING_CONTINUE,n,t,r),a=null;break}a=a<<6|63&i,n++}null!==a&&(a>1114111?n+=e(po.OUT_OF_RANGE,n-1-o,t,r,a):a>=55296&&a<=57343?n+=e(po.UTF16_SURROGATE,n-1-o,t,r,a):a<=s?n+=e(po.OVERLONG,n-1-o,t,r,a):r.push(a))}return r}function vo(t,e=co.current){e!=co.current&&(fo.checkNormalize(),t=t.normalize(e));let r=[];for(let e=0;e<t.length;e++){const n=t.charCodeAt(e);if(n<128)r.push(n);else if(n<2048)r.push(n>>6|192),r.push(63&n|128);else if(55296==(64512&n)){e++;const i=t.charCodeAt(e);if(e>=t.length||56320!=(64512&i))throw new Error("invalid utf-8 string");const o=65536+((1023&n)<<10)+(1023&i);r.push(o>>18|240),r.push(o>>12&63|128),r.push(o>>6&63|128),r.push(63&o|128)}else r.push(n>>12|224),r.push(n>>6&63|128),r.push(63&n|128)}return rn(r)}function wo(t){const e="0000"+t.toString(16);return"\\u"+e.substring(e.length-4)}function bo(t){return t.map((t=>t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10&1023),56320+(1023&t))))).join("")}function Ao(t,e){return bo(yo(t,e))}function Mo(t,e=co.current){return yo(vo(t,e))}function Io(t,e){e||(e=function(t){return[parseInt(t,16)]});let r=0,n={};return t.split(",").forEach((t=>{let i=t.split(":");r+=parseInt(i[0],16),n[r]=e(i[1])})),n}function Eo(t){let e=0;return t.split(",").map((t=>{let r=t.split("-");1===r.length?r[1]="0":""===r[1]&&(r[1]="1");let n=e+parseInt(r[0],16);return e=parseInt(r[1],16),{l:n,h:e}}))}function _o(t,e){let r=0;for(let n=0;n<e.length;n++){let i=e[n];if(r+=i.l,t>=r&&t<=r+i.h&&(t-r)%(i.d||1)==0){if(i.e&&-1!==i.e.indexOf(t-r))continue;return i}}return null}const So=Eo("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),Co="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((t=>parseInt(t,16))),xo=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],Bo=Io("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),ko=Io("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),Fo=Io("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",(function(t){if(t.length%4!=0)throw new Error("bad data");let e=[];for(let r=0;r<t.length;r+=4)e.push(parseInt(t.substring(r,r+4),16));return e})),No=Eo("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function To(t){if(t.match(/^[a-z0-9-]*$/i)&&t.length<=59)return t.toLowerCase();let e=Mo(t);var r;r=e.map((t=>{if(Co.indexOf(t)>=0)return[];if(t>=65024&&t<=65039)return[];return function(t){let e=_o(t,xo);if(e)return[t+e.s];let r=Bo[t];if(r)return r;let n=ko[t];return n?[t+n[0]]:Fo[t]||null}(t)||[t]})),e=r.reduce(((t,e)=>(e.forEach((e=>{t.push(e)})),t)),[]),e=Mo(bo(e),co.NFKC),e.forEach((t=>{if(_o(t,No))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")})),e.forEach((t=>{if(_o(t,So))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")}));let n=bo(e);if("-"===n.substring(0,1)||"--"===n.substring(2,4)||"-"===n.substring(n.length-1))throw new Error("invalid hyphen");if(n.length>63)throw new Error("too long");return n}class Ro extends Yi{constructor(t){super("string",t)}encode(t,e){return super.encode(t,vo(e))}decode(t){return Ao(super.decode(t))}}class Po extends Ii{constructor(t,e){let r=!1;const n=[];t.forEach((t=>{t.dynamic&&(r=!0),n.push(t.type)})),super("tuple","tuple("+n.join(",")+")",e,r),this.coders=t}encode(t,e){return Vi(t,this.coders,e)}decode(t){return t.coerce(this.name,Wi(t,this.coders))}}const Oo=new Jr($n),Uo=new RegExp(/^bytes([0-9]*)$/),Do=new RegExp(/^(u?int)([0-9]*)$/);class qo{constructor(t){Oo.checkNew(new.target,qo),zn(this,"coerceFunc",t||null)}_getCoder(t){switch(t.baseType){case"address":return new Ki(t.name);case"bool":return new Zi(t.name);case"string":return new Ro(t.name);case"bytes":return new Xi(t.name);case"array":return new Ji(this._getCoder(t.arrayChildren),t.arrayLength,t.name);case"tuple":return new Po((t.components||[]).map((t=>this._getCoder(t))),t.name);case"":return new to(t.name)}let e=t.type.match(Do);if(e){let r=parseInt(e[2]||"256");return(0===r||r>256||r%8!=0)&&Oo.throwArgumentError("invalid "+e[1]+" bit length","param",t),new lo(r/8,"int"===e[1],t.name)}if(e=t.type.match(Uo),e){let r=parseInt(e[1]);return(0===r||r>32)&&Oo.throwArgumentError("invalid bytes length","param",t),new $i(r,t.name)}return Oo.throwArgumentError("invalid type","type",t.type)}_getWordSize(){return 32}_getReader(t,e){return new _i(t,this._getWordSize(),this.coerceFunc,e)}_getWriter(){return new Ei(this._getWordSize())}encode(t,e){t.length!==e.length&&Oo.throwError("types/values length mismatch",Jr.errors.INVALID_ARGUMENT,{count:{types:t.length,values:e.length},value:{types:t,values:e}});const r=t.map((t=>this._getCoder(ui.from(t)))),n=new Po(r,"_"),i=this._getWriter();return n.encode(i,e),i.data}decode(t,e,r){const n=t.map((t=>this._getCoder(ui.from(t))));return new Po(n,"_").decode(this._getReader(rn(e),r))}}const Lo=new qo;function Qo(t){return Ci(vo(t))}const jo="hash/5.0.6",zo=new Jr(jo),Ko=new Uint8Array(32);Ko.fill(0);const Ho=new RegExp("^((.*)\\.)?([^.]+)$");function Go(t){"string"!=typeof t&&zo.throwArgumentError("invalid address - "+String(t),"name",t);let e=Ko;for(;t.length;){const r=t.match(Ho);e=Ci(nn([e,Ci(vo(To(r[3])))])),t=r[2]||""}return hn(e)}function Vo(t){return"string"==typeof t&&(t=vo(t)),Ci(nn([vo("Ethereum Signed Message:\n"),vo(String(t.length)),t]))}var Wo=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Jo=new Jr(jo),Zo=new Uint8Array(32);Zo.fill(0);const Yo=In.from(-1),Xo=In.from(0),$o=In.from(1),ts=In.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),es=mn($o.toHexString(),32),rs=mn(Xo.toHexString(),32),ns={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},is=["name","version","chainId","verifyingContract","salt"];function os(t){return function(e){return"string"!=typeof e&&Jo.throwArgumentError("invalid domain value for "+JSON.stringify(t),"domain."+t,e),e}}const ss={name:os("name"),version:os("version"),chainId:function(t){try{return In.from(t).toString()}catch(t){}return Jo.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",t)},verifyingContract:function(t){try{return ji(t).toLowerCase()}catch(t){}return Jo.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",t)},salt:function(t){try{const e=rn(t);if(32!==e.length)throw new Error("bad length");return hn(e)}catch(t){}return Jo.throwArgumentError('invalid domain value "salt"',"domain.salt",t)}};function as(t){{const e=t.match(/^(u?)int(\d*)$/);if(e){const r=""===e[1],n=parseInt(e[2]||"256");(n%8!=0||n>256||e[2]&&e[2]!==String(n))&&Jo.throwArgumentError("invalid numeric width","type",t);const i=ts.mask(r?n-1:n),o=r?i.add($o).mul(Yo):Xo;return function(e){const r=In.from(e);return(r.lt(o)||r.gt(i))&&Jo.throwArgumentError("value out-of-bounds for "+t,"value",e),mn(r.toTwos(256).toHexString(),32)}}}{const e=t.match(/^bytes(\d+)$/);if(e){const r=parseInt(e[1]);return(0===r||r>32||e[1]!==String(r))&&Jo.throwArgumentError("invalid bytes width","type",t),function(e){return rn(e).length!==r&&Jo.throwArgumentError("invalid length for "+t,"value",e),function(t){const e=rn(t),r=e.length%32;return r?cn([e,Zo.slice(r)]):hn(e)}(e)}}}switch(t){case"address":return function(t){return mn(ji(t),32)};case"bool":return function(t){return t?es:rs};case"bytes":return function(t){return Ci(t)};case"string":return function(t){return Qo(t)}}return null}function us(t,e){return`${t}(${e.map((({name:t,type:e})=>e+" "+t)).join(",")})`}class hs{constructor(t){zn(this,"types",Object.freeze(Yn(t))),zn(this,"_encoderCache",{}),zn(this,"_types",{});const e={},r={},n={};Object.keys(t).forEach((t=>{e[t]={},r[t]=[],n[t]={}}));for(const n in t){const i={};t[n].forEach((o=>{i[o.name]&&Jo.throwArgumentError(`duplicate variable name ${JSON.stringify(o.name)} in ${JSON.stringify(n)}`,"types",t),i[o.name]=!0;const s=o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];s===n&&Jo.throwArgumentError("circular type reference to "+JSON.stringify(s),"types",t),as(s)||(r[s]||Jo.throwArgumentError("unknown type "+JSON.stringify(s),"types",t),r[s].push(n),e[n][s]=!0)}))}const i=Object.keys(r).filter((t=>0===r[t].length));0===i.length?Jo.throwArgumentError("missing primary type","types",t):i.length>1&&Jo.throwArgumentError("ambiguous primary types or unused types: "+i.map((t=>JSON.stringify(t))).join(", "),"types",t),zn(this,"primaryType",i[0]),function i(o,s){s[o]&&Jo.throwArgumentError("circular type reference to "+JSON.stringify(o),"types",t),s[o]=!0,Object.keys(e[o]).forEach((t=>{r[t]&&(i(t,s),Object.keys(s).forEach((e=>{n[e][t]=!0})))})),delete s[o]}(this.primaryType,{});for(const e in n){const r=Object.keys(n[e]);r.sort(),this._types[e]=us(e,t[e])+r.map((e=>us(e,t[e]))).join("")}}getEncoder(t){let e=this._encoderCache[t];return e||(e=this._encoderCache[t]=this._getEncoder(t)),e}_getEncoder(t){{const e=as(t);if(e)return e}const e=t.match(/^(.*)(\x5b(\d*)\x5d)$/);if(e){const t=e[1],r=this.getEncoder(t),n=parseInt(e[3]);return e=>{n>=0&&e.length!==n&&Jo.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",e);let i=e.map(r);return this._types[t]&&(i=i.map(Ci)),Ci(cn(i))}}const r=this.types[t];if(r){const e=Qo(this._types[t]);return t=>{const n=r.map((({name:e,type:r})=>{const n=this.getEncoder(r)(t[e]);return this._types[r]?Ci(n):n}));return n.unshift(e),cn(n)}}return Jo.throwArgumentError("unknown type: "+t,"type",t)}encodeType(t){const e=this._types[t];return e||Jo.throwArgumentError("unknown type: "+JSON.stringify(t),"name",t),e}encodeData(t,e){return this.getEncoder(t)(e)}hashStruct(t,e){return Ci(this.encodeData(t,e))}encode(t){return this.encodeData(this.primaryType,t)}hash(t){return this.hashStruct(this.primaryType,t)}_visit(t,e,r){if(as(t))return r(t,e);const n=t.match(/^(.*)(\x5b(\d*)\x5d)$/);if(n){const t=n[1],i=parseInt(n[3]);return i>=0&&e.length!==i&&Jo.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",e),e.map((e=>this._visit(t,e,r)))}const i=this.types[t];return i?i.reduce(((t,{name:n,type:i})=>(t[n]=this._visit(i,e[n],r),t)),{}):Jo.throwArgumentError("unknown type: "+t,"type",t)}visit(t,e){return this._visit(this.primaryType,t,e)}static from(t){return new hs(t)}static getPrimaryType(t){return hs.from(t).primaryType}static hashStruct(t,e,r){return hs.from(e).hashStruct(t,r)}static hashDomain(t){const e=[];for(const r in t){const n=ns[r];n||Jo.throwArgumentError("invalid typed-data domain key: "+JSON.stringify(r),"domain",t),e.push({name:r,type:n})}return e.sort(((t,e)=>is.indexOf(t.name)-is.indexOf(e.name))),hs.hashStruct("EIP712Domain",{EIP712Domain:e},t)}static encode(t,e,r){return cn(["0x1901",hs.hashDomain(t),hs.from(e).hash(r)])}static hash(t,e,r){return Ci(hs.encode(t,e,r))}static resolveNames(t,e,r,n){return Wo(this,void 0,void 0,(function*(){t=Vn(t);const i={};t.verifyingContract&&!an(t.verifyingContract,20)&&(i[t.verifyingContract]="0x");const o=hs.from(e);o.visit(r,((t,e)=>("address"!==t||an(e,20)||(i[e]="0x"),e)));for(const t in i)i[t]=yield n(t);return t.verifyingContract&&i[t.verifyingContract]&&(t.verifyingContract=i[t.verifyingContract]),r=o.visit(r,((t,e)=>"address"===t&&i[e]?i[e]:e)),{domain:t,value:r}}))}static getPayload(t,e,r){hs.hashDomain(t);const n={},i=[];is.forEach((e=>{const r=t[e];null!=r&&(n[e]=ss[e](r),i.push({name:e,type:ns[e]}))}));const o=hs.from(e),s=Vn(e);return s.EIP712Domain&&(s.EIP712Domain=i),o.encode(r),{types:s,domain:n,primaryType:o.primaryType,message:o.visit(r,((t,e)=>{if(t.match(/^bytes(\d*)/))return hn(rn(e));if(t.match(/^u?int/)){let t="",r=In.from(e);return r.isNegative()&&(t="-",r=r.mul(-1)),t+dn(r.toHexString())}switch(t){case"address":return e.toLowerCase();case"bool":return!!e;case"string":return"string"!=typeof e&&Jo.throwArgumentError("invalid string","value",e),e}return Jo.throwArgumentError("unsupported type","type",t)}))}}}const ls=new Jr($n);class fs extends Xn{}class cs extends Xn{}class ds extends Xn{static isIndexed(t){return!(!t||!t._isIndexed)}}function ps(t,e){const r=new Error("deferred error during ABI decoding triggered accessing "+t);return r.error=e,r}class ms{constructor(t){ls.checkNew(new.target,ms);let e=[];e="string"==typeof t?JSON.parse(t):t,zn(this,"fragments",e.map((t=>li.from(t))).filter((t=>null!=t))),zn(this,"_abiCoder",Kn(new.target,"getAbiCoder")()),zn(this,"functions",{}),zn(this,"errors",{}),zn(this,"events",{}),zn(this,"structs",{}),this.fragments.forEach((t=>{let e=null;switch(t.type){case"constructor":return this.deploy?void ls.warn("duplicate definition - constructor"):void zn(this,"deploy",t);case"function":e=this.functions;break;case"event":e=this.events;break;default:return}let r=t.format();e[r]?ls.warn("duplicate definition - "+r):e[r]=t})),this.deploy||zn(this,"deploy",mi.from({payable:!1,type:"constructor"})),zn(this,"_isInterface",!0)}format(t){t||(t=si.full),t===si.sighash&&ls.throwArgumentError("interface does not support formatting sighash","format",t);const e=this.fragments.map((e=>e.format(t)));return t===si.json?JSON.stringify(e.map((t=>JSON.parse(t)))):e}static getAbiCoder(){return Lo}static getAddress(t){return ji(t)}static getSighash(t){return fn(Qo(t.format()),0,4)}static getEventTopic(t){return Qo(t.format())}getFunction(t){if(an(t)){for(const e in this.functions)if(t===this.getSighash(e))return this.functions[e];ls.throwArgumentError("no matching function","sighash",t)}if(-1===t.indexOf("(")){const e=t.trim(),r=Object.keys(this.functions).filter((t=>t.split("(")[0]===e));return 0===r.length?ls.throwArgumentError("no matching function","name",e):r.length>1&&ls.throwArgumentError("multiple matching functions","name",e),this.functions[r[0]]}const e=this.functions[gi.fromString(t).format()];return e||ls.throwArgumentError("no matching function","signature",t),e}getEvent(t){if(an(t)){const e=t.toLowerCase();for(const t in this.events)if(e===this.getEventTopic(t))return this.events[t];ls.throwArgumentError("no matching event","topichash",e)}if(-1===t.indexOf("(")){const e=t.trim(),r=Object.keys(this.events).filter((t=>t.split("(")[0]===e));return 0===r.length?ls.throwArgumentError("no matching event","name",e):r.length>1&&ls.throwArgumentError("multiple matching events","name",e),this.events[r[0]]}const e=this.events[fi.fromString(t).format()];return e||ls.throwArgumentError("no matching event","signature",t),e}getSighash(t){return"string"==typeof t&&(t=this.getFunction(t)),Kn(this.constructor,"getSighash")(t)}getEventTopic(t){return"string"==typeof t&&(t=this.getEvent(t)),Kn(this.constructor,"getEventTopic")(t)}_decodeParams(t,e){return this._abiCoder.decode(t,e)}_encodeParams(t,e){return this._abiCoder.encode(t,e)}encodeDeploy(t){return this._encodeParams(this.deploy.inputs,t||[])}decodeFunctionData(t,e){"string"==typeof t&&(t=this.getFunction(t));const r=rn(e);return hn(r.slice(0,4))!==this.getSighash(t)&&ls.throwArgumentError(`data signature does not match function ${t.name}.`,"data",hn(r)),this._decodeParams(t.inputs,r.slice(4))}encodeFunctionData(t,e){return"string"==typeof t&&(t=this.getFunction(t)),hn(nn([this.getSighash(t),this._encodeParams(t.inputs,e||[])]))}decodeFunctionResult(t,e){"string"==typeof t&&(t=this.getFunction(t));let r=rn(e),n=null,i=null;switch(r.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(t.outputs,r)}catch(t){}break;case 4:"0x08c379a0"===hn(r.slice(0,4))&&(i="Error(string)",n=this._abiCoder.decode(["string"],r.slice(4))[0])}return ls.throwError("call revert exception",Jr.errors.CALL_EXCEPTION,{method:t.format(),errorSignature:i,errorArgs:[n],reason:n})}encodeFunctionResult(t,e){return"string"==typeof t&&(t=this.getFunction(t)),hn(this._abiCoder.encode(t.outputs,e||[]))}encodeFilterTopics(t,e){"string"==typeof t&&(t=this.getEvent(t)),e.length>t.inputs.length&&ls.throwError("too many arguments for "+t.format(),Jr.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:e});let r=[];t.anonymous||r.push(this.getEventTopic(t));const n=(t,e)=>"string"===t.type?Qo(e):"bytes"===t.type?Ci(hn(e)):("address"===t.type&&this._abiCoder.encode(["address"],[e]),mn(hn(e),32));for(e.forEach(((e,i)=>{let o=t.inputs[i];o.indexed?null==e?r.push(null):"array"===o.baseType||"tuple"===o.baseType?ls.throwArgumentError("filtering with tuples or arrays not supported","contract."+o.name,e):Array.isArray(e)?r.push(e.map((t=>n(o,t)))):r.push(n(o,e)):null!=e&&ls.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+o.name,e)}));r.length&&null===r[r.length-1];)r.pop();return r}encodeEventLog(t,e){"string"==typeof t&&(t=this.getEvent(t));const r=[],n=[],i=[];return t.anonymous||r.push(this.getEventTopic(t)),e.length!==t.inputs.length&&ls.throwArgumentError("event arguments/values mismatch","values",e),t.inputs.forEach(((t,o)=>{const s=e[o];if(t.indexed)if("string"===t.type)r.push(Qo(s));else if("bytes"===t.type)r.push(Ci(s));else{if("tuple"===t.baseType||"array"===t.baseType)throw new Error("not implemented");r.push(this._abiCoder.encode([t.type],[s]))}else n.push(t),i.push(s)})),{data:this._abiCoder.encode(n,i),topics:r}}decodeEventLog(t,e,r){if("string"==typeof t&&(t=this.getEvent(t)),null!=r&&!t.anonymous){let e=this.getEventTopic(t);an(r[0],32)&&r[0].toLowerCase()===e||ls.throwError("fragment/topic mismatch",Jr.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:e,value:r[0]}),r=r.slice(1)}let n=[],i=[],o=[];t.inputs.forEach(((t,e)=>{t.indexed?"string"===t.type||"bytes"===t.type||"tuple"===t.baseType||"array"===t.baseType?(n.push(ui.fromObject({type:"bytes32",name:t.name})),o.push(!0)):(n.push(t),o.push(!1)):(i.push(t),o.push(!1))}));let s=null!=r?this._abiCoder.decode(n,nn(r)):null,a=this._abiCoder.decode(i,e,!0),u=[],h=0,l=0;t.inputs.forEach(((t,e)=>{if(t.indexed)if(null==s)u[e]=new ds({_isIndexed:!0,hash:null});else if(o[e])u[e]=new ds({_isIndexed:!0,hash:s[l++]});else try{u[e]=s[l++]}catch(t){u[e]=t}else try{u[e]=a[h++]}catch(t){u[e]=t}if(t.name&&null==u[t.name]){const r=u[e];r instanceof Error?Object.defineProperty(u,t.name,{get:()=>{throw ps("property "+JSON.stringify(t.name),r)}}):u[t.name]=r}}));for(let t=0;t<u.length;t++){const e=u[t];e instanceof Error&&Object.defineProperty(u,t,{get:()=>{throw ps("index "+t,e)}})}return Object.freeze(u)}parseTransaction(t){let e=this.getFunction(t.data.substring(0,10).toLowerCase());return e?new cs({args:this._abiCoder.decode(e.inputs,"0x"+t.data.substring(10)),functionFragment:e,name:e.name,signature:e.format(),sighash:this.getSighash(e),value:In.from(t.value||"0")}):null}parseLog(t){let e=this.getEvent(t.topics[0]);return!e||e.anonymous?null:new fs({eventFragment:e,name:e.name,signature:e.format(),topic:this.getEventTopic(e),args:this.decodeEventLog(e,t.data,t.topics)})}static isInterface(t){return!(!t||!t._isInterface)}}const gs=new Jr("abstract-provider/5.0.5");class ys extends Xn{static isForkEvent(t){return!(!t||!t._isForkEvent)}}class vs{constructor(){gs.checkAbstract(new.target,vs),zn(this,"_isProvider",!0)}addListener(t,e){return this.on(t,e)}removeListener(t,e){return this.off(t,e)}static isProvider(t){return!(!t||!t._isProvider)}}var ws=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const bs=new Jr("abstract-signer/5.0.7"),As=["chainId","data","from","gasLimit","gasPrice","nonce","to","value"],Ms=[Jr.errors.INSUFFICIENT_FUNDS,Jr.errors.NONCE_EXPIRED,Jr.errors.REPLACEMENT_UNDERPRICED];class Is{constructor(){bs.checkAbstract(new.target,Is),zn(this,"_isSigner",!0)}getBalance(t){return ws(this,void 0,void 0,(function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),t)}))}getTransactionCount(t){return ws(this,void 0,void 0,(function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),t)}))}estimateGas(t){return ws(this,void 0,void 0,(function*(){this._checkProvider("estimateGas");const e=yield Hn(this.checkTransaction(t));return yield this.provider.estimateGas(e)}))}call(t,e){return ws(this,void 0,void 0,(function*(){this._checkProvider("call");const r=yield Hn(this.checkTransaction(t));return yield this.provider.call(r,e)}))}sendTransaction(t){return this._checkProvider("sendTransaction"),this.populateTransaction(t).then((t=>this.signTransaction(t).then((t=>this.provider.sendTransaction(t)))))}getChainId(){return ws(this,void 0,void 0,(function*(){return this._checkProvider("getChainId"),(yield this.provider.getNetwork()).chainId}))}getGasPrice(){return ws(this,void 0,void 0,(function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()}))}resolveName(t){return ws(this,void 0,void 0,(function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(t)}))}checkTransaction(t){for(const e in t)-1===As.indexOf(e)&&bs.throwArgumentError("invalid transaction key: "+e,"transaction",t);const e=Vn(t);return null==e.from?e.from=this.getAddress():e.from=Promise.all([Promise.resolve(e.from),this.getAddress()]).then((e=>(e[0]!==e[1]&&bs.throwArgumentError("from address mismatch","transaction",t),e[0]))),e}populateTransaction(t){return ws(this,void 0,void 0,(function*(){const e=yield Hn(this.checkTransaction(t));return null!=e.to&&(e.to=Promise.resolve(e.to).then((t=>this.resolveName(t)))),null==e.gasPrice&&(e.gasPrice=this.getGasPrice()),null==e.nonce&&(e.nonce=this.getTransactionCount("pending")),null==e.gasLimit&&(e.gasLimit=this.estimateGas(e).catch((t=>{if(Ms.indexOf(t.code)>=0)throw t;return bs.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Jr.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,tx:e})}))),null==e.chainId?e.chainId=this.getChainId():e.chainId=Promise.all([Promise.resolve(e.chainId),this.getChainId()]).then((e=>(0!==e[1]&&e[0]!==e[1]&&bs.throwArgumentError("chainId address mismatch","transaction",t),e[0]))),yield Hn(e)}))}_checkProvider(t){this.provider||bs.throwError("missing provider",Jr.errors.UNSUPPORTED_OPERATION,{operation:t||"_checkProvider"})}static isSigner(t){return!(!t||!t._isSigner)}}class Es extends Is{constructor(t,e){bs.checkNew(new.target,Es),super(),zn(this,"address",t),zn(this,"provider",e||null)}getAddress(){return Promise.resolve(this.address)}_fail(t,e){return Promise.resolve().then((()=>{bs.throwError(t,Jr.errors.UNSUPPORTED_OPERATION,{operation:e})}))}signMessage(t){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(t){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(t,e,r){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(t){return new Es(this.address,t)}}var _s=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Ss=new Jr("contracts/5.0.5"),Cs={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0};function xs(t,e){return _s(this,void 0,void 0,(function*(){const r=yield e;try{return ji(r)}catch(t){}t||Ss.throwError("a provider or signer is needed to resolve ENS names",Jr.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const n=yield t.resolveName(r);return null==n&&Ss.throwArgumentError("resolver or addr is not configured for ENS name","name",r),n}))}function Bs(t,e,r){return _s(this,void 0,void 0,(function*(){return Array.isArray(r)?yield Promise.all(r.map(((r,n)=>Bs(t,Array.isArray(e)?e[n]:e[r.name],r)))):"address"===r.type?yield xs(t,e):"tuple"===r.type?yield Bs(t,e,r.components):"array"===r.baseType?Array.isArray(e)?yield Promise.all(e.map((e=>Bs(t,e,r.arrayChildren)))):Promise.reject(new Error("invalid value for array")):e}))}function ks(t,e,r){return _s(this,void 0,void 0,(function*(){let n={};r.length===e.inputs.length+1&&"object"==typeof r[r.length-1]&&(n=Vn(r.pop())),Ss.checkArgumentCount(r.length,e.inputs.length,"passed to contract"),t.signer?n.from?n.from=Hn({override:xs(t.signer,n.from),signer:t.signer.getAddress()}).then((t=>_s(this,void 0,void 0,(function*(){return ji(t.signer)!==t.override&&Ss.throwError("Contract with a Signer cannot override from",Jr.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),t.override})))):n.from=t.signer.getAddress():n.from&&(n.from=xs(t.provider,n.from));const i=yield Hn({args:Bs(t.signer||t.provider,r,e.inputs),address:t.resolvedAddress,overrides:Hn(n)||{}}),o=t.interface.encodeFunctionData(e,i.args),s={data:o,to:i.address},a=i.overrides;if(null!=a.nonce&&(s.nonce=In.from(a.nonce).toNumber()),null!=a.gasLimit&&(s.gasLimit=In.from(a.gasLimit)),null!=a.gasPrice&&(s.gasPrice=In.from(a.gasPrice)),null!=a.from&&(s.from=a.from),null==s.gasLimit&&null!=e.gas){let t=21e3;const r=rn(o);for(let e=0;e<r.length;e++)t+=4,r[e]&&(t+=64);s.gasLimit=In.from(e.gas).add(t)}if(a.value){const t=In.from(a.value);t.isZero()||e.payable||Ss.throwError("non-payable method cannot override value",Jr.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:n.value}),s.value=t}delete n.nonce,delete n.gasLimit,delete n.gasPrice,delete n.from,delete n.value;const u=Object.keys(n).filter((t=>null!=n[t]));return u.length&&Ss.throwError("cannot override "+u.map((t=>JSON.stringify(t))).join(","),Jr.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:u}),s}))}function Fs(t,e,r){const n=t.signer||t.provider;return function(...i){return _s(this,void 0,void 0,(function*(){let o=void 0;if(i.length===e.inputs.length+1&&"object"==typeof i[i.length-1]){const t=Vn(i.pop());null!=t.blockTag&&(o=yield t.blockTag),delete t.blockTag,i.push(t)}null!=t.deployTransaction&&(yield t._deployed(o));const s=yield ks(t,e,i),a=yield n.call(s,o);try{let n=t.interface.decodeFunctionResult(e,a);return r&&1===e.outputs.length&&(n=n[0]),n}catch(e){throw e.code===Jr.errors.CALL_EXCEPTION&&(e.address=t.address,e.args=i,e.transaction=s),e}}))}}function Ns(t,e,r){return e.constant?Fs(t,e,r):function(t,e){return function(...r){return _s(this,void 0,void 0,(function*(){t.signer||Ss.throwError("sending a transaction requires a signer",Jr.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),null!=t.deployTransaction&&(yield t._deployed());const n=yield ks(t,e,r),i=yield t.signer.sendTransaction(n),o=i.wait.bind(i);return i.wait=e=>o(e).then((e=>(e.events=e.logs.map((r=>{let n=Yn(r),i=null;try{i=t.interface.parseLog(r)}catch(t){}return i&&(n.args=i.args,n.decode=(e,r)=>t.interface.decodeEventLog(i.eventFragment,e,r),n.event=i.name,n.eventSignature=i.signature),n.removeListener=()=>t.provider,n.getBlock=()=>t.provider.getBlock(e.blockHash),n.getTransaction=()=>t.provider.getTransaction(e.transactionHash),n.getTransactionReceipt=()=>Promise.resolve(e),n})),e))),i}))}}(t,e)}function Ts(t){return!t.address||null!=t.topics&&0!==t.topics.length?(t.address||"*")+"@"+(t.topics?t.topics.map((t=>Array.isArray(t)?t.join("|"):t)).join(":"):""):"*"}class Rs{constructor(t,e){zn(this,"tag",t),zn(this,"filter",e),this._listeners=[]}addListener(t,e){this._listeners.push({listener:t,once:e})}removeListener(t){let e=!1;this._listeners=this._listeners.filter((r=>!(!e&&r.listener===t&&(e=!0,1))))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map((t=>t.listener))}listenerCount(){return this._listeners.length}run(t){const e=this.listenerCount();return this._listeners=this._listeners.filter((e=>{const r=t.slice();return setTimeout((()=>{e.listener.apply(this,r)}),0),!e.once})),e}prepareEvent(t){}getEmit(t){return[t]}}class Ps extends Rs{constructor(){super("error",null)}}class Os extends Rs{constructor(t,e,r,n){const i={address:t};let o=e.getEventTopic(r);n?(o!==n[0]&&Ss.throwArgumentError("topic mismatch","topics",n),i.topics=n.slice()):i.topics=[o],super(Ts(i),i),zn(this,"address",t),zn(this,"interface",e),zn(this,"fragment",r)}prepareEvent(t){super.prepareEvent(t),t.event=this.fragment.name,t.eventSignature=this.fragment.format(),t.decode=(t,e)=>this.interface.decodeEventLog(this.fragment,t,e);try{t.args=this.interface.decodeEventLog(this.fragment,t.data,t.topics)}catch(e){t.args=null,t.decodeError=e}}getEmit(t){const e=Mi(t.args);if(e.length)throw e[0].error;const r=(t.args||[]).slice();return r.push(t),r}}class Us extends Rs{constructor(t,e){super("*",{address:t}),zn(this,"address",t),zn(this,"interface",e)}prepareEvent(t){super.prepareEvent(t);try{const e=this.interface.parseLog(t);t.event=e.name,t.eventSignature=e.signature,t.decode=(t,r)=>this.interface.decodeEventLog(e.eventFragment,t,r),t.args=e.args}catch(t){}}}class Ds{constructor(t,e,r){Ss.checkNew(new.target,Ds),zn(this,"interface",Kn(new.target,"getInterface")(e)),null==r?(zn(this,"provider",null),zn(this,"signer",null)):Is.isSigner(r)?(zn(this,"provider",r.provider||null),zn(this,"signer",r)):vs.isProvider(r)?(zn(this,"provider",r),zn(this,"signer",null)):Ss.throwArgumentError("invalid signer or provider","signerOrProvider",r),zn(this,"callStatic",{}),zn(this,"estimateGas",{}),zn(this,"functions",{}),zn(this,"populateTransaction",{}),zn(this,"filters",{});{const t={};Object.keys(this.interface.events).forEach((e=>{const r=this.interface.events[e];zn(this.filters,e,((...t)=>({address:this.address,topics:this.interface.encodeFilterTopics(r,t)}))),t[r.name]||(t[r.name]=[]),t[r.name].push(e)})),Object.keys(t).forEach((e=>{const r=t[e];1===r.length?zn(this.filters,e,this.filters[r[0]]):Ss.warn(`Duplicate definition of ${e} (${r.join(", ")})`)}))}if(zn(this,"_runningEvents",{}),zn(this,"_wrappedEmits",{}),zn(this,"address",t),this.provider)zn(this,"resolvedAddress",xs(this.provider,t));else try{zn(this,"resolvedAddress",Promise.resolve(ji(t)))}catch(t){Ss.throwError("provider is required to use ENS name as contract address",Jr.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}const n={},i={};Object.keys(this.interface.functions).forEach((t=>{const e=this.interface.functions[t];if(i[t])Ss.warn("Duplicate ABI entry for "+JSON.stringify(name));else{i[t]=!0;{const r=e.name;n[r]||(n[r]=[]),n[r].push(t)}null==this[t]&&zn(this,t,Ns(this,e,!0)),null==this.functions[t]&&zn(this.functions,t,Ns(this,e,!1)),null==this.callStatic[t]&&zn(this.callStatic,t,Fs(this,e,!0)),null==this.populateTransaction[t]&&zn(this.populateTransaction,t,function(t,e){return function(...r){return ks(t,e,r)}}(this,e)),null==this.estimateGas[t]&&zn(this.estimateGas,t,function(t,e){const r=t.signer||t.provider;return function(...n){return _s(this,void 0,void 0,(function*(){r||Ss.throwError("estimate require a provider or signer",Jr.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const i=yield ks(t,e,n);return yield r.estimateGas(i)}))}}(this,e))}})),Object.keys(n).forEach((t=>{const e=n[t];if(e.length>1)return;const r=e[0];null==this[t]&&zn(this,t,this[r]),null==this.functions[t]&&zn(this.functions,t,this.functions[r]),null==this.callStatic[t]&&zn(this.callStatic,t,this.callStatic[r]),null==this.populateTransaction[t]&&zn(this.populateTransaction,t,this.populateTransaction[r]),null==this.estimateGas[t]&&zn(this.estimateGas,t,this.estimateGas[r])}))}static getContractAddress(t){return zi(t)}static getInterface(t){return ms.isInterface(t)?t:new ms(t)}deployed(){return this._deployed()}_deployed(t){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then((()=>this)):this._deployedPromise=this.provider.getCode(this.address,t).then((t=>("0x"===t&&Ss.throwError("contract not deployed",Jr.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this)))),this._deployedPromise}fallback(t){this.signer||Ss.throwError("sending a transactions require a signer",Jr.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const e=Vn(t||{});return["from","to"].forEach((function(t){null!=e[t]&&Ss.throwError("cannot override "+t,Jr.errors.UNSUPPORTED_OPERATION,{operation:t})})),e.to=this.resolvedAddress,this.deployed().then((()=>this.signer.sendTransaction(e)))}connect(t){"string"==typeof t&&(t=new Es(t,this.provider));const e=new this.constructor(this.address,this.interface,t);return this.deployTransaction&&zn(e,"deployTransaction",this.deployTransaction),e}attach(t){return new this.constructor(t,this.interface,this.signer||this.provider)}static isIndexed(t){return ds.isIndexed(t)}_normalizeRunningEvent(t){return this._runningEvents[t.tag]?this._runningEvents[t.tag]:t}_getRunningEvent(t){if("string"==typeof t){if("error"===t)return this._normalizeRunningEvent(new Ps);if("event"===t)return this._normalizeRunningEvent(new Rs("event",null));if("*"===t)return this._normalizeRunningEvent(new Us(this.address,this.interface));const e=this.interface.getEvent(t);return this._normalizeRunningEvent(new Os(this.address,this.interface,e))}if(t.topics&&t.topics.length>0){try{const e=t.topics[0];if("string"!=typeof e)throw new Error("invalid topic");const r=this.interface.getEvent(e);return this._normalizeRunningEvent(new Os(this.address,this.interface,r,t.topics))}catch(t){}const e={address:this.address,topics:t.topics};return this._normalizeRunningEvent(new Rs(Ts(e),e))}return this._normalizeRunningEvent(new Us(this.address,this.interface))}_checkRunningEvents(t){if(0===t.listenerCount()){delete this._runningEvents[t.tag];const e=this._wrappedEmits[t.tag];e&&(this.provider.off(t.filter,e),delete this._wrappedEmits[t.tag])}}_wrapEvent(t,e,r){const n=Yn(e);return n.removeListener=()=>{r&&(t.removeListener(r),this._checkRunningEvents(t))},n.getBlock=()=>this.provider.getBlock(e.blockHash),n.getTransaction=()=>this.provider.getTransaction(e.transactionHash),n.getTransactionReceipt=()=>this.provider.getTransactionReceipt(e.transactionHash),t.prepareEvent(n),n}_addEventListener(t,e,r){if(this.provider||Ss.throwError("events require a provider or a signer with a provider",Jr.errors.UNSUPPORTED_OPERATION,{operation:"once"}),t.addListener(e,r),this._runningEvents[t.tag]=t,!this._wrappedEmits[t.tag]){const r=r=>{let n=this._wrapEvent(t,r,e);if(null==n.decodeError)try{const e=t.getEmit(n);this.emit(t.filter,...e)}catch(t){n.decodeError=t.error}null!=t.filter&&this.emit("event",n),null!=n.decodeError&&this.emit("error",n.decodeError,n)};this._wrappedEmits[t.tag]=r,null!=t.filter&&this.provider.on(t.filter,r)}}queryFilter(t,e,r){const n=this._getRunningEvent(t),i=Vn(n.filter);return"string"==typeof e&&an(e,32)?(null!=r&&Ss.throwArgumentError("cannot specify toBlock with blockhash","toBlock",r),i.blockHash=e):(i.fromBlock=null!=e?e:0,i.toBlock=null!=r?r:"latest"),this.provider.getLogs(i).then((t=>t.map((t=>this._wrapEvent(n,t,null)))))}on(t,e){return this._addEventListener(this._getRunningEvent(t),e,!1),this}once(t,e){return this._addEventListener(this._getRunningEvent(t),e,!0),this}emit(t,...e){if(!this.provider)return!1;const r=this._getRunningEvent(t),n=r.run(e)>0;return this._checkRunningEvents(r),n}listenerCount(t){return this.provider?this._getRunningEvent(t).listenerCount():0}listeners(t){if(!this.provider)return[];if(null==t){const t=[];for(let e in this._runningEvents)this._runningEvents[e].listeners().forEach((e=>{t.push(e)}));return t}return this._getRunningEvent(t).listeners()}removeAllListeners(t){if(!this.provider)return this;if(null==t){for(const t in this._runningEvents){const e=this._runningEvents[t];e.removeAllListeners(),this._checkRunningEvents(e)}return this}const e=this._getRunningEvent(t);return e.removeAllListeners(),this._checkRunningEvents(e),this}off(t,e){if(!this.provider)return this;const r=this._getRunningEvent(t);return r.removeListener(e),this._checkRunningEvents(r),this}removeListener(t,e){return this.off(t,e)}}class qs{constructor(t){zn(this,"alphabet",t),zn(this,"base",t.length),zn(this,"_alphabetMap",{}),zn(this,"_leader",t.charAt(0));for(let e=0;e<t.length;e++)this._alphabetMap[t.charAt(e)]=e}encode(t){let e=rn(t);if(0===e.length)return"";let r=[0];for(let t=0;t<e.length;++t){let n=e[t];for(let t=0;t<r.length;++t)n+=r[t]<<8,r[t]=n%this.base,n=n/this.base|0;for(;n>0;)r.push(n%this.base),n=n/this.base|0}let n="";for(let t=0;0===e[t]&&t<e.length-1;++t)n+=this._leader;for(let t=r.length-1;t>=0;--t)n+=this.alphabet[r[t]];return n}decode(t){if("string"!=typeof t)throw new TypeError("Expected String");let e=[];if(0===t.length)return new Uint8Array(e);e.push(0);for(let r=0;r<t.length;r++){let n=this._alphabetMap[t[r]];if(void 0===n)throw new Error("Non-base"+this.base+" character");let i=n;for(let t=0;t<e.length;++t)i+=e[t]*this.base,e[t]=255&i,i>>=8;for(;i>0;)e.push(255&i),i>>=8}for(let r=0;t[r]===this._leader&&r<t.length-1;++r)e.push(0);return rn(new Uint8Array(e.reverse()))}}new qs("abcdefghijklmnopqrstuvwxyz234567");const Ls=new qs("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");var Qs=js;function js(t,e){if(!t)throw new Error(e||"Assertion failed")}js.equal=function(t,e,r){if(t!=e)throw new Error(r||"Assertion failed: "+t+" != "+e)};var zs=_r((function(t){"function"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}}}));function Ks(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function Hs(t){return 1===t.length?"0"+t:t}function Gs(t){return 7===t.length?"0"+t:6===t.length?"00"+t:5===t.length?"000"+t:4===t.length?"0000"+t:3===t.length?"00000"+t:2===t.length?"000000"+t:1===t.length?"0000000"+t:t}var Vs={inherits:zs,toArray:function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if("string"==typeof t)if(e){if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),n=0;n<t.length;n+=2)r.push(parseInt(t[n]+t[n+1],16))}else for(var n=0;n<t.length;n++){var i=t.charCodeAt(n),o=i>>8,s=255&i;o?r.push(o,s):r.push(s)}else for(n=0;n<t.length;n++)r[n]=0|t[n];return r},toHex:function(t){for(var e="",r=0;r<t.length;r++)e+=Hs(t[r].toString(16));return e},htonl:Ks,toHex32:function(t,e){for(var r="",n=0;n<t.length;n++){var i=t[n];"little"===e&&(i=Ks(i)),r+=Gs(i.toString(16))}return r},zero2:Hs,zero8:Gs,join32:function(t,e,r,n){var i=r-e;Qs(i%4==0);for(var o=new Array(i/4),s=0,a=e;s<o.length;s++,a+=4){var u;u="big"===n?t[a]<<24|t[a+1]<<16|t[a+2]<<8|t[a+3]:t[a+3]<<24|t[a+2]<<16|t[a+1]<<8|t[a],o[s]=u>>>0}return o},split32:function(t,e){for(var r=new Array(4*t.length),n=0,i=0;n<t.length;n++,i+=4){var o=t[n];"big"===e?(r[i]=o>>>24,r[i+1]=o>>>16&255,r[i+2]=o>>>8&255,r[i+3]=255&o):(r[i+3]=o>>>24,r[i+2]=o>>>16&255,r[i+1]=o>>>8&255,r[i]=255&o)}return r},rotr32:function(t,e){return t>>>e|t<<32-e},rotl32:function(t,e){return t<<e|t>>>32-e},sum32:function(t,e){return t+e>>>0},sum32_3:function(t,e,r){return t+e+r>>>0},sum32_4:function(t,e,r,n){return t+e+r+n>>>0},sum32_5:function(t,e,r,n,i){return t+e+r+n+i>>>0},sum64:function(t,e,r,n){var i=t[e],o=n+t[e+1]>>>0,s=(o<n?1:0)+r+i;t[e]=s>>>0,t[e+1]=o},sum64_hi:function(t,e,r,n){return(e+n>>>0<e?1:0)+t+r>>>0},sum64_lo:function(t,e,r,n){return e+n>>>0},sum64_4_hi:function(t,e,r,n,i,o,s,a){var u=0,h=e;return u+=(h=h+n>>>0)<e?1:0,u+=(h=h+o>>>0)<o?1:0,t+r+i+s+(u+=(h=h+a>>>0)<a?1:0)>>>0},sum64_4_lo:function(t,e,r,n,i,o,s,a){return e+n+o+a>>>0},sum64_5_hi:function(t,e,r,n,i,o,s,a,u,h){var l=0,f=e;return l+=(f=f+n>>>0)<e?1:0,l+=(f=f+o>>>0)<o?1:0,l+=(f=f+a>>>0)<a?1:0,t+r+i+s+u+(l+=(f=f+h>>>0)<h?1:0)>>>0},sum64_5_lo:function(t,e,r,n,i,o,s,a,u,h){return e+n+o+a+h>>>0},rotr64_hi:function(t,e,r){return(e<<32-r|t>>>r)>>>0},rotr64_lo:function(t,e,r){return(t<<32-r|e>>>r)>>>0},shr64_hi:function(t,e,r){return t>>>r},shr64_lo:function(t,e,r){return(t<<32-r|e>>>r)>>>0}};function Ws(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}var Js=Ws;Ws.prototype.update=function(t,e){if(t=Vs.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var r=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-r,t.length),0===this.pending.length&&(this.pending=null),t=Vs.join32(t,0,t.length-r,this.endian);for(var n=0;n<t.length;n+=this._delta32)this._update(t,n,n+this._delta32)}return this},Ws.prototype.digest=function(t){return this.update(this._pad()),Qs(null===this.pending),this._digest(t)},Ws.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,r=e-(t+this.padLength)%e,n=new Array(r+this.padLength);n[0]=128;for(var i=1;i<r;i++)n[i]=0;if(t<<=3,"big"===this.endian){for(var o=8;o<this.padLength;o++)n[i++]=0;n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=t>>>24&255,n[i++]=t>>>16&255,n[i++]=t>>>8&255,n[i++]=255&t}else for(n[i++]=255&t,n[i++]=t>>>8&255,n[i++]=t>>>16&255,n[i++]=t>>>24&255,n[i++]=0,n[i++]=0,n[i++]=0,n[i++]=0,o=8;o<this.padLength;o++)n[i++]=0;return n};var Zs={BlockHash:Js},Ys=Vs.rotr32;function Xs(t,e,r){return t&e^~t&r}function $s(t,e,r){return t&e^t&r^e&r}var ta=Xs,ea=$s,ra=function(t){return Ys(t,2)^Ys(t,13)^Ys(t,22)},na=function(t){return Ys(t,6)^Ys(t,11)^Ys(t,25)},ia=function(t){return Ys(t,7)^Ys(t,18)^t>>>3},oa=function(t){return Ys(t,17)^Ys(t,19)^t>>>10},sa=Vs.sum32,aa=Vs.sum32_4,ua=Vs.sum32_5,ha=ta,la=ea,fa=ra,ca=na,da=ia,pa=oa,ma=Zs.BlockHash,ga=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function ya(){if(!(this instanceof ya))return new ya;ma.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=ga,this.W=new Array(64)}Vs.inherits(ya,ma);var va=ya;ya.blockSize=512,ya.outSize=256,ya.hmacStrength=192,ya.padLength=64,ya.prototype._update=function(t,e){for(var r=this.W,n=0;n<16;n++)r[n]=t[e+n];for(;n<r.length;n++)r[n]=aa(pa(r[n-2]),r[n-7],da(r[n-15]),r[n-16]);var i=this.h[0],o=this.h[1],s=this.h[2],a=this.h[3],u=this.h[4],h=this.h[5],l=this.h[6],f=this.h[7];for(Qs(this.k.length===r.length),n=0;n<r.length;n++){var c=ua(f,ca(u),ha(u,h,l),this.k[n],r[n]),d=sa(fa(i),la(i,o,s));f=l,l=h,h=u,u=sa(a,c),a=s,s=o,o=i,i=sa(c,d)}this.h[0]=sa(this.h[0],i),this.h[1]=sa(this.h[1],o),this.h[2]=sa(this.h[2],s),this.h[3]=sa(this.h[3],a),this.h[4]=sa(this.h[4],u),this.h[5]=sa(this.h[5],h),this.h[6]=sa(this.h[6],l),this.h[7]=sa(this.h[7],f)},ya.prototype._digest=function(t){return"hex"===t?Vs.toHex32(this.h,"big"):Vs.split32(this.h,"big")};var wa=Vs.rotr64_hi,ba=Vs.rotr64_lo,Aa=Vs.shr64_hi,Ma=Vs.shr64_lo,Ia=Vs.sum64,Ea=Vs.sum64_hi,_a=Vs.sum64_lo,Sa=Vs.sum64_4_hi,Ca=Vs.sum64_4_lo,xa=Vs.sum64_5_hi,Ba=Vs.sum64_5_lo,ka=Zs.BlockHash,Fa=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Na(){if(!(this instanceof Na))return new Na;ka.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=Fa,this.W=new Array(160)}Vs.inherits(Na,ka);var Ta=Na;function Ra(t,e,r,n,i){var o=t&r^~t&i;return o<0&&(o+=4294967296),o}function Pa(t,e,r,n,i,o){var s=e&n^~e&o;return s<0&&(s+=4294967296),s}function Oa(t,e,r,n,i){var o=t&r^t&i^r&i;return o<0&&(o+=4294967296),o}function Ua(t,e,r,n,i,o){var s=e&n^e&o^n&o;return s<0&&(s+=4294967296),s}function Da(t,e){var r=wa(t,e,28)^wa(e,t,2)^wa(e,t,7);return r<0&&(r+=4294967296),r}function qa(t,e){var r=ba(t,e,28)^ba(e,t,2)^ba(e,t,7);return r<0&&(r+=4294967296),r}function La(t,e){var r=wa(t,e,14)^wa(t,e,18)^wa(e,t,9);return r<0&&(r+=4294967296),r}function Qa(t,e){var r=ba(t,e,14)^ba(t,e,18)^ba(e,t,9);return r<0&&(r+=4294967296),r}function ja(t,e){var r=wa(t,e,1)^wa(t,e,8)^Aa(t,e,7);return r<0&&(r+=4294967296),r}function za(t,e){var r=ba(t,e,1)^ba(t,e,8)^Ma(t,e,7);return r<0&&(r+=4294967296),r}function Ka(t,e){var r=wa(t,e,19)^wa(e,t,29)^Aa(t,e,6);return r<0&&(r+=4294967296),r}function Ha(t,e){var r=ba(t,e,19)^ba(e,t,29)^Ma(t,e,6);return r<0&&(r+=4294967296),r}Na.blockSize=1024,Na.outSize=512,Na.hmacStrength=192,Na.padLength=128,Na.prototype._prepareBlock=function(t,e){for(var r=this.W,n=0;n<32;n++)r[n]=t[e+n];for(;n<r.length;n+=2){var i=Ka(r[n-4],r[n-3]),o=Ha(r[n-4],r[n-3]),s=r[n-14],a=r[n-13],u=ja(r[n-30],r[n-29]),h=za(r[n-30],r[n-29]),l=r[n-32],f=r[n-31];r[n]=Sa(i,o,s,a,u,h,l,f),r[n+1]=Ca(i,o,s,a,u,h,l,f)}},Na.prototype._update=function(t,e){this._prepareBlock(t,e);var r=this.W,n=this.h[0],i=this.h[1],o=this.h[2],s=this.h[3],a=this.h[4],u=this.h[5],h=this.h[6],l=this.h[7],f=this.h[8],c=this.h[9],d=this.h[10],p=this.h[11],m=this.h[12],g=this.h[13],y=this.h[14],v=this.h[15];Qs(this.k.length===r.length);for(var w=0;w<r.length;w+=2){var b=y,A=v,M=La(f,c),I=Qa(f,c),E=Ra(f,0,d,0,m),_=Pa(0,c,0,p,0,g),S=this.k[w],C=this.k[w+1],x=r[w],B=r[w+1],k=xa(b,A,M,I,E,_,S,C,x,B),F=Ba(b,A,M,I,E,_,S,C,x,B);b=Da(n,i),A=qa(n,i),M=Oa(n,0,o,0,a),I=Ua(0,i,0,s,0,u);var N=Ea(b,A,M,I),T=_a(b,A,M,I);y=m,v=g,m=d,g=p,d=f,p=c,f=Ea(h,l,k,F),c=_a(l,l,k,F),h=a,l=u,a=o,u=s,o=n,s=i,n=Ea(k,F,N,T),i=_a(k,F,N,T)}Ia(this.h,0,n,i),Ia(this.h,2,o,s),Ia(this.h,4,a,u),Ia(this.h,6,h,l),Ia(this.h,8,f,c),Ia(this.h,10,d,p),Ia(this.h,12,m,g),Ia(this.h,14,y,v)},Na.prototype._digest=function(t){return"hex"===t?Vs.toHex32(this.h,"big"):Vs.split32(this.h,"big")};var Ga={sha1:{},sha224:{},sha256:va,sha384:{},sha512:Ta},Va=Vs.rotl32,Wa=Vs.sum32,Ja=Vs.sum32_3,Za=Vs.sum32_4,Ya=Zs.BlockHash;function Xa(){if(!(this instanceof Xa))return new Xa;Ya.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}Vs.inherits(Xa,Ya);var $a=Xa;function tu(t,e,r,n){return t<=15?e^r^n:t<=31?e&r|~e&n:t<=47?(e|~r)^n:t<=63?e&n|r&~n:e^(r|~n)}function eu(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function ru(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}Xa.blockSize=512,Xa.outSize=160,Xa.hmacStrength=192,Xa.padLength=64,Xa.prototype._update=function(t,e){for(var r=this.h[0],n=this.h[1],i=this.h[2],o=this.h[3],s=this.h[4],a=r,u=n,h=i,l=o,f=s,c=0;c<80;c++){var d=Wa(Va(Za(r,tu(c,n,i,o),t[nu[c]+e],eu(c)),ou[c]),s);r=s,s=o,o=Va(i,10),i=n,n=d,d=Wa(Va(Za(a,tu(79-c,u,h,l),t[iu[c]+e],ru(c)),su[c]),f),a=f,f=l,l=Va(h,10),h=u,u=d}d=Ja(this.h[1],i,l),this.h[1]=Ja(this.h[2],o,f),this.h[2]=Ja(this.h[3],s,a),this.h[3]=Ja(this.h[4],r,u),this.h[4]=Ja(this.h[0],n,h),this.h[0]=d},Xa.prototype._digest=function(t){return"hex"===t?Vs.toHex32(this.h,"little"):Vs.split32(this.h,"little")};var nu=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],iu=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],ou=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],su=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],au={ripemd160:$a};function uu(t,e,r){if(!(this instanceof uu))return new uu(t,e,r);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(Vs.toArray(e,r))}var hu=uu;uu.prototype._init=function(t){t.length>this.blockSize&&(t=(new this.Hash).update(t).digest()),Qs(t.length<=this.blockSize);for(var e=t.length;e<this.blockSize;e++)t.push(0);for(e=0;e<t.length;e++)t[e]^=54;for(this.inner=(new this.Hash).update(t),e=0;e<t.length;e++)t[e]^=106;this.outer=(new this.Hash).update(t)},uu.prototype.update=function(t,e){return this.inner.update(t,e),this},uu.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)};var lu=_r((function(t,e){var r=e;r.utils=Vs,r.common=Zs,r.sha=Ga,r.ripemd=au,r.hmac=hu,r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160})),fu=(lu.hmac,lu.ripemd160,lu.sha256,lu.sha512,_r((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.version="sha2/5.0.4"}))),cu=(Er(fu),fu.version,_r((function(t,e){var r=Ir&&Ir.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e};Object.defineProperty(e,"__esModule",{value:!0});var n,i=r(lu),o=new Zr.Logger(fu.version);!function(t){t.sha256="sha256",t.sha512="sha512"}(n=e.SupportedAlgorithm||(e.SupportedAlgorithm={})),e.ripemd160=function(t){return"0x"+i.ripemd160().update(vn.arrayify(t)).digest("hex")},e.sha256=function(t){return"0x"+i.sha256().update(vn.arrayify(t)).digest("hex")},e.sha512=function(t){return"0x"+i.sha512().update(vn.arrayify(t)).digest("hex")},e.computeHmac=function(t,e,r){return n[t]||o.throwError("unsupported algorithm "+t,Zr.Logger.errors.UNSUPPORTED_OPERATION,{operation:"hmac",algorithm:t}),"0x"+i.hmac(i[t],vn.arrayify(e)).update(vn.arrayify(r)).digest("hex")}}))),du=(Er(cu),cu.SupportedAlgorithm),pu=cu.ripemd160,mu=cu.sha256,gu=cu.sha512,yu=cu.computeHmac;function vu(t,e,r,n,i){let o;t=rn(t),e=rn(e);let s=1;const a=new Uint8Array(n),u=new Uint8Array(e.length+4);let h,l;u.set(e);for(let f=1;f<=s;f++){u[e.length]=f>>24&255,u[e.length+1]=f>>16&255,u[e.length+2]=f>>8&255,u[e.length+3]=255&f;let c=rn(yu(i,t,u));o||(o=c.length,l=new Uint8Array(o),s=Math.ceil(n/o),h=n-(s-1)*o),l.set(c);for(let e=1;e<r;e++){c=rn(yu(i,t,c));for(let t=0;t<o;t++)l[t]^=c[t]}const d=(f-1)*o,p=f===s?h:o;a.set(rn(l).slice(0,p),d)}return hn(a)}var wu="6.5.3",bu={version:wu},Au=Object.freeze({version:wu,default:bu}),Mu=_r((function(t,e){var r=e;function n(t){return 1===t.length?"0"+t:t}function i(t){for(var e="",r=0;r<t.length;r++)e+=n(t[r].toString(16));return e}r.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if("string"!=typeof t){for(var n=0;n<t.length;n++)r[n]=0|t[n];return r}if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),n=0;n<t.length;n+=2)r.push(parseInt(t[n]+t[n+1],16));else for(n=0;n<t.length;n++){var i=t.charCodeAt(n),o=i>>8,s=255&i;o?r.push(o,s):r.push(s)}return r},r.zero2=n,r.toHex=i,r.encode=function(t,e){return"hex"===e?i(t):t}})),Iu=_r((function(t,e){var r=e;r.assert=Qs,r.toArray=Mu.toArray,r.zero2=Mu.zero2,r.toHex=Mu.toHex,r.encode=Mu.encode,r.getNAF=function(t,e,r){var n=new Array(Math.max(t.bitLength(),r)+1);n.fill(0);for(var i=1<<e+1,o=t.clone(),s=0;s<n.length;s++){var a,u=o.andln(i-1);o.isOdd()?(a=u>(i>>1)-1?(i>>1)-u:u,o.isubn(a)):a=0,n[s]=a,o.iushrn(1)}return n},r.getJSF=function(t,e){var r=[[],[]];t=t.clone(),e=e.clone();for(var n=0,i=0;t.cmpn(-n)>0||e.cmpn(-i)>0;){var o,s,a,u=t.andln(3)+n&3,h=e.andln(3)+i&3;3===u&&(u=-1),3===h&&(h=-1),o=0==(1&u)?0:3!=(a=t.andln(7)+n&7)&&5!==a||2!==h?u:-u,r[0].push(o),s=0==(1&h)?0:3!=(a=e.andln(7)+i&7)&&5!==a||2!==u?h:-h,r[1].push(s),2*n===o+1&&(n=1-n),2*i===s+1&&(i=1-i),t.iushrn(1),e.iushrn(1)}return r},r.cachedProperty=function(t,e,r){var n="_"+e;t.prototype[e]=function(){return void 0!==this[n]?this[n]:this[n]=r.call(this)}},r.parseBytes=function(t){return"string"==typeof t?r.toArray(t,"hex"):t},r.intFromLE=function(t){return new qr(t,"hex","le")}})),Eu=function(t){var e=new Uint8Array(t);return(Ir.crypto||Ir.msCrypto).getRandomValues(e),e},_u=Iu.getNAF,Su=Iu.getJSF,Cu=Iu.assert;function xu(t,e){this.type=t,this.p=new qr(e.p,16),this.red=e.prime?qr.red(e.prime):qr.mont(this.p),this.zero=new qr(0).toRed(this.red),this.one=new qr(1).toRed(this.red),this.two=new qr(2).toRed(this.red),this.n=e.n&&new qr(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var Bu=xu;function ku(t,e){this.curve=t,this.type=e,this.precomputed=null}xu.prototype.point=function(){throw new Error("Not implemented")},xu.prototype.validate=function(){throw new Error("Not implemented")},xu.prototype._fixedNafMul=function(t,e){Cu(t.precomputed);var r=t._getDoubles(),n=_u(e,1,this._bitLength),i=(1<<r.step+1)-(r.step%2==0?2:1);i/=3;for(var o=[],s=0;s<n.length;s+=r.step){var a=0;for(e=s+r.step-1;e>=s;e--)a=(a<<1)+n[e];o.push(a)}for(var u=this.jpoint(null,null,null),h=this.jpoint(null,null,null),l=i;l>0;l--){for(s=0;s<o.length;s++)(a=o[s])===l?h=h.mixedAdd(r.points[s]):a===-l&&(h=h.mixedAdd(r.points[s].neg()));u=u.add(h)}return u.toP()},xu.prototype._wnafMul=function(t,e){var r=4,n=t._getNAFPoints(r);r=n.wnd;for(var i=n.points,o=_u(e,r,this._bitLength),s=this.jpoint(null,null,null),a=o.length-1;a>=0;a--){for(e=0;a>=0&&0===o[a];a--)e++;if(a>=0&&e++,s=s.dblp(e),a<0)break;var u=o[a];Cu(0!==u),s="affine"===t.type?u>0?s.mixedAdd(i[u-1>>1]):s.mixedAdd(i[-u-1>>1].neg()):u>0?s.add(i[u-1>>1]):s.add(i[-u-1>>1].neg())}return"affine"===t.type?s.toP():s},xu.prototype._wnafMulAdd=function(t,e,r,n,i){for(var o=this._wnafT1,s=this._wnafT2,a=this._wnafT3,u=0,h=0;h<n;h++){var l=(I=e[h])._getNAFPoints(t);o[h]=l.wnd,s[h]=l.points}for(h=n-1;h>=1;h-=2){var f=h-1,c=h;if(1===o[f]&&1===o[c]){var d=[e[f],null,null,e[c]];0===e[f].y.cmp(e[c].y)?(d[1]=e[f].add(e[c]),d[2]=e[f].toJ().mixedAdd(e[c].neg())):0===e[f].y.cmp(e[c].y.redNeg())?(d[1]=e[f].toJ().mixedAdd(e[c]),d[2]=e[f].add(e[c].neg())):(d[1]=e[f].toJ().mixedAdd(e[c]),d[2]=e[f].toJ().mixedAdd(e[c].neg()));var p=[-3,-1,-5,-7,0,7,5,1,3],m=Su(r[f],r[c]);u=Math.max(m[0].length,u),a[f]=new Array(u),a[c]=new Array(u);for(var g=0;g<u;g++){var y=0|m[0][g],v=0|m[1][g];a[f][g]=p[3*(y+1)+(v+1)],a[c][g]=0,s[f]=d}}else a[f]=_u(r[f],o[f],this._bitLength),a[c]=_u(r[c],o[c],this._bitLength),u=Math.max(a[f].length,u),u=Math.max(a[c].length,u)}var w=this.jpoint(null,null,null),b=this._wnafT4;for(h=u;h>=0;h--){for(var A=0;h>=0;){var M=!0;for(g=0;g<n;g++)b[g]=0|a[g][h],0!==b[g]&&(M=!1);if(!M)break;A++,h--}if(h>=0&&A++,w=w.dblp(A),h<0)break;for(g=0;g<n;g++){var I,E=b[g];0!==E&&(E>0?I=s[g][E-1>>1]:E<0&&(I=s[g][-E-1>>1].neg()),w="affine"===I.type?w.mixedAdd(I):w.add(I))}}for(h=0;h<n;h++)s[h]=null;return i?w:w.toP()},xu.BasePoint=ku,ku.prototype.eq=function(){throw new Error("Not implemented")},ku.prototype.validate=function(){return this.curve.validate(this)},xu.prototype.decodePoint=function(t,e){t=Iu.toArray(t,e);var r=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*r)return 6===t[0]?Cu(t[t.length-1]%2==0):7===t[0]&&Cu(t[t.length-1]%2==1),this.point(t.slice(1,1+r),t.slice(1+r,1+2*r));if((2===t[0]||3===t[0])&&t.length-1===r)return this.pointFromX(t.slice(1,1+r),3===t[0]);throw new Error("Unknown point format")},ku.prototype.encodeCompressed=function(t){return this.encode(t,!0)},ku.prototype._encode=function(t){var e=this.curve.p.byteLength(),r=this.getX().toArray("be",e);return t?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",e))},ku.prototype.encode=function(t,e){return Iu.encode(this._encode(e),t)},ku.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},ku.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},ku.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],n=this,i=0;i<e;i+=t){for(var o=0;o<t;o++)n=n.dbl();r.push(n)}return{step:t,points:r}},ku.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],r=(1<<t)-1,n=1===r?null:this.dbl(),i=1;i<r;i++)e[i]=e[i-1].add(n);return{wnd:t,points:e}},ku.prototype._getBeta=function(){return null},ku.prototype.dblp=function(t){for(var e=this,r=0;r<t;r++)e=e.dbl();return e};var Fu=Iu.assert;function Nu(t){Bu.call(this,"short",t),this.a=new qr(t.a,16).toRed(this.red),this.b=new qr(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}zs(Nu,Bu);var Tu=Nu;function Ru(t,e,r,n){Bu.BasePoint.call(this,t,"affine"),null===e&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new qr(e,16),this.y=new qr(r,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function Pu(t,e,r,n){Bu.BasePoint.call(this,t,"jacobian"),null===e&&null===r&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new qr(0)):(this.x=new qr(e,16),this.y=new qr(r,16),this.z=new qr(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}Nu.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,r;if(t.beta)e=new qr(t.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);e=(e=n[0].cmp(n[1])<0?n[0]:n[1]).toRed(this.red)}if(t.lambda)r=new qr(t.lambda,16);else{var i=this._getEndoRoots(this.n);0===this.g.mul(i[0]).x.cmp(this.g.x.redMul(e))?r=i[0]:(r=i[1],Fu(0===this.g.mul(r).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:r,basis:t.basis?t.basis.map((function(t){return{a:new qr(t.a,16),b:new qr(t.b,16)}})):this._getEndoBasis(r)}}},Nu.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:qr.mont(t),r=new qr(2).toRed(e).redInvm(),n=r.redNeg(),i=new qr(3).toRed(e).redNeg().redSqrt().redMul(r);return[n.redAdd(i).fromRed(),n.redSub(i).fromRed()]},Nu.prototype._getEndoBasis=function(t){for(var e,r,n,i,o,s,a,u,h,l=this.n.ushrn(Math.floor(this.n.bitLength()/2)),f=t,c=this.n.clone(),d=new qr(1),p=new qr(0),m=new qr(0),g=new qr(1),y=0;0!==f.cmpn(0);){var v=c.div(f);u=c.sub(v.mul(f)),h=m.sub(v.mul(d));var w=g.sub(v.mul(p));if(!n&&u.cmp(l)<0)e=a.neg(),r=d,n=u.neg(),i=h;else if(n&&2==++y)break;a=u,c=f,f=u,m=d,d=h,g=p,p=w}o=u.neg(),s=h;var b=n.sqr().add(i.sqr());return o.sqr().add(s.sqr()).cmp(b)>=0&&(o=e,s=r),n.negative&&(n=n.neg(),i=i.neg()),o.negative&&(o=o.neg(),s=s.neg()),[{a:n,b:i},{a:o,b:s}]},Nu.prototype._endoSplit=function(t){var e=this.endo.basis,r=e[0],n=e[1],i=n.b.mul(t).divRound(this.n),o=r.b.neg().mul(t).divRound(this.n),s=i.mul(r.a),a=o.mul(n.a),u=i.mul(r.b),h=o.mul(n.b);return{k1:t.sub(s).sub(a),k2:u.add(h).neg()}},Nu.prototype.pointFromX=function(t,e){(t=new qr(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var i=n.fromRed().isOdd();return(e&&!i||!e&&i)&&(n=n.redNeg()),this.point(t,n)},Nu.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,r=t.y,n=this.a.redMul(e),i=e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);return 0===r.redSqr().redISub(i).cmpn(0)},Nu.prototype._endoWnafMulAdd=function(t,e,r){for(var n=this._endoWnafT1,i=this._endoWnafT2,o=0;o<t.length;o++){var s=this._endoSplit(e[o]),a=t[o],u=a._getBeta();s.k1.negative&&(s.k1.ineg(),a=a.neg(!0)),s.k2.negative&&(s.k2.ineg(),u=u.neg(!0)),n[2*o]=a,n[2*o+1]=u,i[2*o]=s.k1,i[2*o+1]=s.k2}for(var h=this._wnafMulAdd(1,n,i,2*o,r),l=0;l<2*o;l++)n[l]=null,i[l]=null;return h},zs(Ru,Bu.BasePoint),Nu.prototype.point=function(t,e,r){return new Ru(this,t,e,r)},Nu.prototype.pointFromJSON=function(t,e){return Ru.fromJSON(this,t,e)},Ru.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var r=this.curve,n=function(t){return r.point(t.x.redMul(r.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(n)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(n)}}}return e}},Ru.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},Ru.fromJSON=function(t,e,r){"string"==typeof e&&(e=JSON.parse(e));var n=t.point(e[0],e[1],r);if(!e[2])return n;function i(e){return t.point(e[0],e[1],r)}var o=e[2];return n.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[n].concat(o.doubles.points.map(i))},naf:o.naf&&{wnd:o.naf.wnd,points:[n].concat(o.naf.points.map(i))}},n},Ru.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},Ru.prototype.isInfinity=function(){return this.inf},Ru.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var r=e.redSqr().redISub(this.x).redISub(t.x),n=e.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,n)},Ru.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,r=this.x.redSqr(),n=t.redInvm(),i=r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),o=i.redSqr().redISub(this.x.redAdd(this.x)),s=i.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,s)},Ru.prototype.getX=function(){return this.x.fromRed()},Ru.prototype.getY=function(){return this.y.fromRed()},Ru.prototype.mul=function(t){return t=new qr(t,16),this.isInfinity()?this:this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},Ru.prototype.mulAdd=function(t,e,r){var n=[this,e],i=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i):this.curve._wnafMulAdd(1,n,i,2)},Ru.prototype.jmulAdd=function(t,e,r){var n=[this,e],i=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(n,i,!0):this.curve._wnafMulAdd(1,n,i,2,!0)},Ru.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},Ru.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var r=this.precomputed,n=function(t){return t.neg()};e.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(n)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(n)}}}return e},Ru.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},zs(Pu,Bu.BasePoint),Nu.prototype.jpoint=function(t,e,r){return new Pu(this,t,e,r)},Pu.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),r=this.x.redMul(e),n=this.y.redMul(e).redMul(t);return this.curve.point(r,n)},Pu.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},Pu.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),r=this.z.redSqr(),n=this.x.redMul(e),i=t.x.redMul(r),o=this.y.redMul(e.redMul(t.z)),s=t.y.redMul(r.redMul(this.z)),a=n.redSub(i),u=o.redSub(s);if(0===a.cmpn(0))return 0!==u.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var h=a.redSqr(),l=h.redMul(a),f=n.redMul(h),c=u.redSqr().redIAdd(l).redISub(f).redISub(f),d=u.redMul(f.redISub(c)).redISub(o.redMul(l)),p=this.z.redMul(t.z).redMul(a);return this.curve.jpoint(c,d,p)},Pu.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),r=this.x,n=t.x.redMul(e),i=this.y,o=t.y.redMul(e).redMul(this.z),s=r.redSub(n),a=i.redSub(o);if(0===s.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=s.redSqr(),h=u.redMul(s),l=r.redMul(u),f=a.redSqr().redIAdd(h).redISub(l).redISub(l),c=a.redMul(l.redISub(f)).redISub(i.redMul(h)),d=this.z.redMul(s);return this.curve.jpoint(f,c,d)},Pu.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var e=this,r=0;r<t;r++)e=e.dbl();return e}var n=this.curve.a,i=this.curve.tinv,o=this.x,s=this.y,a=this.z,u=a.redSqr().redSqr(),h=s.redAdd(s);for(r=0;r<t;r++){var l=o.redSqr(),f=h.redSqr(),c=f.redSqr(),d=l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),p=o.redMul(f),m=d.redSqr().redISub(p.redAdd(p)),g=p.redISub(m),y=d.redMul(g);y=y.redIAdd(y).redISub(c);var v=h.redMul(a);r+1<t&&(u=u.redMul(c)),o=m,a=v,h=y}return this.curve.jpoint(o,h.redMul(i),a)},Pu.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},Pu.prototype._zeroDbl=function(){var t,e,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n),u=a.redSqr().redISub(s).redISub(s),h=o.redIAdd(o);h=(h=h.redIAdd(h)).redIAdd(h),t=u,e=a.redMul(s.redISub(u)).redISub(h),r=this.y.redAdd(this.y)}else{var l=this.x.redSqr(),f=this.y.redSqr(),c=f.redSqr(),d=this.x.redAdd(f).redSqr().redISub(l).redISub(c);d=d.redIAdd(d);var p=l.redAdd(l).redIAdd(l),m=p.redSqr(),g=c.redIAdd(c);g=(g=g.redIAdd(g)).redIAdd(g),t=m.redISub(d).redISub(d),e=p.redMul(d.redISub(t)).redISub(g),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(t,e,r)},Pu.prototype._threeDbl=function(){var t,e,r;if(this.zOne){var n=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),s=this.x.redAdd(i).redSqr().redISub(n).redISub(o);s=s.redIAdd(s);var a=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),u=a.redSqr().redISub(s).redISub(s);t=u;var h=o.redIAdd(o);h=(h=h.redIAdd(h)).redIAdd(h),e=a.redMul(s.redISub(u)).redISub(h),r=this.y.redAdd(this.y)}else{var l=this.z.redSqr(),f=this.y.redSqr(),c=this.x.redMul(f),d=this.x.redSub(l).redMul(this.x.redAdd(l));d=d.redAdd(d).redIAdd(d);var p=c.redIAdd(c),m=(p=p.redIAdd(p)).redAdd(p);t=d.redSqr().redISub(m),r=this.y.redAdd(this.z).redSqr().redISub(f).redISub(l);var g=f.redSqr();g=(g=(g=g.redIAdd(g)).redIAdd(g)).redIAdd(g),e=d.redMul(p.redISub(t)).redISub(g)}return this.curve.jpoint(t,e,r)},Pu.prototype._dbl=function(){var t=this.curve.a,e=this.x,r=this.y,n=this.z,i=n.redSqr().redSqr(),o=e.redSqr(),s=r.redSqr(),a=o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),u=e.redAdd(e),h=(u=u.redIAdd(u)).redMul(s),l=a.redSqr().redISub(h.redAdd(h)),f=h.redISub(l),c=s.redSqr();c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var d=a.redMul(f).redISub(c),p=r.redAdd(r).redMul(n);return this.curve.jpoint(l,d,p)},Pu.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),r=this.z.redSqr(),n=e.redSqr(),i=t.redAdd(t).redIAdd(t),o=i.redSqr(),s=this.x.redAdd(e).redSqr().redISub(t).redISub(n),a=(s=(s=(s=s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(),u=n.redIAdd(n);u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var h=i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),l=e.redMul(h);l=(l=l.redIAdd(l)).redIAdd(l);var f=this.x.redMul(a).redISub(l);f=(f=f.redIAdd(f)).redIAdd(f);var c=this.y.redMul(h.redMul(u.redISub(h)).redISub(s.redMul(a)));c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var d=this.z.redAdd(s).redSqr().redISub(r).redISub(a);return this.curve.jpoint(f,c,d)},Pu.prototype.mul=function(t,e){return t=new qr(t,e),this.curve._wnafMul(this,t)},Pu.prototype.eq=function(t){if("affine"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),r=t.z.redSqr();if(0!==this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0))return!1;var n=e.redMul(this.z),i=r.redMul(t.z);return 0===this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)},Pu.prototype.eqXToP=function(t){var e=this.z.redSqr(),r=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(r))return!0;for(var n=t.clone(),i=this.curve.redN.redMul(e);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(i),0===this.x.cmp(r))return!0}},Pu.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},Pu.prototype.isInfinity=function(){return 0===this.z.cmpn(0)};var Ou={},Uu={},Du=_r((function(t,e){var r=e;r.base=Bu,r.short=Tu,r.mont=Ou,r.edwards=Uu})),qu=_r((function(t,e){var r,n=e,i=Iu.assert;function o(t){"short"===t.type?this.curve=new Du.short(t):"edwards"===t.type?this.curve=new Du.edwards(t):this.curve=new Du.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function s(t,e){Object.defineProperty(n,t,{configurable:!0,enumerable:!0,get:function(){var r=new o(e);return Object.defineProperty(n,t,{configurable:!0,enumerable:!0,value:r}),r}})}n.PresetCurve=o,s("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:lu.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),s("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:lu.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),s("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:lu.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),s("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:lu.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),s("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:lu.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),s("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:lu.sha256,gRed:!1,g:["9"]}),s("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:lu.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=void 0}catch(t){r=void 0}s("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:lu.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]})}));function Lu(t){if(!(this instanceof Lu))return new Lu(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=Mu.toArray(t.entropy,t.entropyEnc||"hex"),r=Mu.toArray(t.nonce,t.nonceEnc||"hex"),n=Mu.toArray(t.pers,t.persEnc||"hex");Qs(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(e,r,n)}var Qu=Lu;Lu.prototype._init=function(t,e,r){var n=t.concat(e).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},Lu.prototype._hmac=function(){return new lu.hmac(this.hash,this.K)},Lu.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},Lu.prototype.reseed=function(t,e,r,n){"string"!=typeof e&&(n=r,r=e,e=null),t=Mu.toArray(t,e),r=Mu.toArray(r,n),Qs(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(t.concat(r||[])),this._reseed=1},Lu.prototype.generate=function(t,e,r,n){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof e&&(n=r,r=e,e=null),r&&(r=Mu.toArray(r,n||"hex"),this._update(r));for(var i=[];i.length<t;)this.V=this._hmac().update(this.V).digest(),i=i.concat(this.V);var o=i.slice(0,t);return this._update(r),this._reseed++,Mu.encode(o,e)};var ju=Iu.assert;function zu(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}var Ku=zu;zu.fromPublic=function(t,e,r){return e instanceof zu?e:new zu(t,{pub:e,pubEnc:r})},zu.fromPrivate=function(t,e,r){return e instanceof zu?e:new zu(t,{priv:e,privEnc:r})},zu.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:"Invalid public key"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},zu.prototype.getPublic=function(t,e){return"string"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},zu.prototype.getPrivate=function(t){return"hex"===t?this.priv.toString(16,2):this.priv},zu.prototype._importPrivate=function(t,e){this.priv=new qr(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},zu.prototype._importPublic=function(t,e){if(t.x||t.y)return"mont"===this.ec.curve.type?ju(t.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||ju(t.x&&t.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},zu.prototype.derive=function(t){return t.mul(this.priv).getX()},zu.prototype.sign=function(t,e,r){return this.ec.sign(t,this,e,r)},zu.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},zu.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var Hu=Iu.assert;function Gu(t,e){if(t instanceof Gu)return t;this._importDER(t,e)||(Hu(t.r&&t.s,"Signature without r or s"),this.r=new qr(t.r,16),this.s=new qr(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}var Vu=Gu;function Wu(){this.place=0}function Ju(t,e){var r=t[e.place++];if(!(128&r))return r;var n=15&r;if(0===n||n>4)return!1;for(var i=0,o=0,s=e.place;o<n;o++,s++)i<<=8,i|=t[s],i>>>=0;return!(i<=127)&&(e.place=s,i)}function Zu(t){for(var e=0,r=t.length-1;!t[e]&&!(128&t[e+1])&&e<r;)e++;return 0===e?t:t.slice(e)}function Yu(t,e){if(e<128)t.push(e);else{var r=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|r);--r;)t.push(e>>>(r<<3)&255);t.push(e)}}Gu.prototype._importDER=function(t,e){t=Iu.toArray(t,e);var r=new Wu;if(48!==t[r.place++])return!1;var n=Ju(t,r);if(!1===n)return!1;if(n+r.place!==t.length)return!1;if(2!==t[r.place++])return!1;var i=Ju(t,r);if(!1===i)return!1;var o=t.slice(r.place,i+r.place);if(r.place+=i,2!==t[r.place++])return!1;var s=Ju(t,r);if(!1===s)return!1;if(t.length!==s+r.place)return!1;var a=t.slice(r.place,s+r.place);if(0===o[0]){if(!(128&o[1]))return!1;o=o.slice(1)}if(0===a[0]){if(!(128&a[1]))return!1;a=a.slice(1)}return this.r=new qr(o),this.s=new qr(a),this.recoveryParam=null,!0},Gu.prototype.toDER=function(t){var e=this.r.toArray(),r=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&r[0]&&(r=[0].concat(r)),e=Zu(e),r=Zu(r);!(r[0]||128&r[1]);)r=r.slice(1);var n=[2];Yu(n,e.length),(n=n.concat(e)).push(2),Yu(n,r.length);var i=n.concat(r),o=[48];return Yu(o,i.length),o=o.concat(i),Iu.encode(o,t)};var Xu=Iu.assert;function $u(t){if(!(this instanceof $u))return new $u(t);"string"==typeof t&&(Xu(qu.hasOwnProperty(t),"Unknown curve "+t),t=qu[t]),t instanceof qu.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}var th=$u;$u.prototype.keyPair=function(t){return new Ku(this,t)},$u.prototype.keyFromPrivate=function(t,e){return Ku.fromPrivate(this,t,e)},$u.prototype.keyFromPublic=function(t,e){return Ku.fromPublic(this,t,e)},$u.prototype.genKeyPair=function(t){t||(t={});for(var e=new Qu({hash:this.hash,pers:t.pers,persEnc:t.persEnc||"utf8",entropy:t.entropy||Eu(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),n=this.n.sub(new qr(2));;){var i=new qr(e.generate(r));if(!(i.cmp(n)>0))return i.iaddn(1),this.keyFromPrivate(i)}},$u.prototype._truncateToN=function(t,e){var r=8*t.byteLength()-this.n.bitLength();return r>0&&(t=t.ushrn(r)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},$u.prototype.sign=function(t,e,r,n){"object"==typeof r&&(n=r,r=null),n||(n={}),e=this.keyFromPrivate(e,r),t=this._truncateToN(new qr(t,16));for(var i=this.n.byteLength(),o=e.getPrivate().toArray("be",i),s=t.toArray("be",i),a=new Qu({hash:this.hash,entropy:o,nonce:s,pers:n.pers,persEnc:n.persEnc||"utf8"}),u=this.n.sub(new qr(1)),h=0;;h++){var l=n.k?n.k(h):new qr(a.generate(this.n.byteLength()));if(!((l=this._truncateToN(l,!0)).cmpn(1)<=0||l.cmp(u)>=0)){var f=this.g.mul(l);if(!f.isInfinity()){var c=f.getX(),d=c.umod(this.n);if(0!==d.cmpn(0)){var p=l.invm(this.n).mul(d.mul(e.getPrivate()).iadd(t));if(0!==(p=p.umod(this.n)).cmpn(0)){var m=(f.getY().isOdd()?1:0)|(0!==c.cmp(d)?2:0);return n.canonical&&p.cmp(this.nh)>0&&(p=this.n.sub(p),m^=1),new Vu({r:d,s:p,recoveryParam:m})}}}}}},$u.prototype.verify=function(t,e,r,n){t=this._truncateToN(new qr(t,16)),r=this.keyFromPublic(r,n);var i=(e=new Vu(e,"hex")).r,o=e.s;if(i.cmpn(1)<0||i.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var s,a=o.invm(this.n),u=a.mul(t).umod(this.n),h=a.mul(i).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(u,r.getPublic(),h)).isInfinity()&&s.eqXToP(i):!(s=this.g.mulAdd(u,r.getPublic(),h)).isInfinity()&&0===s.getX().umod(this.n).cmp(i)},$u.prototype.recoverPubKey=function(t,e,r,n){Xu((3&r)===r,"The recovery param is more than two bits"),e=new Vu(e,n);var i=this.n,o=new qr(t),s=e.r,a=e.s,u=1&r,h=r>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&h)throw new Error("Unable to find sencond key candinate");s=h?this.curve.pointFromX(s.add(this.curve.n),u):this.curve.pointFromX(s,u);var l=e.r.invm(i),f=i.sub(o).mul(l).umod(i),c=a.mul(l).umod(i);return this.g.mulAdd(f,s,c)},$u.prototype.getKeyRecoveryParam=function(t,e,r,n){if(null!==(e=new Vu(e,n)).recoveryParam)return e.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(t,e,i)}catch(t){continue}if(o.eq(r))return i}throw new Error("Unable to find valid recovery factor")};var eh,rh={},nh=(eh=Au)&&eh.default||eh,ih=_r((function(t,e){var r=e;r.version=nh.version,r.utils=Iu,r.rand=Eu,r.curve=Du,r.curves=qu,r.ec=th,r.eddsa=rh})).ec;const oh=new Jr("signing-key/5.0.5");let sh=null;function ah(){return sh||(sh=new ih("secp256k1")),sh}class uh{constructor(t){zn(this,"curve","secp256k1"),zn(this,"privateKey",hn(t));const e=ah().keyFromPrivate(rn(this.privateKey));zn(this,"publicKey","0x"+e.getPublic(!1,"hex")),zn(this,"compressedPublicKey","0x"+e.getPublic(!0,"hex")),zn(this,"_isSigningKey",!0)}_addPoint(t){const e=ah().keyFromPublic(rn(this.publicKey)),r=ah().keyFromPublic(rn(t));return"0x"+e.pub.add(r.pub).encodeCompressed("hex")}signDigest(t){const e=ah().keyFromPrivate(rn(this.privateKey)).sign(rn(t),{canonical:!0});return gn({recoveryParam:e.recoveryParam,r:mn("0x"+e.r.toString(16),32),s:mn("0x"+e.s.toString(16),32)})}computeSharedSecret(t){const e=ah().keyFromPrivate(rn(this.privateKey)),r=ah().keyFromPublic(rn(lh(t)));return mn("0x"+e.derive(r.getPublic()).toString(16),32)}static isSigningKey(t){return!(!t||!t._isSigningKey)}}function hh(t,e){const r=gn(e),n={r:rn(r.r),s:rn(r.s)};return"0x"+ah().recoverPubKey(rn(t),n,r.recoveryParam).encode("hex",!1)}function lh(t,e){const r=rn(t);if(32===r.length){const t=new uh(r);return e?"0x"+ah().keyFromPrivate(r).getPublic(!0,"hex"):t.publicKey}return 33===r.length?e?hn(r):"0x"+ah().keyFromPublic(r).getPublic(!1,"hex"):65===r.length?e?"0x"+ah().keyFromPublic(r).getPublic(!0,"hex"):hn(r):oh.throwArgumentError("invalid public or private key","key","[REDACTED]")}const fh=new Jr("transactions/5.0.6");function ch(t){return"0x"===t?io:In.from(t)}const dh=[{name:"nonce",maxLength:32,numeric:!0},{name:"gasPrice",maxLength:32,numeric:!0},{name:"gasLimit",maxLength:32,numeric:!0},{name:"to",length:20},{name:"value",maxLength:32,numeric:!0},{name:"data"}],ph={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0};function mh(t){return ji(fn(Ci(fn(lh(t),1)),12))}function gh(t,e){return mh(hh(rn(t),e))}function yh(t,e){Gn(t,ph);const r=[];dh.forEach((function(e){let n=t[e.name]||[];const i={};e.numeric&&(i.hexPad="left"),n=rn(hn(n,i)),e.length&&n.length!==e.length&&n.length>0&&fh.throwArgumentError("invalid length for "+e.name,"transaction:"+e.name,n),e.maxLength&&(n=on(n),n.length>e.maxLength&&fh.throwArgumentError("invalid length for "+e.name,"transaction:"+e.name,n)),r.push(hn(n))}));let n=0;if(null!=t.chainId?(n=t.chainId,"number"!=typeof n&&fh.throwArgumentError("invalid transaction.chainId","transaction",t)):e&&!tn(e)&&e.v>28&&(n=Math.floor((e.v-35)/2)),0!==n&&(r.push(hn(n)),r.push("0x"),r.push("0x")),!e)return Ni(r);const i=gn(e);let o=27+i.recoveryParam;return 0!==n?(r.pop(),r.pop(),r.pop(),o+=2*n+8,i.v>28&&i.v!==o&&fh.throwArgumentError("transaction.chainId/signature.v mismatch","signature",e)):i.v!==o&&fh.throwArgumentError("transaction.chainId/signature.v mismatch","signature",e),r.push(hn(o)),r.push(on(rn(i.r))),r.push(on(rn(i.s))),Ni(r)}function vh(t){const e=Pi(t);9!==e.length&&6!==e.length&&fh.throwArgumentError("invalid raw transaction","rawTransaction",t);const r={nonce:ch(e[0]).toNumber(),gasPrice:ch(e[1]),gasLimit:ch(e[2]),to:(n=e[3],"0x"===n?null:ji(n)),value:ch(e[4]),data:e[5],chainId:0};var n;if(6===e.length)return r;try{r.v=In.from(e[6]).toNumber()}catch(t){return console.log(t),r}if(r.r=mn(e[7],32),r.s=mn(e[8],32),In.from(r.r).isZero()&&In.from(r.s).isZero())r.chainId=r.v,r.v=0;else{r.chainId=Math.floor((r.v-35)/2),r.chainId<0&&(r.chainId=0);let n=r.v-27;const i=e.slice(0,6);0!==r.chainId&&(i.push(hn(r.chainId)),i.push("0x"),i.push("0x"),n-=2*r.chainId+8);const o=Ci(Ni(i));try{r.from=gh(o,{r:hn(r.r),s:hn(r.s),recoveryParam:n})}catch(t){console.log(t)}r.hash=Ci(t)}return r}const wh=new Jr("wordlists/5.0.5");class bh{constructor(t){wh.checkAbstract(new.target,bh),zn(this,"locale",t)}split(t){return t.toLowerCase().split(/ +/g)}join(t){return t.join(" ")}static check(t){const e=[];for(let r=0;r<2048;r++){const n=t.getWord(r);if(r!==t.getWordIndex(n))return"0x";e.push(n)}return Qo(e.join("\n")+"\n")}static register(t,e){e||(e=t.locale)}}let Ah=null;function Mh(t){if(null==Ah&&(Ah="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"!==bh.check(t)))throw Ah=null,new Error("BIP39 Wordlist for en (English) FAILED")}const Ih=new class extends bh{constructor(){super("en")}getWord(t){return Mh(this),Ah[t]}getWordIndex(t){return Mh(this),Ah.indexOf(t)}};bh.register(Ih);const Eh={en:Ih},_h=new Jr("hdnode/5.0.5"),Sh=In.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Ch=vo("Bitcoin seed"),xh=2147483648;function Bh(t){return(1<<t)-1<<8-t}function kh(t){return(1<<t)-1}function Fh(t){return mn(hn(t),32)}function Nh(t){return Ls.encode(nn([t,fn(mu(mu(t)),0,4)]))}function Th(t){if(null==t)return Eh.en;if("string"==typeof t){const e=Eh[t];return null==e&&_h.throwArgumentError("unknown locale","wordlist",t),e}return t}const Rh={},Ph="m/44'/60'/0'/0/0";class Oh{constructor(t,e,r,n,i,o,s,a){if(_h.checkNew(new.target,Oh),t!==Rh)throw new Error("HDNode constructor cannot be called directly");if(e){const t=new uh(e);zn(this,"privateKey",t.privateKey),zn(this,"publicKey",t.compressedPublicKey)}else zn(this,"privateKey",null),zn(this,"publicKey",hn(r));zn(this,"parentFingerprint",n),zn(this,"fingerprint",fn(pu(mu(this.publicKey)),0,4)),zn(this,"address",mh(this.publicKey)),zn(this,"chainCode",i),zn(this,"index",o),zn(this,"depth",s),null==a?(zn(this,"mnemonic",null),zn(this,"path",null)):"string"==typeof a?(zn(this,"mnemonic",null),zn(this,"path",a)):(zn(this,"mnemonic",a),zn(this,"path",a.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return Nh(nn([null!=this.privateKey?"0x0488ADE4":"0x0488B21E",hn(this.depth),this.parentFingerprint,mn(hn(this.index),4),this.chainCode,null!=this.privateKey?nn(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new Oh(Rh,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(t){if(t>4294967295)throw new Error("invalid index - "+String(t));let e=this.path;e&&(e+="/"+(2147483647&t));const r=new Uint8Array(37);if(t&xh){if(!this.privateKey)throw new Error("cannot derive child of neutered node");r.set(rn(this.privateKey),1),e&&(e+="'")}else r.set(rn(this.publicKey));for(let e=24;e>=0;e-=8)r[33+(e>>3)]=t>>24-e&255;const n=rn(yu(du.sha512,this.chainCode,r)),i=n.slice(0,32),o=n.slice(32);let s=null,a=null;this.privateKey?s=Fh(In.from(i).add(this.privateKey).mod(Sh)):a=new uh(hn(i))._addPoint(this.publicKey);let u=e;const h=this.mnemonic;return h&&(u=Object.freeze({phrase:h.phrase,path:e,locale:h.locale||"en"})),new Oh(Rh,s,a,this.fingerprint,Fh(o),t,this.depth+1,u)}derivePath(t){const e=t.split("/");if(0===e.length||"m"===e[0]&&0!==this.depth)throw new Error("invalid path - "+t);"m"===e[0]&&e.shift();let r=this;for(let t=0;t<e.length;t++){const n=e[t];if(n.match(/^[0-9]+'$/)){const t=parseInt(n.substring(0,n.length-1));if(t>=xh)throw new Error("invalid path index - "+n);r=r._derive(xh+t)}else{if(!n.match(/^[0-9]+$/))throw new Error("invalid path component - "+n);{const t=parseInt(n);if(t>=xh)throw new Error("invalid path index - "+n);r=r._derive(t)}}}return r}static _fromSeed(t,e){const r=rn(t);if(r.length<16||r.length>64)throw new Error("invalid seed");const n=rn(yu(du.sha512,Ch,r));return new Oh(Rh,Fh(n.slice(0,32)),null,"0x00000000",Fh(n.slice(32)),0,0,e)}static fromMnemonic(t,e,r){return t=qh(Dh(t,r=Th(r)),r),Oh._fromSeed(Uh(t,e),{phrase:t,path:"m",locale:r.locale})}static fromSeed(t){return Oh._fromSeed(t,null)}static fromExtendedKey(t){const e=Ls.decode(t);82===e.length&&Nh(e.slice(0,78))===t||_h.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const r=e[4],n=hn(e.slice(5,9)),i=parseInt(hn(e.slice(9,13)).substring(2),16),o=hn(e.slice(13,45)),s=e.slice(45,78);switch(hn(e.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new Oh(Rh,null,hn(s),n,o,i,r,null);case"0x0488ade4":case"0x04358394 ":if(0!==s[0])break;return new Oh(Rh,hn(s.slice(1)),null,n,o,i,r,null)}return _h.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function Uh(t,e){e||(e="");const r=vo("mnemonic"+e,co.NFKD);return vu(vo(t,co.NFKD),r,2048,64,"sha512")}function Dh(t,e){e=Th(e),_h.checkNormalize();const r=e.split(t);if(r.length%3!=0)throw new Error("invalid mnemonic");const n=rn(new Uint8Array(Math.ceil(11*r.length/8)));let i=0;for(let t=0;t<r.length;t++){let o=e.getWordIndex(r[t].normalize("NFKD"));if(-1===o)throw new Error("invalid mnemonic");for(let t=0;t<11;t++)o&1<<10-t&&(n[i>>3]|=1<<7-i%8),i++}const o=32*r.length/3,s=Bh(r.length/3);if((rn(mu(n.slice(0,o/8)))[0]&s)!=(n[n.length-1]&s))throw new Error("invalid checksum");return hn(n.slice(0,o/8))}function qh(t,e){if(e=Th(e),(t=rn(t)).length%4!=0||t.length<16||t.length>32)throw new Error("invalid entropy");const r=[0];let n=11;for(let e=0;e<t.length;e++)n>8?(r[r.length-1]<<=8,r[r.length-1]|=t[e],n-=8):(r[r.length-1]<<=n,r[r.length-1]|=t[e]>>8-n,r.push(t[e]&kh(8-n)),n+=3);const i=t.length/4,o=rn(mu(t))[0]&Bh(i);return r[r.length-1]<<=i,r[r.length-1]|=o>>8-i,e.join(r.map((t=>e.getWord(t))))}function Lh(t){for(let e=(t=t.slice()).length-1;e>0;e--){const r=Math.floor(Math.random()*(e+1)),n=t[e];t[e]=t[r],t[r]=n}return t}const Qh=new Jr("random/5.0.4");let jh=null;try{if(jh=window,null==jh)throw new Error("try next")}catch(t){try{if(jh=global,null==jh)throw new Error("try next")}catch(t){jh={}}}let zh=jh.crypto||jh.msCrypto;function Kh(t){(t<=0||t>1024||t%1)&&Qh.throwArgumentError("invalid length","length",t);const e=new Uint8Array(t);return zh.getRandomValues(e),rn(e)}zh&&zh.getRandomValues||(Qh.warn("WARNING: Missing strong random number source"),zh={getRandomValues:function(t){return Qh.throwError("no secure random source avaialble",Jr.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});var Hh=_r((function(t,e){!function(e){function r(t){return parseInt(t)===t}function n(t){if(!r(t.length))return!1;for(var e=0;e<t.length;e++)if(!r(t[e])||t[e]<0||t[e]>255)return!1;return!0}function i(t,e){if(t.buffer&&ArrayBuffer.isView(t)&&"Uint8Array"===t.name)return e&&(t=t.slice?t.slice():Array.prototype.slice.call(t)),t;if(Array.isArray(t)){if(!n(t))throw new Error("Array contains invalid value: "+t);return new Uint8Array(t)}if(r(t.length)&&n(t))return new Uint8Array(t);throw new Error("unsupported array-like object")}function o(t){return new Uint8Array(t)}function s(t,e,r,n,i){null==n&&null==i||(t=t.slice?t.slice(n,i):Array.prototype.slice.call(t,n,i)),e.set(t,r)}var a,u={toBytes:function(t){var e=[],r=0;for(t=encodeURI(t);r<t.length;){var n=t.charCodeAt(r++);37===n?(e.push(parseInt(t.substr(r,2),16)),r+=2):e.push(n)}return i(e)},fromBytes:function(t){for(var e=[],r=0;r<t.length;){var n=t[r];n<128?(e.push(String.fromCharCode(n)),r++):n>191&&n<224?(e.push(String.fromCharCode((31&n)<<6|63&t[r+1])),r+=2):(e.push(String.fromCharCode((15&n)<<12|(63&t[r+1])<<6|63&t[r+2])),r+=3)}return e.join("")}},h=(a="0123456789abcdef",{toBytes:function(t){for(var e=[],r=0;r<t.length;r+=2)e.push(parseInt(t.substr(r,2),16));return e},fromBytes:function(t){for(var e=[],r=0;r<t.length;r++){var n=t[r];e.push(a[(240&n)>>4]+a[15&n])}return e.join("")}}),l={16:10,24:12,32:14},f=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],c=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],d=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],p=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],m=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],g=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],y=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],v=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],w=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],b=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],A=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],M=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],I=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],E=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],_=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function S(t){for(var e=[],r=0;r<t.length;r+=4)e.push(t[r]<<24|t[r+1]<<16|t[r+2]<<8|t[r+3]);return e}var C=function(t){if(!(this instanceof C))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:i(t,!0)}),this._prepare()};C.prototype._prepare=function(){var t=l[this.key.length];if(null==t)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var e=0;e<=t;e++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var r,n=4*(t+1),i=this.key.length/4,o=S(this.key);for(e=0;e<i;e++)r=e>>2,this._Ke[r][e%4]=o[e],this._Kd[t-r][e%4]=o[e];for(var s,a=0,u=i;u<n;){if(s=o[i-1],o[0]^=c[s>>16&255]<<24^c[s>>8&255]<<16^c[255&s]<<8^c[s>>24&255]^f[a]<<24,a+=1,8!=i)for(e=1;e<i;e++)o[e]^=o[e-1];else{for(e=1;e<i/2;e++)o[e]^=o[e-1];for(s=o[i/2-1],o[i/2]^=c[255&s]^c[s>>8&255]<<8^c[s>>16&255]<<16^c[s>>24&255]<<24,e=i/2+1;e<i;e++)o[e]^=o[e-1]}for(e=0;e<i&&u<n;)h=u>>2,d=u%4,this._Ke[h][d]=o[e],this._Kd[t-h][d]=o[e++],u++}for(var h=1;h<t;h++)for(var d=0;d<4;d++)s=this._Kd[h][d],this._Kd[h][d]=M[s>>24&255]^I[s>>16&255]^E[s>>8&255]^_[255&s]},C.prototype.encrypt=function(t){if(16!=t.length)throw new Error("invalid plaintext size (must be 16 bytes)");for(var e=this._Ke.length-1,r=[0,0,0,0],n=S(t),i=0;i<4;i++)n[i]^=this._Ke[0][i];for(var s=1;s<e;s++){for(i=0;i<4;i++)r[i]=p[n[i]>>24&255]^m[n[(i+1)%4]>>16&255]^g[n[(i+2)%4]>>8&255]^y[255&n[(i+3)%4]]^this._Ke[s][i];n=r.slice()}var a,u=o(16);for(i=0;i<4;i++)a=this._Ke[e][i],u[4*i]=255&(c[n[i]>>24&255]^a>>24),u[4*i+1]=255&(c[n[(i+1)%4]>>16&255]^a>>16),u[4*i+2]=255&(c[n[(i+2)%4]>>8&255]^a>>8),u[4*i+3]=255&(c[255&n[(i+3)%4]]^a);return u},C.prototype.decrypt=function(t){if(16!=t.length)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var e=this._Kd.length-1,r=[0,0,0,0],n=S(t),i=0;i<4;i++)n[i]^=this._Kd[0][i];for(var s=1;s<e;s++){for(i=0;i<4;i++)r[i]=v[n[i]>>24&255]^w[n[(i+3)%4]>>16&255]^b[n[(i+2)%4]>>8&255]^A[255&n[(i+1)%4]]^this._Kd[s][i];n=r.slice()}var a,u=o(16);for(i=0;i<4;i++)a=this._Kd[e][i],u[4*i]=255&(d[n[i]>>24&255]^a>>24),u[4*i+1]=255&(d[n[(i+3)%4]>>16&255]^a>>16),u[4*i+2]=255&(d[n[(i+2)%4]>>8&255]^a>>8),u[4*i+3]=255&(d[255&n[(i+1)%4]]^a);return u};var x=function(t){if(!(this instanceof x))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new C(t)};x.prototype.encrypt=function(t){if((t=i(t)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var e=o(t.length),r=o(16),n=0;n<t.length;n+=16)s(t,r,0,n,n+16),s(r=this._aes.encrypt(r),e,n);return e},x.prototype.decrypt=function(t){if((t=i(t)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var e=o(t.length),r=o(16),n=0;n<t.length;n+=16)s(t,r,0,n,n+16),s(r=this._aes.decrypt(r),e,n);return e};var B=function(t,e){if(!(this instanceof B))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",e){if(16!=e.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else e=o(16);this._lastCipherblock=i(e,!0),this._aes=new C(t)};B.prototype.encrypt=function(t){if((t=i(t)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var e=o(t.length),r=o(16),n=0;n<t.length;n+=16){s(t,r,0,n,n+16);for(var a=0;a<16;a++)r[a]^=this._lastCipherblock[a];this._lastCipherblock=this._aes.encrypt(r),s(this._lastCipherblock,e,n)}return e},B.prototype.decrypt=function(t){if((t=i(t)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var e=o(t.length),r=o(16),n=0;n<t.length;n+=16){s(t,r,0,n,n+16),r=this._aes.decrypt(r);for(var a=0;a<16;a++)e[n+a]=r[a]^this._lastCipherblock[a];s(t,this._lastCipherblock,0,n,n+16)}return e};var k=function(t,e,r){if(!(this instanceof k))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",e){if(16!=e.length)throw new Error("invalid initialation vector size (must be 16 size)")}else e=o(16);r||(r=1),this.segmentSize=r,this._shiftRegister=i(e,!0),this._aes=new C(t)};k.prototype.encrypt=function(t){if(t.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var e,r=i(t,!0),n=0;n<r.length;n+=this.segmentSize){e=this._aes.encrypt(this._shiftRegister);for(var o=0;o<this.segmentSize;o++)r[n+o]^=e[o];s(this._shiftRegister,this._shiftRegister,0,this.segmentSize),s(r,this._shiftRegister,16-this.segmentSize,n,n+this.segmentSize)}return r},k.prototype.decrypt=function(t){if(t.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var e,r=i(t,!0),n=0;n<r.length;n+=this.segmentSize){e=this._aes.encrypt(this._shiftRegister);for(var o=0;o<this.segmentSize;o++)r[n+o]^=e[o];s(this._shiftRegister,this._shiftRegister,0,this.segmentSize),s(t,this._shiftRegister,16-this.segmentSize,n,n+this.segmentSize)}return r};var F=function(t,e){if(!(this instanceof F))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",e){if(16!=e.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else e=o(16);this._lastPrecipher=i(e,!0),this._lastPrecipherIndex=16,this._aes=new C(t)};F.prototype.encrypt=function(t){for(var e=i(t,!0),r=0;r<e.length;r++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),e[r]^=this._lastPrecipher[this._lastPrecipherIndex++];return e},F.prototype.decrypt=F.prototype.encrypt;var N=function(t){if(!(this instanceof N))throw Error("Counter must be instanitated with `new`");0===t||t||(t=1),"number"==typeof t?(this._counter=o(16),this.setValue(t)):this.setBytes(t)};N.prototype.setValue=function(t){if("number"!=typeof t||parseInt(t)!=t)throw new Error("invalid counter value (must be an integer)");for(var e=15;e>=0;--e)this._counter[e]=t%256,t>>=8},N.prototype.setBytes=function(t){if(16!=(t=i(t,!0)).length)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=t},N.prototype.increment=function(){for(var t=15;t>=0;t--){if(255!==this._counter[t]){this._counter[t]++;break}this._counter[t]=0}};var T=function(t,e){if(!(this instanceof T))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",e instanceof N||(e=new N(e)),this._counter=e,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new C(t)};T.prototype.encrypt=function(t){for(var e=i(t,!0),r=0;r<e.length;r++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),e[r]^=this._remainingCounter[this._remainingCounterIndex++];return e},T.prototype.decrypt=T.prototype.encrypt;var R={AES:C,Counter:N,ModeOfOperation:{ecb:x,cbc:B,cfb:k,ofb:F,ctr:T},utils:{hex:h,utf8:u},padding:{pkcs7:{pad:function(t){var e=16-(t=i(t,!0)).length%16,r=o(t.length+e);s(t,r);for(var n=t.length;n<r.length;n++)r[n]=e;return r},strip:function(t){if((t=i(t,!0)).length<16)throw new Error("PKCS#7 invalid length");var e=t[t.length-1];if(e>16)throw new Error("PKCS#7 padding byte out of range");for(var r=t.length-e,n=0;n<e;n++)if(t[r+n]!==e)throw new Error("PKCS#7 invalid padding byte");var a=o(r);return s(t,a,0,0,r),a}}},_arrayTest:{coerceArray:i,createArray:o,copyArray:s}};t.exports=R}()}));const Gh="json-wallets/5.0.7";function Vh(t){return"string"==typeof t&&"0x"!==t.substring(0,2)&&(t="0x"+t),rn(t)}function Wh(t,e){for(t=String(t);t.length<e;)t="0"+t;return t}function Jh(t){return"string"==typeof t?vo(t,co.NFKC):rn(t)}function Zh(t,e){let r=t;const n=e.toLowerCase().split("/");for(let t=0;t<n.length;t++){let e=null;for(const i in r)if(i.toLowerCase()===n[t]){e=r[i];break}if(null===e)return null;r=e}return r}function Yh(t){const e=rn(t);e[6]=15&e[6]|64,e[8]=63&e[8]|128;const r=hn(e);return[r.substring(2,10),r.substring(10,14),r.substring(14,18),r.substring(18,22),r.substring(22,34)].join("-")}const Xh=new Jr(Gh);class $h extends Xn{isCrowdsaleAccount(t){return!(!t||!t._isCrowdsaleAccount)}}function tl(t,e){const r=JSON.parse(t);e=Jh(e);const n=ji(Zh(r,"ethaddr")),i=Vh(Zh(r,"encseed"));i&&i.length%16==0||Xh.throwArgumentError("invalid encseed","json",t);const o=rn(vu(e,e,2e3,32,"sha256")).slice(0,16),s=i.slice(0,16),a=i.slice(16),u=new Hh.ModeOfOperation.cbc(o,s),h=Hh.padding.pkcs7.strip(rn(u.decrypt(a)));let l="";for(let t=0;t<h.length;t++)l+=String.fromCharCode(h[t]);const f=Ci(vo(l));return new $h({_isCrowdsaleAccount:!0,address:n,privateKey:f})}function el(t){let e=null;try{e=JSON.parse(t)}catch(t){return!1}return e.encseed&&e.ethaddr}function rl(t){let e=null;try{e=JSON.parse(t)}catch(t){return!1}return!(!e.version||parseInt(e.version)!==e.version||3!==parseInt(e.version))}var nl=_r((function(t,e){!function(e){const r=2147483647;function n(t){const e=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let r=1779033703,n=3144134277,i=1013904242,o=2773480762,s=1359893119,a=2600822924,u=528734635,h=1541459225;const l=new Uint32Array(64);function f(t){let f=0,c=t.length;for(;c>=64;){let d,p,m,g,y,v=r,w=n,b=i,A=o,M=s,I=a,E=u,_=h;for(p=0;p<16;p++)m=f+4*p,l[p]=(255&t[m])<<24|(255&t[m+1])<<16|(255&t[m+2])<<8|255&t[m+3];for(p=16;p<64;p++)d=l[p-2],g=(d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10,d=l[p-15],y=(d>>>7|d<<25)^(d>>>18|d<<14)^d>>>3,l[p]=(g+l[p-7]|0)+(y+l[p-16]|0)|0;for(p=0;p<64;p++)g=(((M>>>6|M<<26)^(M>>>11|M<<21)^(M>>>25|M<<7))+(M&I^~M&E)|0)+(_+(e[p]+l[p]|0)|0)|0,y=((v>>>2|v<<30)^(v>>>13|v<<19)^(v>>>22|v<<10))+(v&w^v&b^w&b)|0,_=E,E=I,I=M,M=A+g|0,A=b,b=w,w=v,v=g+y|0;r=r+v|0,n=n+w|0,i=i+b|0,o=o+A|0,s=s+M|0,a=a+I|0,u=u+E|0,h=h+_|0,f+=64,c-=64}}f(t);let c,d=t.length%64,p=t.length/536870912|0,m=t.length<<3,g=d<56?56:120,y=t.slice(t.length-d,t.length);for(y.push(128),c=d+1;c<g;c++)y.push(0);return y.push(p>>>24&255),y.push(p>>>16&255),y.push(p>>>8&255),y.push(p>>>0&255),y.push(m>>>24&255),y.push(m>>>16&255),y.push(m>>>8&255),y.push(m>>>0&255),f(y),[r>>>24&255,r>>>16&255,r>>>8&255,r>>>0&255,n>>>24&255,n>>>16&255,n>>>8&255,n>>>0&255,i>>>24&255,i>>>16&255,i>>>8&255,i>>>0&255,o>>>24&255,o>>>16&255,o>>>8&255,o>>>0&255,s>>>24&255,s>>>16&255,s>>>8&255,s>>>0&255,a>>>24&255,a>>>16&255,a>>>8&255,a>>>0&255,u>>>24&255,u>>>16&255,u>>>8&255,u>>>0&255,h>>>24&255,h>>>16&255,h>>>8&255,h>>>0&255]}function i(t,e,r){t=t.length<=64?t:n(t);const i=64+e.length+4,o=new Array(i),s=new Array(64);let a,u=[];for(a=0;a<64;a++)o[a]=54;for(a=0;a<t.length;a++)o[a]^=t[a];for(a=0;a<e.length;a++)o[64+a]=e[a];for(a=i-4;a<i;a++)o[a]=0;for(a=0;a<64;a++)s[a]=92;for(a=0;a<t.length;a++)s[a]^=t[a];function h(){for(let t=i-1;t>=i-4;t--){if(o[t]++,o[t]<=255)return;o[t]=0}}for(;r>=32;)h(),u=u.concat(n(s.concat(n(o)))),r-=32;return r>0&&(h(),u=u.concat(n(s.concat(n(o))).slice(0,r))),u}function o(t,e,r,n,i){let o;for(h(t,16*(2*r-1),i,0,16),o=0;o<2*r;o++)u(t,16*o,i,16),a(i,n),h(i,0,t,e+16*o,16);for(o=0;o<r;o++)h(t,e+2*o*16,t,16*o,16);for(o=0;o<r;o++)h(t,e+16*(2*o+1),t,16*(o+r),16)}function s(t,e){return t<<e|t>>>32-e}function a(t,e){h(t,0,e,0,16);for(let t=8;t>0;t-=2)e[4]^=s(e[0]+e[12],7),e[8]^=s(e[4]+e[0],9),e[12]^=s(e[8]+e[4],13),e[0]^=s(e[12]+e[8],18),e[9]^=s(e[5]+e[1],7),e[13]^=s(e[9]+e[5],9),e[1]^=s(e[13]+e[9],13),e[5]^=s(e[1]+e[13],18),e[14]^=s(e[10]+e[6],7),e[2]^=s(e[14]+e[10],9),e[6]^=s(e[2]+e[14],13),e[10]^=s(e[6]+e[2],18),e[3]^=s(e[15]+e[11],7),e[7]^=s(e[3]+e[15],9),e[11]^=s(e[7]+e[3],13),e[15]^=s(e[11]+e[7],18),e[1]^=s(e[0]+e[3],7),e[2]^=s(e[1]+e[0],9),e[3]^=s(e[2]+e[1],13),e[0]^=s(e[3]+e[2],18),e[6]^=s(e[5]+e[4],7),e[7]^=s(e[6]+e[5],9),e[4]^=s(e[7]+e[6],13),e[5]^=s(e[4]+e[7],18),e[11]^=s(e[10]+e[9],7),e[8]^=s(e[11]+e[10],9),e[9]^=s(e[8]+e[11],13),e[10]^=s(e[9]+e[8],18),e[12]^=s(e[15]+e[14],7),e[13]^=s(e[12]+e[15],9),e[14]^=s(e[13]+e[12],13),e[15]^=s(e[14]+e[13],18);for(let r=0;r<16;++r)t[r]+=e[r]}function u(t,e,r,n){for(let i=0;i<n;i++)r[i]^=t[e+i]}function h(t,e,r,n,i){for(;i--;)r[n++]=t[e++]}function l(t){if(!t||"number"!=typeof t.length)return!1;for(let e=0;e<t.length;e++){const r=t[e];if("number"!=typeof r||r%1||r<0||r>=256)return!1}return!0}function f(t,e){if("number"!=typeof t||t%1)throw new Error("invalid "+e);return t}function c(t,e,n,s,a,c,d){if(n=f(n,"N"),s=f(s,"r"),a=f(a,"p"),c=f(c,"dkLen"),0===n||0!=(n&n-1))throw new Error("N must be power of 2");if(n>r/128/s)throw new Error("N too large");if(s>r/128/a)throw new Error("r too large");if(!l(t))throw new Error("password must be an array or buffer");if(t=Array.prototype.slice.call(t),!l(e))throw new Error("salt must be an array or buffer");e=Array.prototype.slice.call(e);let p=i(t,e,128*a*s);const m=new Uint32Array(32*a*s);for(let t=0;t<m.length;t++){const e=4*t;m[t]=(255&p[e+3])<<24|(255&p[e+2])<<16|(255&p[e+1])<<8|(255&p[e+0])<<0}const g=new Uint32Array(64*s),y=new Uint32Array(32*s*n),v=32*s,w=new Uint32Array(16),b=new Uint32Array(16),A=a*n*2;let M,I,E=0,_=null,S=!1,C=0,x=0;const B=d?parseInt(1e3/s):4294967295,k="undefined"!=typeof setImmediate?setImmediate:setTimeout,F=function(){if(S)return d(new Error("cancelled"),E/A);let e;switch(C){case 0:I=32*x*s,h(m,I,g,0,v),C=1,M=0;case 1:e=n-M,e>B&&(e=B);for(let t=0;t<e;t++)h(g,0,y,(M+t)*v,v),o(g,v,s,w,b);if(M+=e,E+=e,d){const t=parseInt(1e3*E/A);if(t!==_){if(S=d(null,E/A),S)break;_=t}}if(M<n)break;M=0,C=2;case 2:e=n-M,e>B&&(e=B);for(let t=0;t<e;t++){const t=g[16*(2*s-1)]&n-1;u(y,t*v,g,v),o(g,v,s,w,b)}if(M+=e,E+=e,d){const t=parseInt(1e3*E/A);if(t!==_){if(S=d(null,E/A),S)break;_=t}}if(M<n)break;if(h(g,0,m,I,v),x++,x<a){C=0;break}p=[];for(let t=0;t<m.length;t++)p.push(m[t]>>0&255),p.push(m[t]>>8&255),p.push(m[t]>>16&255),p.push(m[t]>>24&255);const r=i(t,p,c);return d&&d(null,1,r),r}d&&k(F)};if(!d)for(;;){const t=F();if(null!=t)return t}F()}const d={scrypt:function(t,e,r,n,i,o,s){return new Promise((function(a,u){let h=0;s&&s(0),c(t,e,r,n,i,o,(function(t,e,r){if(t)u(t);else if(r)s&&1!==h&&s(1),a(new Uint8Array(r));else if(s&&e!==h)return h=e,s(e)}))}))},syncScrypt:function(t,e,r,n,i,o){return new Uint8Array(c(t,e,r,n,i,o))}};t.exports=d}()})),il=nl.scrypt,ol=nl.syncScrypt,sl=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const al=new Jr(Gh);function ul(t){return null!=t&&t.mnemonic&&t.mnemonic.phrase}class hl extends Xn{isKeystoreAccount(t){return!(!t||!t._isKeystoreAccount)}}function ll(t,e){const r=Vh(Zh(t,"crypto/ciphertext"));if(hn(Ci(nn([e.slice(16,32),r]))).substring(2)!==Zh(t,"crypto/mac").toLowerCase())throw new Error("invalid password");const n=function(t,e,r){if("aes-128-ctr"===Zh(t,"crypto/cipher")){const n=Vh(Zh(t,"crypto/cipherparams/iv")),i=new Hh.Counter(n);return rn(new Hh.ModeOfOperation.ctr(e,i).decrypt(r))}return null}(t,e.slice(0,16),r);n||al.throwError("unsupported cipher",Jr.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const i=e.slice(32,64),o=mh(n);if(t.address){let e=t.address.toLowerCase();if("0x"!==e.substring(0,2)&&(e="0x"+e),ji(e)!==o)throw new Error("address mismatch")}const s={_isKeystoreAccount:!0,address:o,privateKey:hn(n)};if("0.1"===Zh(t,"x-ethers/version")){const e=Vh(Zh(t,"x-ethers/mnemonicCiphertext")),r=Vh(Zh(t,"x-ethers/mnemonicCounter")),n=new Hh.Counter(r),o=new Hh.ModeOfOperation.ctr(i,n),a=Zh(t,"x-ethers/path")||Ph,u=Zh(t,"x-ethers/locale")||"en",h=rn(o.decrypt(e));try{const t=qh(h,u),e=Oh.fromMnemonic(t,null,u).derivePath(a);if(e.privateKey!=s.privateKey)throw new Error("mnemonic mismatch");s.mnemonic=e.mnemonic}catch(t){if(t.code!==Jr.errors.INVALID_ARGUMENT||"wordlist"!==t.argument)throw t}}return new hl(s)}function fl(t,e,r,n,i){return rn(vu(t,e,r,n,i))}function cl(t,e,r,n,i){return Promise.resolve(fl(t,e,r,n,i))}function dl(t,e,r,n,i){const o=Jh(e),s=Zh(t,"crypto/kdf");if(s&&"string"==typeof s){const e=function(t,e){return al.throwArgumentError("invalid key-derivation function parameters",t,e)};if("scrypt"===s.toLowerCase()){const r=Vh(Zh(t,"crypto/kdfparams/salt")),a=parseInt(Zh(t,"crypto/kdfparams/n")),u=parseInt(Zh(t,"crypto/kdfparams/r")),h=parseInt(Zh(t,"crypto/kdfparams/p"));a&&u&&h||e("kdf",s),0!=(a&a-1)&&e("N",a);const l=parseInt(Zh(t,"crypto/kdfparams/dklen"));return 32!==l&&e("dklen",l),n(o,r,a,u,h,64,i)}if("pbkdf2"===s.toLowerCase()){const n=Vh(Zh(t,"crypto/kdfparams/salt"));let i=null;const s=Zh(t,"crypto/kdfparams/prf");"hmac-sha256"===s?i="sha256":"hmac-sha512"===s?i="sha512":e("prf",s);const a=parseInt(Zh(t,"crypto/kdfparams/c")),u=parseInt(Zh(t,"crypto/kdfparams/dklen"));return 32!==u&&e("dklen",u),r(o,n,a,u,i)}}return al.throwArgumentError("unsupported key-derivation function","kdf",s)}var pl=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const ml=new Jr("wallet/5.0.6");class gl extends Is{constructor(t,e){if(ml.checkNew(new.target,gl),super(),null!=(r=t)&&an(r.privateKey,32)&&null!=r.address){const e=new uh(t.privateKey);if(zn(this,"_signingKey",(()=>e)),zn(this,"address",mh(this.publicKey)),this.address!==ji(t.address)&&ml.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),function(t){const e=t.mnemonic;return e&&e.phrase}(t)){const e=t.mnemonic;zn(this,"_mnemonic",(()=>({phrase:e.phrase,path:e.path||Ph,locale:e.locale||"en"})));const r=this.mnemonic;mh(Oh.fromMnemonic(r.phrase,null,r.locale).derivePath(r.path).privateKey)!==this.address&&ml.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else zn(this,"_mnemonic",(()=>null))}else{if(uh.isSigningKey(t))"secp256k1"!==t.curve&&ml.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),zn(this,"_signingKey",(()=>t));else{const e=new uh(t);zn(this,"_signingKey",(()=>e))}zn(this,"_mnemonic",(()=>null)),zn(this,"address",mh(this.publicKey))}var r;e&&!vs.isProvider(e)&&ml.throwArgumentError("invalid provider","provider",e),zn(this,"provider",e||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(t){return new gl(this,t)}signTransaction(t){return Hn(t).then((e=>{null!=e.from&&(ji(e.from)!==this.address&&ml.throwArgumentError("transaction from address mismatch","transaction.from",t.from),delete e.from);const r=this._signingKey().signDigest(Ci(yh(e)));return yh(e,r)}))}signMessage(t){return pl(this,void 0,void 0,(function*(){return yn(this._signingKey().signDigest(Vo(t)))}))}_signTypedData(t,e,r){return pl(this,void 0,void 0,(function*(){const n=yield hs.resolveNames(t,e,r,(t=>(null==this.provider&&ml.throwError("cannot resolve ENS names without a provider",Jr.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"}),this.provider.resolveName(t))));return yn(this._signingKey().signDigest(hs.hash(n.domain,e,n.value)))}))}encrypt(t,e,r){if("function"!=typeof e||r||(r=e,e={}),r&&"function"!=typeof r)throw new Error("invalid callback");return e||(e={}),function(t,e,r,n){try{if(ji(t.address)!==mh(t.privateKey))throw new Error("address/privateKey mismatch");if(ul(t)){const e=t.mnemonic;if(Oh.fromMnemonic(e.phrase,null,e.locale).derivePath(e.path||Ph).privateKey!=t.privateKey)throw new Error("mnemonic mismatch")}}catch(t){return Promise.reject(t)}"function"!=typeof r||n||(n=r,r={}),r||(r={});const i=rn(t.privateKey),o=Jh(e);let s=null,a=null,u=null;if(ul(t)){const e=t.mnemonic;s=rn(Dh(e.phrase,e.locale||"en")),a=e.path||Ph,u=e.locale||"en"}let h=r.client;h||(h="ethers.js");let l=null;l=r.salt?rn(r.salt):Kh(32);let f=null;if(r.iv){if(f=rn(r.iv),16!==f.length)throw new Error("invalid iv")}else f=Kh(16);let c=null;if(r.uuid){if(c=rn(r.uuid),16!==c.length)throw new Error("invalid uuid")}else c=Kh(16);let d=1<<17,p=8,m=1;return r.scrypt&&(r.scrypt.N&&(d=r.scrypt.N),r.scrypt.r&&(p=r.scrypt.r),r.scrypt.p&&(m=r.scrypt.p)),il(o,l,d,p,m,64,n).then((e=>{const r=(e=rn(e)).slice(0,16),n=e.slice(16,32),o=e.slice(32,64),g=new Hh.Counter(f),y=rn(new Hh.ModeOfOperation.ctr(r,g).encrypt(i)),v=Ci(nn([n,y])),w={address:t.address.substring(2).toLowerCase(),id:Yh(c),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hn(f).substring(2)},ciphertext:hn(y).substring(2),kdf:"scrypt",kdfparams:{salt:hn(l).substring(2),n:d,dklen:32,p:m,r:p},mac:v.substring(2)}};if(s){const t=Kh(16),e=new Hh.Counter(t),r=rn(new Hh.ModeOfOperation.ctr(o,e).encrypt(s)),n=new Date,i=n.getUTCFullYear()+"-"+Wh(n.getUTCMonth()+1,2)+"-"+Wh(n.getUTCDate(),2)+"T"+Wh(n.getUTCHours(),2)+"-"+Wh(n.getUTCMinutes(),2)+"-"+Wh(n.getUTCSeconds(),2)+".0Z";w["x-ethers"]={client:h,gethFilename:"UTC--"+i+"--"+w.address,mnemonicCounter:hn(t).substring(2),mnemonicCiphertext:hn(r).substring(2),path:a,locale:u,version:"0.1"}}return JSON.stringify(w)}))}(this,t,e,r)}static createRandom(t){let e=Kh(16);t||(t={}),t.extraEntropy&&(e=rn(fn(Ci(nn([e,t.extraEntropy])),0,16)));const r=qh(e,t.locale);return gl.fromMnemonic(r,t.path,t.locale)}static fromEncryptedJson(t,e,r){return function(t,e,r){if(el(t)){r&&r(0);const n=tl(t,e);return r&&r(1),Promise.resolve(n)}return rl(t)?function(t,e,r){return sl(this,void 0,void 0,(function*(){const n=JSON.parse(t);return ll(n,yield dl(n,e,cl,il,r))}))}(t,e,r):Promise.reject(new Error("invalid JSON wallet"))}(t,e,r).then((t=>new gl(t)))}static fromEncryptedJsonSync(t,e){return new gl(function(t,e){if(el(t))return tl(t,e);if(rl(t))return function(t,e){const r=JSON.parse(t);return ll(r,dl(r,e,fl,ol))}(t,e);throw new Error("invalid JSON wallet")}(t,e))}static fromMnemonic(t,e,r){return e||(e=Ph),new gl(Oh.fromMnemonic(t,null,r).derivePath(e))}}const yl=new Jr("networks/5.0.4");function vl(t){const e=function(e,r){null==r&&(r={});const n=[];if(e.InfuraProvider)try{n.push(new e.InfuraProvider(t,r.infura))}catch(t){}if(e.EtherscanProvider)try{n.push(new e.EtherscanProvider(t,r.etherscan))}catch(t){}if(e.AlchemyProvider)try{n.push(new e.AlchemyProvider(t,r.alchemy))}catch(t){}if(e.CloudflareProvider)try{n.push(new e.CloudflareProvider(t))}catch(t){}if(0===n.length)return null;if(e.FallbackProvider){let i=1;return null!=r.quorum?i=r.quorum:"homestead"===t&&(i=2),new e.FallbackProvider(n,i)}return n[0]};return e.renetwork=function(t){return vl(t)},e}function wl(t,e){const r=function(r,n){return r.JsonRpcProvider?new r.JsonRpcProvider(t,e):null};return r.renetwork=function(e){return wl(t,e)},r}const bl={chainId:1,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"homestead",_defaultProvider:vl("homestead")},Al={chainId:3,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"ropsten",_defaultProvider:vl("ropsten")},Ml={chainId:63,name:"classicMordor",_defaultProvider:wl("https://www.ethercluster.com/mordor","classicMordor")},Il={unspecified:{chainId:0,name:"unspecified"},homestead:bl,mainnet:bl,morden:{chainId:2,name:"morden"},ropsten:Al,testnet:Al,rinkeby:{chainId:4,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"rinkeby",_defaultProvider:vl("rinkeby")},kovan:{chainId:42,name:"kovan",_defaultProvider:vl("kovan")},goerli:{chainId:5,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"goerli",_defaultProvider:vl("goerli")},classic:{chainId:61,name:"classic",_defaultProvider:wl("https://www.ethercluster.com/etc","classic")},classicMorden:{chainId:62,name:"classicMorden"},classicMordor:Ml,classicTestnet:Ml,classicKotti:{chainId:6,name:"classicKotti",_defaultProvider:wl("https://www.ethercluster.com/kotti","classicKotti")}};function El(t){if(null==t)return null;if("number"==typeof t){for(const e in Il){const r=Il[e];if(r.chainId===t)return{name:r.name,chainId:r.chainId,ensAddress:r.ensAddress||null,_defaultProvider:r._defaultProvider||null}}return{chainId:t,name:"unknown"}}if("string"==typeof t){const e=Il[t];return null==e?null:{name:e.name,chainId:e.chainId,ensAddress:e.ensAddress,_defaultProvider:e._defaultProvider||null}}const e=Il[t.name];if(!e)return"number"!=typeof t.chainId&&yl.throwArgumentError("invalid network chainId","network",t),t;0!==t.chainId&&t.chainId!==e.chainId&&yl.throwArgumentError("network chainId mismatch","network",t);let r=t._defaultProvider||null;var n;return null==r&&e._defaultProvider&&(r=(n=e._defaultProvider)&&"function"==typeof n.renetwork?e._defaultProvider.renetwork(t):e._defaultProvider),{name:t.name,chainId:e.chainId,ensAddress:t.ensAddress||e.ensAddress||null,_defaultProvider:r}}function _l(t){t=rn(t);let e="";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return btoa(e)}var Sl=Object.freeze({decode:function(t){t=atob(t);const e=[];for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));return rn(e)},encode:_l}),Cl=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};function xl(t,e){return Cl(this,void 0,void 0,(function*(){null==e&&(e={});const r={method:e.method||"GET",headers:e.headers||{},body:e.body||void 0,mode:"cors",cache:"no-cache",credentials:"same-origin",redirect:"follow",referrer:"client"},n=yield fetch(t,r),i=yield n.arrayBuffer(),o={};return n.headers.forEach?n.headers.forEach(((t,e)=>{o[e.toLowerCase()]=t})):n.headers.keys().forEach((t=>{o[t.toLowerCase()]=n.headers.get(t)})),{headers:o,statusCode:n.status,statusMessage:n.statusText,body:rn(new Uint8Array(i))}}))}var Bl=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const kl=new Jr("web/5.0.9");function Fl(t){return new Promise((e=>{setTimeout(e,t)}))}function Nl(t,e){if(null==t)return null;if("string"==typeof t)return t;if(tn(t)){if(e&&("text"===e.split("/")[0]||"application/json"===e.split(";")[0].trim()))try{return Ao(t)}catch(t){}return hn(t)}return t}function Tl(t,e,r){const n="object"==typeof t&&null!=t.throttleLimit?t.throttleLimit:12;kl.assertArgument(n>0&&n%1==0,"invalid connection throttle limit","connection.throttleLimit",n);const i="object"==typeof t?t.throttleCallback:null,o="object"==typeof t&&"number"==typeof t.throttleSlotInterval?t.throttleSlotInterval:100;kl.assertArgument(o>0&&o%1==0,"invalid connection throttle slot interval","connection.throttleSlotInterval",o);const s={};let a=null;const u={method:"GET"};let h=!1,l=12e4;if("string"==typeof t)a=t;else if("object"==typeof t){if(null!=t&&null!=t.url||kl.throwArgumentError("missing URL","connection.url",t),a=t.url,"number"==typeof t.timeout&&t.timeout>0&&(l=t.timeout),t.headers)for(const e in t.headers)s[e.toLowerCase()]={key:e,value:String(t.headers[e])},["if-none-match","if-modified-since"].indexOf(e.toLowerCase())>=0&&(h=!0);if(u.allowGzip=!!t.allowGzip,null!=t.user&&null!=t.password){"https:"!==a.substring(0,6)&&!0!==t.allowInsecureAuthentication&&kl.throwError("basic authentication requires a secure https url",Jr.errors.INVALID_ARGUMENT,{argument:"url",url:a,user:t.user,password:"[REDACTED]"});const e=t.user+":"+t.password;s.authorization={key:"Authorization",value:"Basic "+_l(vo(e))}}}e&&(u.method="POST",u.body=e,null==s["content-type"]&&(s["content-type"]={key:"Content-Type",value:"application/octet-stream"}),null==s["content-length"]&&(s["content-length"]={key:"Content-Length",value:String(e.length)}));const f={};Object.keys(s).forEach((t=>{const e=s[t];f[e.key]=e.value})),u.headers=f;const c=function(){let t=null;return{promise:new Promise((function(e,r){l&&(t=setTimeout((()=>{null!=t&&(t=null,r(kl.makeError("timeout",Jr.errors.TIMEOUT,{requestBody:Nl(u.body,f["content-type"]),requestMethod:u.method,timeout:l,url:a})))}),l))})),cancel:function(){null!=t&&(clearTimeout(t),t=null)}}}(),d=function(){return Bl(this,void 0,void 0,(function*(){for(let t=0;t<n;t++){let e=null;try{if(e=yield xl(a,u),429===e.statusCode&&t<n){let r=!0;if(i&&(r=yield i(t,a)),r){let r=0;const n=e.headers["retry-after"];r="string"==typeof n&&n.match(/^[1-9][0-9]*$/)?1e3*parseInt(n):o*parseInt(String(Math.random()*Math.pow(2,t))),yield Fl(r);continue}}}catch(t){e=t.response,null==e&&(c.cancel(),kl.throwError("missing response",Jr.errors.SERVER_ERROR,{requestBody:Nl(u.body,f["content-type"]),requestMethod:u.method,serverError:t,url:a}))}let s=e.body;if(h&&304===e.statusCode?s=null:(e.statusCode<200||e.statusCode>=300)&&(c.cancel(),kl.throwError("bad response",Jr.errors.SERVER_ERROR,{status:e.statusCode,headers:e.headers,body:Nl(s,e.headers?e.headers["content-type"]:null),requestBody:Nl(u.body,f["content-type"]),requestMethod:u.method,url:a})),r)try{const t=yield r(s,e);return c.cancel(),t}catch(r){if(r.throttleRetry&&t<n){let e=!0;if(i&&(e=yield i(t,a)),e){const e=o*parseInt(String(Math.random()*Math.pow(2,t)));yield Fl(e);continue}}c.cancel(),kl.throwError("processing response error",Jr.errors.SERVER_ERROR,{body:Nl(s,e.headers?e.headers["content-type"]:null),error:r,requestBody:Nl(u.body,f["content-type"]),requestMethod:u.method,url:a})}return c.cancel(),s}return kl.throwError("failed response",Jr.errors.SERVER_ERROR,{requestBody:Nl(u.body,f["content-type"]),requestMethod:u.method,url:a})}))}();return Promise.race([c.promise,d])}function Rl(t,e,r){let n=null;if(null!=e){n=vo(e);const r="string"==typeof t?{url:t}:Vn(t);r.headers?0!==Object.keys(r.headers).filter((t=>"content-type"===t.toLowerCase())).length||(r.headers=Vn(r.headers),r.headers["content-type"]="application/json"):r.headers={"content-type":"application/json"},t=r}return Tl(t,n,((t,e)=>{let n=null;if(null!=t)try{n=JSON.parse(Ao(t))}catch(e){kl.throwError("invalid JSON",Jr.errors.SERVER_ERROR,{body:t,error:e})}return r&&(n=r(n,e)),n}))}function Pl(t,e){return e||(e={}),null==(e=Vn(e)).floor&&(e.floor=0),null==e.ceiling&&(e.ceiling=1e4),null==e.interval&&(e.interval=250),new Promise((function(r,n){let i=null,o=!1;const s=()=>!o&&(o=!0,i&&clearTimeout(i),!0);e.timeout&&(i=setTimeout((()=>{s()&&n(new Error("timeout"))}),e.timeout));const a=e.retryLimit;let u=0;!function i(){return t().then((function(t){if(void 0!==t)s()&&r(t);else if(e.oncePoll)e.oncePoll.once("poll",i);else if(e.onceBlock)e.onceBlock.once("block",i);else if(!o){if(u++,u>a)return void(s()&&n(new Error("retry limit reached")));let t=e.interval*parseInt(String(Math.random()*Math.pow(2,u)));t<e.floor&&(t=e.floor),t>e.ceiling&&(t=e.ceiling),setTimeout(i,t)}return null}),(function(t){s()&&n(t)}))}()}))}for(var Ol="qpzry9x8gf2tvdw0s3jn54khce6mua7l",Ul={},Dl=0;Dl<Ol.length;Dl++){var ql=Ol.charAt(Dl);if(void 0!==Ul[ql])throw new TypeError(ql+" is ambiguous");Ul[ql]=Dl}function Ll(t){var e=t>>25;return(33554431&t)<<5^996825010&-(e>>0&1)^642813549&-(e>>1&1)^513874426&-(e>>2&1)^1027748829&-(e>>3&1)^705979059&-(e>>4&1)}var Ql=function(t,e,r){if(r=r||90,t.length+7+e.length>r)throw new TypeError("Exceeds length limit");var n=function(t){for(var e=1,r=0;r<t.length;++r){var n=t.charCodeAt(r);if(n<33||n>126)return"Invalid prefix ("+t+")";e=Ll(e)^n>>5}for(e=Ll(e),r=0;r<t.length;++r){var i=t.charCodeAt(r);e=Ll(e)^31&i}return e}(t=t.toLowerCase());if("string"==typeof n)throw new Error(n);for(var i=t+"1",o=0;o<e.length;++o){var s=e[o];if(s>>5!=0)throw new Error("Non 5-bit word");n=Ll(n)^s,i+=Ol.charAt(s)}for(o=0;o<6;++o)n=Ll(n);for(n^=1,o=0;o<6;++o)i+=Ol.charAt(n>>5*(5-o)&31);return i};const jl="providers/5.0.13",zl=new Jr(jl);class Kl{constructor(){zl.checkNew(new.target,Kl),this.formats=this.getDefaultFormats()}getDefaultFormats(){const t={},e=this.address.bind(this),r=this.bigNumber.bind(this),n=this.blockTag.bind(this),i=this.data.bind(this),o=this.hash.bind(this),s=this.hex.bind(this),a=this.number.bind(this);return t.transaction={hash:o,blockHash:Kl.allowNull(o,null),blockNumber:Kl.allowNull(a,null),transactionIndex:Kl.allowNull(a,null),confirmations:Kl.allowNull(a,null),from:e,gasPrice:r,gasLimit:r,to:Kl.allowNull(e,null),value:r,nonce:a,data:i,r:Kl.allowNull(this.uint256),s:Kl.allowNull(this.uint256),v:Kl.allowNull(a),creates:Kl.allowNull(e,null),raw:Kl.allowNull(i)},t.transactionRequest={from:Kl.allowNull(e),nonce:Kl.allowNull(a),gasLimit:Kl.allowNull(r),gasPrice:Kl.allowNull(r),to:Kl.allowNull(e),value:Kl.allowNull(r),data:Kl.allowNull((t=>this.data(t,!0)))},t.receiptLog={transactionIndex:a,blockNumber:a,transactionHash:o,address:e,topics:Kl.arrayOf(o),data:i,logIndex:a,blockHash:o},t.receipt={to:Kl.allowNull(this.address,null),from:Kl.allowNull(this.address,null),contractAddress:Kl.allowNull(e,null),transactionIndex:a,root:Kl.allowNull(o),gasUsed:r,logsBloom:Kl.allowNull(i),blockHash:o,transactionHash:o,logs:Kl.arrayOf(this.receiptLog.bind(this)),blockNumber:a,confirmations:Kl.allowNull(a,null),cumulativeGasUsed:r,status:Kl.allowNull(a)},t.block={hash:o,parentHash:o,number:a,timestamp:a,nonce:Kl.allowNull(s),difficulty:this.difficulty.bind(this),gasLimit:r,gasUsed:r,miner:e,extraData:i,transactions:Kl.allowNull(Kl.arrayOf(o))},t.blockWithTransactions=Vn(t.block),t.blockWithTransactions.transactions=Kl.allowNull(Kl.arrayOf(this.transactionResponse.bind(this))),t.filter={fromBlock:Kl.allowNull(n,void 0),toBlock:Kl.allowNull(n,void 0),blockHash:Kl.allowNull(o,void 0),address:Kl.allowNull(e,void 0),topics:Kl.allowNull(this.topics.bind(this),void 0)},t.filterLog={blockNumber:Kl.allowNull(a),blockHash:Kl.allowNull(o),transactionIndex:a,removed:Kl.allowNull(this.boolean.bind(this)),address:e,data:Kl.allowFalsish(i,"0x"),topics:Kl.arrayOf(o),transactionHash:o,logIndex:a},t}number(t){return In.from(t).toNumber()}bigNumber(t){return In.from(t)}boolean(t){if("boolean"==typeof t)return t;if("string"==typeof t){if("true"===(t=t.toLowerCase()))return!0;if("false"===t)return!1}throw new Error("invalid boolean - "+t)}hex(t,e){return"string"==typeof t&&(e||"0x"===t.substring(0,2)||(t="0x"+t),an(t))?t.toLowerCase():zl.throwArgumentError("invalid hash","value",t)}data(t,e){const r=this.hex(t,e);if(r.length%2!=0)throw new Error("invalid data; odd-length - "+t);return r}address(t){return ji(t)}callAddress(t){if(!an(t,32))return null;const e=ji(fn(t,12));return e===eo?null:e}contractAddress(t){return zi(t)}blockTag(t){if(null==t)return"latest";if("earliest"===t)return"0x0";if("latest"===t||"pending"===t)return t;if("number"==typeof t||an(t))return dn(t);throw new Error("invalid blockTag")}hash(t,e){const r=this.hex(t,e);return 32!==ln(r)?zl.throwArgumentError("invalid hash","value",t):r}difficulty(t){if(null==t)return null;const e=In.from(t);try{return e.toNumber()}catch(t){}return null}uint256(t){if(!an(t))throw new Error("invalid uint256");return mn(t,32)}_block(t,e){return null!=t.author&&null==t.miner&&(t.miner=t.author),Kl.check(e,t)}block(t){return this._block(t,this.formats.block)}blockWithTransactions(t){return this._block(t,this.formats.blockWithTransactions)}transactionRequest(t){return Kl.check(this.formats.transactionRequest,t)}transactionResponse(t){null!=t.gas&&null==t.gasLimit&&(t.gasLimit=t.gas),t.to&&In.from(t.to).isZero()&&(t.to="0x0000000000000000000000000000000000000000"),null!=t.input&&null==t.data&&(t.data=t.input),null==t.to&&null==t.creates&&(t.creates=this.contractAddress(t));const e=Kl.check(this.formats.transaction,t);if(null!=t.chainId){let r=t.chainId;an(r)&&(r=In.from(r).toNumber()),e.chainId=r}else{let r=t.networkId;null==r&&null==e.v&&(r=t.chainId),an(r)&&(r=In.from(r).toNumber()),"number"!=typeof r&&null!=e.v&&(r=(e.v-35)/2,r<0&&(r=0),r=parseInt(r)),"number"!=typeof r&&(r=0),e.chainId=r}return e.blockHash&&"x"===e.blockHash.replace(/0/g,"")&&(e.blockHash=null),e}transaction(t){return vh(t)}receiptLog(t){return Kl.check(this.formats.receiptLog,t)}receipt(t){const e=Kl.check(this.formats.receipt,t);return null!=t.status&&(e.byzantium=!0),e}topics(t){return Array.isArray(t)?t.map((t=>this.topics(t))):null!=t?this.hash(t,!0):null}filter(t){return Kl.check(this.formats.filter,t)}filterLog(t){return Kl.check(this.formats.filterLog,t)}static check(t,e){const r={};for(const n in t)try{const i=t[n](e[n]);void 0!==i&&(r[n]=i)}catch(t){throw t.checkKey=n,t.checkValue=e[n],t}return r}static allowNull(t,e){return function(r){return null==r?e:t(r)}}static allowFalsish(t,e){return function(r){return r?t(r):e}}static arrayOf(t){return function(e){if(!Array.isArray(e))throw new Error("not an array");const r=[];return e.forEach((function(e){r.push(t(e))})),r}}}function Hl(t){return t&&"function"==typeof t.isCommunityResource}function Gl(t){return Hl(t)&&t.isCommunityResource()}let Vl=!1;function Wl(){Vl||(Vl=!0,console.log("========= NOTICE ========="),console.log("Request-Rate Exceeded  (this message will not be repeated)"),console.log(""),console.log("The default API keys for each service are provided as a highly-throttled,"),console.log("community resource for low-traffic projects and early prototyping."),console.log(""),console.log("While your application will continue to function, we highly recommended"),console.log("signing up for your own API keys to improve performance, increase your"),console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),console.log(""),console.log("For more details: https://docs.ethers.io/api-keys/"),console.log("=========================="))}var Jl=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Zl=new Jr(jl);function Yl(t){return null==t?"null":(32!==ln(t)&&Zl.throwArgumentError("invalid topic","topic",t),t.toLowerCase())}function Xl(t){for(t=t.slice();t.length>0&&null==t[t.length-1];)t.pop();return t.map((t=>{if(Array.isArray(t)){const e={};t.forEach((t=>{e[Yl(t)]=!0}));const r=Object.keys(e);return r.sort(),r.join("|")}return Yl(t)})).join("&")}function $l(t){if("string"==typeof t){if(32===ln(t=t.toLowerCase()))return"tx:"+t;if(-1===t.indexOf(":"))return t}else{if(Array.isArray(t))return"filter:*:"+Xl(t);if(ys.isForkEvent(t))throw Zl.warn("not implemented"),new Error("not implemented");if(t&&"object"==typeof t)return"filter:"+(t.address||"*")+":"+Xl(t.topics||[])}throw new Error("invalid event - "+t)}function tf(){return(new Date).getTime()}const ef=["block","network","pending","poll"];class rf{constructor(t,e,r){zn(this,"tag",t),zn(this,"listener",e),zn(this,"once",r)}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter}return this.tag}get type(){return this.tag.split(":")[0]}get hash(){const t=this.tag.split(":");return"tx"!==t[0]?null:t[1]}get filter(){const t=this.tag.split(":");if("filter"!==t[0])return null;const e=t[1],r=""===(n=t[2])?[]:n.split(/&/g).map((t=>{if(""===t)return[];const e=t.split("|").map((t=>"null"===t?null:t));return 1===e.length?e[0]:e}));var n;const i={};return r.length>0&&(i.topics=r),e&&"*"!==e&&(i.address=e),i}pollable(){return this.tag.indexOf(":")>=0||ef.indexOf(this.tag)>=0}}const nf={0:{symbol:"btc",p2pkh:0,p2sh:5,prefix:"bc"},2:{symbol:"ltc",p2pkh:48,p2sh:50,prefix:"ltc"},3:{symbol:"doge",p2pkh:30,p2sh:22},60:{symbol:"eth",ilk:"eth"},61:{symbol:"etc",ilk:"eth"},700:{symbol:"xdai",ilk:"eth"}};function of(t){return mn(In.from(t).toHexString(),32)}function sf(t){return Ls.encode(nn([t,fn(mu(mu(t)),0,4)]))}class af{constructor(t,e,r){zn(this,"provider",t),zn(this,"name",r),zn(this,"address",t.formatter.address(e))}_fetchBytes(t,e){return Jl(this,void 0,void 0,(function*(){const r={to:this.address,data:cn([t,Go(this.name),e||"0x"])},n=yield this.provider.call(r);if("0x"===n)return null;const i=In.from(fn(n,0,32)).toNumber(),o=In.from(fn(n,i,i+32)).toNumber();return fn(n,i+32,i+32+o)}))}_getAddress(t,e){const r=nf[String(t)];if(null==r&&Zl.throwError("unsupported coin type: "+t,Jr.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${t})`}),"eth"===r.ilk)return this.provider.formatter.address(e);const n=rn(e);if(null!=r.p2pkh){const t=e.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(t){const e=parseInt(t[1],16);if(t[2].length===2*e&&e>=1&&e<=75)return sf(nn([[r.p2pkh],"0x"+t[2]]))}}if(null!=r.p2sh){const t=e.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(t){const e=parseInt(t[1],16);if(t[2].length===2*e&&e>=1&&e<=75)return sf(nn([[r.p2sh],"0x"+t[2]]))}}if(null!=r.prefix){const t=n[1];let e=n[0];if(0===e?20!==t&&32!==t&&(e=-1):e=-1,e>=0&&n.length===2+t&&t>=1&&t<=75){const t=function(t){var e=function(t,e,r,n){for(var i=0,o=0,s=(1<<r)-1,a=[],u=0;u<t.length;++u)for(i=i<<e|t[u],o+=e;o>=r;)o-=r,a.push(i>>o&s);if(n)o>0&&a.push(i<<r-o&s);else{if(o>=e)return"Excess padding";if(i<<r-o&s)return"Non-zero padding"}return a}(t,8,5,!0);if(Array.isArray(e))return e;throw new Error(e)}(n.slice(2));return t.unshift(e),Ql(r.prefix,t)}}return null}getAddress(t){return Jl(this,void 0,void 0,(function*(){if(null==t&&(t=60),60===t){const t={to:this.address,data:"0x3b3b57de"+Go(this.name).substring(2)},e=yield this.provider.call(t);return"0x"===e||e===ro?null:this.provider.formatter.callAddress(e)}const e=yield this._fetchBytes("0xf1cb7e06",of(t));if(null==e||"0x"===e)return null;const r=this._getAddress(t,e);return null==r&&Zl.throwError("invalid or unsupported coin data",Jr.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${t})`,coinType:t,data:e}),r}))}getContentHash(){return Jl(this,void 0,void 0,(function*(){const t=yield this._fetchBytes("0xbc1c58d1");if(null==t||"0x"===t)return null;const e=t.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(e){const t=parseInt(e[3],16);if(e[4].length===2*t)return"ipfs://"+Ls.encode("0x"+e[1])}const r=t.match(/^0xe40101fa011b20([0-9a-f]*)$/);return r&&64===r[1].length?"bzz://"+r[1]:Zl.throwError("invalid or unsupported content hash data",Jr.errors.UNSUPPORTED_OPERATION,{operation:"getContentHash()",data:t})}))}getText(t){return Jl(this,void 0,void 0,(function*(){let e=vo(t);e=nn([of(64),of(e.length),e]),e.length%32!=0&&(e=nn([e,mn("0x",32-t.length%32)]));const r=yield this._fetchBytes("0x59d1d43c",hn(e));return null==r||"0x"===r?null:Ao(r)}))}}let uf=null,hf=1;class lf extends vs{constructor(t){if(Zl.checkNew(new.target,vs),super(),this._events=[],this._emitted={block:-2},this.formatter=new.target.getFormatter(),zn(this,"anyNetwork","any"===t),this.anyNetwork&&(t=this.detectNetwork()),t instanceof Promise)this._networkPromise=t,t.catch((t=>{})),this._ready().catch((t=>{}));else{const e=Kn(new.target,"getNetwork")(t);e?(zn(this,"_network",e),this.emit("network",e,null)):Zl.throwArgumentError("invalid network","network",t)}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._pollingInterval=4e3,this._fastQueryDate=0}_ready(){return Jl(this,void 0,void 0,(function*(){if(null==this._network){let t=null;if(this._networkPromise)try{t=yield this._networkPromise}catch(t){}null==t&&(t=yield this.detectNetwork()),t||Zl.throwError("no network detected",Jr.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=t:zn(this,"_network",t),this.emit("network",t,null))}return this._network}))}get ready(){return Pl((()=>this._ready().then((t=>t),(t=>{if(t.code!==Jr.errors.NETWORK_ERROR||"noNetwork"!==t.event)throw t}))))}static getFormatter(){return null==uf&&(uf=new Kl),uf}static getNetwork(t){return El(null==t?"homestead":t)}_getInternalBlockNumber(t){return Jl(this,void 0,void 0,(function*(){yield this._ready();const e=this._internalBlockNumber;if(t>0&&this._internalBlockNumber){const r=yield e;if(tf()-r.respTime<=t)return r.blockNumber}const r=tf(),n=Hn({blockNumber:this.perform("getBlockNumber",{}),networkError:this.getNetwork().then((t=>null),(t=>t))}).then((({blockNumber:t,networkError:e})=>{if(e)throw this._internalBlockNumber===n&&(this._internalBlockNumber=null),e;const i=tf();return(t=In.from(t).toNumber())<this._maxInternalBlockNumber&&(t=this._maxInternalBlockNumber),this._maxInternalBlockNumber=t,this._setFastBlockNumber(t),{blockNumber:t,reqTime:r,respTime:i}}));return this._internalBlockNumber=n,(yield n).blockNumber}))}poll(){return Jl(this,void 0,void 0,(function*(){const t=hf++,e=[],r=yield this._getInternalBlockNumber(100+this.pollingInterval/2);if(this._setFastBlockNumber(r),this.emit("poll",t,r),r!==this._lastBlockNumber){if(-2===this._emitted.block&&(this._emitted.block=r-1),Math.abs(this._emitted.block-r)>1e3)Zl.warn("network block skew detected; skipping block events"),this.emit("error",Zl.makeError("network block skew detected",Jr.errors.NETWORK_ERROR,{blockNumber:r,event:"blockSkew",previousBlockNumber:this._emitted.block})),this.emit("block",r);else for(let t=this._emitted.block+1;t<=r;t++)this.emit("block",t);return this._emitted.block!==r&&(this._emitted.block=r,Object.keys(this._emitted).forEach((t=>{if("block"===t)return;const e=this._emitted[t];"pending"!==e&&r-e>12&&delete this._emitted[t]}))),-2===this._lastBlockNumber&&(this._lastBlockNumber=r-1),this._events.forEach((t=>{switch(t.type){case"tx":{const r=t.hash;let n=this.getTransactionReceipt(r).then((t=>t&&null!=t.blockNumber?(this._emitted["t:"+r]=t.blockNumber,this.emit(r,t),null):null)).catch((t=>{this.emit("error",t)}));e.push(n);break}case"filter":{const n=t.filter;n.fromBlock=this._lastBlockNumber+1,n.toBlock=r;const i=this.getLogs(n).then((t=>{0!==t.length&&t.forEach((t=>{this._emitted["b:"+t.blockHash]=t.blockNumber,this._emitted["t:"+t.transactionHash]=t.blockNumber,this.emit(n,t)}))})).catch((t=>{this.emit("error",t)}));e.push(i);break}}})),this._lastBlockNumber=r,Promise.all(e).then((()=>{this.emit("didPoll",t)})),null}this.emit("didPoll",t)}))}resetEventsBlock(t){this._lastBlockNumber=t-1,this.polling&&this.poll()}get network(){return this._network}detectNetwork(){return Jl(this,void 0,void 0,(function*(){return Zl.throwError("provider does not support network detection",Jr.errors.UNSUPPORTED_OPERATION,{operation:"provider.detectNetwork"})}))}getNetwork(){return Jl(this,void 0,void 0,(function*(){const t=yield this._ready(),e=yield this.detectNetwork();if(t.chainId!==e.chainId){if(this.anyNetwork)return this._network=e,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit("network",e,t),yield(0,new Promise((t=>{setTimeout(t,0)}))),this._network;const r=Zl.makeError("underlying network changed",Jr.errors.NETWORK_ERROR,{event:"changed",network:t,detectedNetwork:e});throw this.emit("error",r),r}return t}))}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then((t=>{this._setFastBlockNumber(t)})),null!=this._fastBlockNumber?this._fastBlockNumber:-1}get polling(){return null!=this._poller}set polling(t){t&&!this._poller?(this._poller=setInterval(this.poll.bind(this),this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout((()=>{this.poll(),this._bootstrapPoll=setTimeout((()=>{this._poller||this.poll(),this._bootstrapPoll=null}),this.pollingInterval)}),0))):!t&&this._poller&&(clearInterval(this._poller),this._poller=null)}get pollingInterval(){return this._pollingInterval}set pollingInterval(t){if("number"!=typeof t||t<=0||parseInt(String(t))!=t)throw new Error("invalid polling interval");this._pollingInterval=t,this._poller&&(clearInterval(this._poller),this._poller=setInterval((()=>{this.poll()}),this._pollingInterval))}_getFastBlockNumber(){const t=tf();return t-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=t,this._fastBlockNumberPromise=this.getBlockNumber().then((t=>((null==this._fastBlockNumber||t>this._fastBlockNumber)&&(this._fastBlockNumber=t),this._fastBlockNumber)))),this._fastBlockNumberPromise}_setFastBlockNumber(t){null!=this._fastBlockNumber&&t<this._fastBlockNumber||(this._fastQueryDate=tf(),(null==this._fastBlockNumber||t>this._fastBlockNumber)&&(this._fastBlockNumber=t,this._fastBlockNumberPromise=Promise.resolve(t)))}waitForTransaction(t,e,r){return Jl(this,void 0,void 0,(function*(){null==e&&(e=1);const n=yield this.getTransactionReceipt(t);return(n?n.confirmations:0)>=e?n:new Promise(((n,i)=>{let o=null,s=!1;const a=r=>{r.confirmations<e||(o&&clearTimeout(o),s||(s=!0,this.removeListener(t,a),n(r)))};this.on(t,a),"number"==typeof r&&r>0&&(o=setTimeout((()=>{s||(o=null,s=!0,this.removeListener(t,a),i(Zl.makeError("timeout exceeded",Jr.errors.TIMEOUT,{timeout:r})))}),r),o.unref&&o.unref())}))}))}getBlockNumber(){return Jl(this,void 0,void 0,(function*(){return this._getInternalBlockNumber(0)}))}getGasPrice(){return Jl(this,void 0,void 0,(function*(){return yield this.getNetwork(),In.from(yield this.perform("getGasPrice",{}))}))}getBalance(t,e){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Hn({address:this._getAddress(t),blockTag:this._getBlockTag(e)});return In.from(yield this.perform("getBalance",r))}))}getTransactionCount(t,e){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Hn({address:this._getAddress(t),blockTag:this._getBlockTag(e)});return In.from(yield this.perform("getTransactionCount",r)).toNumber()}))}getCode(t,e){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Hn({address:this._getAddress(t),blockTag:this._getBlockTag(e)});return hn(yield this.perform("getCode",r))}))}getStorageAt(t,e,r){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const n=yield Hn({address:this._getAddress(t),blockTag:this._getBlockTag(r),position:Promise.resolve(e).then((t=>dn(t)))});return hn(yield this.perform("getStorageAt",n))}))}_wrapTransaction(t,e){if(null!=e&&32!==ln(e))throw new Error("invalid response - sendTransaction");const r=t;return null!=e&&t.hash!==e&&Zl.throwError("Transaction hash mismatch from Provider.sendTransaction.",Jr.errors.UNKNOWN_ERROR,{expectedHash:t.hash,returnedHash:e}),r.wait=e=>Jl(this,void 0,void 0,(function*(){0!==e&&(this._emitted["t:"+t.hash]="pending");const r=yield this.waitForTransaction(t.hash,e);return null==r&&0===e?null:(this._emitted["t:"+t.hash]=r.blockNumber,0===r.status&&Zl.throwError("transaction failed",Jr.errors.CALL_EXCEPTION,{transactionHash:t.hash,transaction:t,receipt:r}),r)})),r}sendTransaction(t){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield Promise.resolve(t).then((t=>hn(t))),r=this.formatter.transaction(t);try{const t=yield this.perform("sendTransaction",{signedTransaction:e});return this._wrapTransaction(r,t)}catch(t){throw t.transaction=r,t.transactionHash=r.hash,t}}))}_getTransactionRequest(t){return Jl(this,void 0,void 0,(function*(){const e=yield t,r={};return["from","to"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>t?this._getAddress(t):null)))})),["gasLimit","gasPrice","value"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>t?In.from(t):null)))})),["data"].forEach((t=>{null!=e[t]&&(r[t]=Promise.resolve(e[t]).then((t=>t?hn(t):null)))})),this.formatter.transactionRequest(yield Hn(r))}))}_getFilter(t){return Jl(this,void 0,void 0,(function*(){t=yield t;const e={};return null!=t.address&&(e.address=this._getAddress(t.address)),["blockHash","topics"].forEach((r=>{null!=t[r]&&(e[r]=t[r])})),["fromBlock","toBlock"].forEach((r=>{null!=t[r]&&(e[r]=this._getBlockTag(t[r]))})),this.formatter.filter(yield Hn(e))}))}call(t,e){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield Hn({transaction:this._getTransactionRequest(t),blockTag:this._getBlockTag(e)});return hn(yield this.perform("call",r))}))}estimateGas(t){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield Hn({transaction:this._getTransactionRequest(t)});return In.from(yield this.perform("estimateGas",e))}))}_getAddress(t){return Jl(this,void 0,void 0,(function*(){const e=yield this.resolveName(t);return null==e&&Zl.throwError("ENS name not configured",Jr.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(t)})`}),e}))}_getBlock(t,e){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork(),t=yield t;let r=-128;const n={includeTransactions:!!e};if(an(t,32))n.blockHash=t;else try{n.blockTag=this.formatter.blockTag(yield this._getBlockTag(t)),an(n.blockTag)&&(r=parseInt(n.blockTag.substring(2),16))}catch(e){Zl.throwArgumentError("invalid block hash or block tag","blockHashOrBlockTag",t)}return Pl((()=>Jl(this,void 0,void 0,(function*(){const t=yield this.perform("getBlock",n);if(null==t)return null!=n.blockHash&&null==this._emitted["b:"+n.blockHash]||null!=n.blockTag&&r>this._emitted.block?null:void 0;if(e){let e=null;for(let r=0;r<t.transactions.length;r++){const n=t.transactions[r];if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){null==e&&(e=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let t=e-n.blockNumber+1;t<=0&&(t=1),n.confirmations=t}}return this.formatter.blockWithTransactions(t)}return this.formatter.block(t)}))),{oncePoll:this})}))}getBlock(t){return this._getBlock(t,!1)}getBlockWithTransactions(t){return this._getBlock(t,!0)}getTransaction(t){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork(),t=yield t;const e={transactionHash:this.formatter.hash(t,!0)};return Pl((()=>Jl(this,void 0,void 0,(function*(){const r=yield this.perform("getTransaction",e);if(null==r)return null==this._emitted["t:"+t]?null:void 0;const n=this.formatter.transactionResponse(r);if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){let t=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-n.blockNumber+1;t<=0&&(t=1),n.confirmations=t}return this._wrapTransaction(n)}))),{oncePoll:this})}))}getTransactionReceipt(t){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork(),t=yield t;const e={transactionHash:this.formatter.hash(t,!0)};return Pl((()=>Jl(this,void 0,void 0,(function*(){const r=yield this.perform("getTransactionReceipt",e);if(null==r)return null==this._emitted["t:"+t]?null:void 0;if(null==r.blockHash)return;const n=this.formatter.receipt(r);if(null==n.blockNumber)n.confirmations=0;else if(null==n.confirmations){let t=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-n.blockNumber+1;t<=0&&(t=1),n.confirmations=t}return n}))),{oncePoll:this})}))}getLogs(t){return Jl(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield Hn({filter:this._getFilter(t)}),r=yield this.perform("getLogs",e);return r.forEach((t=>{null==t.removed&&(t.removed=!1)})),Kl.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)}))}getEtherPrice(){return Jl(this,void 0,void 0,(function*(){return yield this.getNetwork(),this.perform("getEtherPrice",{})}))}_getBlockTag(t){return Jl(this,void 0,void 0,(function*(){if("number"==typeof(t=yield t)&&t<0){t%1&&Zl.throwArgumentError("invalid BlockTag","blockTag",t);let e=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return e+=t,e<0&&(e=0),this.formatter.blockTag(e)}return this.formatter.blockTag(t)}))}getResolver(t){return Jl(this,void 0,void 0,(function*(){const e=yield this._getResolver(t);return null==e?null:new af(this,e,t)}))}_getResolver(t){return Jl(this,void 0,void 0,(function*(){const e=yield this.getNetwork();e.ensAddress||Zl.throwError("network does not support ENS",Jr.errors.UNSUPPORTED_OPERATION,{operation:"ENS",network:e.name});const r={to:e.ensAddress,data:"0x0178b8bf"+Go(t).substring(2)};return this.formatter.callAddress(yield this.call(r))}))}resolveName(t){return Jl(this,void 0,void 0,(function*(){t=yield t;try{return Promise.resolve(this.formatter.address(t))}catch(e){if(an(t))throw e}"string"!=typeof t&&Zl.throwArgumentError("invalid ENS name","name",t);const e=yield this.getResolver(t);return e?yield e.getAddress():null}))}lookupAddress(t){return Jl(this,void 0,void 0,(function*(){t=yield t;const e=(t=this.formatter.address(t)).substring(2).toLowerCase()+".addr.reverse",r=yield this._getResolver(e);if(!r)return null;let n=rn(yield this.call({to:r,data:"0x691f3431"+Go(e).substring(2)}));if(n.length<32||!In.from(n.slice(0,32)).eq(32))return null;if(n=n.slice(32),n.length<32)return null;const i=In.from(n.slice(0,32)).toNumber();if(n=n.slice(32),i>n.length)return null;const o=Ao(n.slice(0,i));return(yield this.resolveName(o))!=t?null:o}))}perform(t,e){return Zl.throwError(t+" not implemented",Jr.errors.NOT_IMPLEMENTED,{operation:t})}_startEvent(t){this.polling=this._events.filter((t=>t.pollable())).length>0}_stopEvent(t){this.polling=this._events.filter((t=>t.pollable())).length>0}_addEventListener(t,e,r){const n=new rf($l(t),e,r);return this._events.push(n),this._startEvent(n),this}on(t,e){return this._addEventListener(t,e,!1)}once(t,e){return this._addEventListener(t,e,!0)}emit(t,...e){let r=!1,n=[],i=$l(t);return this._events=this._events.filter((t=>t.tag!==i||(setTimeout((()=>{t.listener.apply(this,e)}),0),r=!0,!t.once||(n.push(t),!1)))),n.forEach((t=>{this._stopEvent(t)})),r}listenerCount(t){if(!t)return this._events.length;let e=$l(t);return this._events.filter((t=>t.tag===e)).length}listeners(t){if(null==t)return this._events.map((t=>t.listener));let e=$l(t);return this._events.filter((t=>t.tag===e)).map((t=>t.listener))}off(t,e){if(null==e)return this.removeAllListeners(t);const r=[];let n=!1,i=$l(t);return this._events=this._events.filter((t=>t.tag!==i||t.listener!=e||!!n||(n=!0,r.push(t),!1))),r.forEach((t=>{this._stopEvent(t)})),this}removeAllListeners(t){let e=[];if(null==t)e=this._events,this._events=[];else{const r=$l(t);this._events=this._events.filter((t=>t.tag!==r||(e.push(t),!1)))}return e.forEach((t=>{this._stopEvent(t)})),this}}var ff=_r((function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.version="providers/5.0.13"})),cf=(Er(ff),ff.version,Er(_r((function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var r=null;try{if(null==(r=WebSocket))throw new Error("inject please")}catch(t){var n=new Zr.Logger(ff.version);r=function(){n.throwError("WebSockets not supported in this environment",Zr.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new WebSocket()"})}}t.exports=r})))),df=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const pf=new Jr(jl),mf=["call","estimateGas"];function gf(t,e,r){let n=e.message;e.code===Jr.errors.SERVER_ERROR&&e.error&&"string"==typeof e.error.message?n=e.error.message:"string"==typeof e.body?n=e.body:"string"==typeof e.responseText&&(n=e.responseText),n=(n||"").toLowerCase();const i=r.transaction||r.signedTransaction;throw n.match(/insufficient funds/)&&pf.throwError("insufficient funds for intrinsic transaction cost",Jr.errors.INSUFFICIENT_FUNDS,{error:e,method:t,transaction:i}),n.match(/nonce too low/)&&pf.throwError("nonce has already been used",Jr.errors.NONCE_EXPIRED,{error:e,method:t,transaction:i}),n.match(/replacement transaction underpriced/)&&pf.throwError("replacement fee too low",Jr.errors.REPLACEMENT_UNDERPRICED,{error:e,method:t,transaction:i}),mf.indexOf(t)>=0&&n.match(/gas required exceeds allowance|always failing transaction|execution reverted/)&&pf.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Jr.errors.UNPREDICTABLE_GAS_LIMIT,{error:e,method:t,transaction:i}),e}function yf(t){return new Promise((function(e){setTimeout(e,t)}))}function vf(t){if(t.error){const e=new Error(t.error.message);throw e.code=t.error.code,e.data=t.error.data,e}return t.result}function wf(t){return t?t.toLowerCase():t}const bf={};class Af extends Is{constructor(t,e,r){if(pf.checkNew(new.target,Af),super(),t!==bf)throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");zn(this,"provider",e),null==r&&(r=0),"string"==typeof r?(zn(this,"_address",this.provider.formatter.address(r)),zn(this,"_index",null)):"number"==typeof r?(zn(this,"_index",r),zn(this,"_address",null)):pf.throwArgumentError("invalid address or index","addressOrIndex",r)}connect(t){return pf.throwError("cannot alter JSON-RPC Signer connection",Jr.errors.UNSUPPORTED_OPERATION,{operation:"connect"})}connectUnchecked(){return new Mf(bf,this.provider,this._address||this._index)}getAddress(){return this._address?Promise.resolve(this._address):this.provider.send("eth_accounts",[]).then((t=>(t.length<=this._index&&pf.throwError("unknown account #"+this._index,Jr.errors.UNSUPPORTED_OPERATION,{operation:"getAddress"}),this.provider.formatter.address(t[this._index]))))}sendUncheckedTransaction(t){t=Vn(t);const e=this.getAddress().then((t=>(t&&(t=t.toLowerCase()),t)));if(null==t.gasLimit){const r=Vn(t);r.from=e,t.gasLimit=this.provider.estimateGas(r)}return Hn({tx:Hn(t),sender:e}).then((({tx:e,sender:r})=>{null!=e.from?e.from.toLowerCase()!==r&&pf.throwArgumentError("from address mismatch","transaction",t):e.from=r;const n=this.provider.constructor.hexlifyTransaction(e,{from:!0});return this.provider.send("eth_sendTransaction",[n]).then((t=>t),(t=>gf("sendTransaction",t,n)))}))}signTransaction(t){return pf.throwError("signing transactions is unsupported",Jr.errors.UNSUPPORTED_OPERATION,{operation:"signTransaction"})}sendTransaction(t){return this.sendUncheckedTransaction(t).then((t=>Pl((()=>this.provider.getTransaction(t).then((e=>{if(null!==e)return this.provider._wrapTransaction(e,t)}))),{onceBlock:this.provider}).catch((e=>{throw e.transactionHash=t,e}))))}signMessage(t){return df(this,void 0,void 0,(function*(){const e="string"==typeof t?vo(t):t,r=yield this.getAddress();return yield this.provider.send("eth_sign",[r.toLowerCase(),hn(e)])}))}_signTypedData(t,e,r){return df(this,void 0,void 0,(function*(){const n=yield hs.resolveNames(t,e,r,(t=>this.provider.resolveName(t))),i=yield this.getAddress();return yield this.provider.send("eth_signTypedData_v4",[i.toLowerCase(),JSON.stringify(hs.getPayload(n.domain,e,n.value))])}))}unlock(t){return df(this,void 0,void 0,(function*(){const e=this.provider,r=yield this.getAddress();return e.send("personal_unlockAccount",[r.toLowerCase(),t,null])}))}}class Mf extends Af{sendTransaction(t){return this.sendUncheckedTransaction(t).then((t=>({hash:t,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:e=>this.provider.waitForTransaction(t,e)})))}}const If={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0};class Ef extends lf{constructor(t,e){pf.checkNew(new.target,Ef);let r=e;null==r&&(r=new Promise(((t,e)=>{setTimeout((()=>{this.detectNetwork().then((e=>{t(e)}),(t=>{e(t)}))}),0)}))),super(r),t||(t=Kn(this.constructor,"defaultUrl")()),zn(this,"connection","string"==typeof t?Object.freeze({url:t}):Object.freeze(Vn(t))),this._nextId=42}static defaultUrl(){return"http://localhost:8545"}detectNetwork(){return df(this,void 0,void 0,(function*(){yield yf(0);let t=null;try{t=yield this.send("eth_chainId",[])}catch(e){try{t=yield this.send("net_version",[])}catch(t){}}if(null!=t){const e=Kn(this.constructor,"getNetwork");try{return e(In.from(t).toNumber())}catch(e){return pf.throwError("could not detect network",Jr.errors.NETWORK_ERROR,{chainId:t,event:"invalidNetwork",serverError:e})}}return pf.throwError("could not detect network",Jr.errors.NETWORK_ERROR,{event:"noNetwork"})}))}getSigner(t){return new Af(bf,this,t)}getUncheckedSigner(t){return this.getSigner(t).connectUnchecked()}listAccounts(){return this.send("eth_accounts",[]).then((t=>t.map((t=>this.formatter.address(t)))))}send(t,e){const r={method:t,params:e,id:this._nextId++,jsonrpc:"2.0"};return this.emit("debug",{action:"request",request:Yn(r),provider:this}),Rl(this.connection,JSON.stringify(r),vf).then((t=>(this.emit("debug",{action:"response",request:r,response:t,provider:this}),t)),(t=>{throw this.emit("debug",{action:"response",error:t,request:r,provider:this}),t}))}prepareRequest(t,e){switch(t){case"getBlockNumber":return["eth_blockNumber",[]];case"getGasPrice":return["eth_gasPrice",[]];case"getBalance":return["eth_getBalance",[wf(e.address),e.blockTag]];case"getTransactionCount":return["eth_getTransactionCount",[wf(e.address),e.blockTag]];case"getCode":return["eth_getCode",[wf(e.address),e.blockTag]];case"getStorageAt":return["eth_getStorageAt",[wf(e.address),e.position,e.blockTag]];case"sendTransaction":return["eth_sendRawTransaction",[e.signedTransaction]];case"getBlock":return e.blockTag?["eth_getBlockByNumber",[e.blockTag,!!e.includeTransactions]]:e.blockHash?["eth_getBlockByHash",[e.blockHash,!!e.includeTransactions]]:null;case"getTransaction":return["eth_getTransactionByHash",[e.transactionHash]];case"getTransactionReceipt":return["eth_getTransactionReceipt",[e.transactionHash]];case"call":return["eth_call",[Kn(this.constructor,"hexlifyTransaction")(e.transaction,{from:!0}),e.blockTag]];case"estimateGas":return["eth_estimateGas",[Kn(this.constructor,"hexlifyTransaction")(e.transaction,{from:!0})]];case"getLogs":return e.filter&&null!=e.filter.address&&(e.filter.address=wf(e.filter.address)),["eth_getLogs",[e.filter]]}return null}perform(t,e){return df(this,void 0,void 0,(function*(){const r=this.prepareRequest(t,e);null==r&&pf.throwError(t+" not implemented",Jr.errors.NOT_IMPLEMENTED,{operation:t});try{return yield this.send(r[0],r[1])}catch(r){return gf(t,r,e)}}))}_startEvent(t){"pending"===t.tag&&this._startPending(),super._startEvent(t)}_startPending(){if(null!=this._pendingFilter)return;const t=this,e=this.send("eth_newPendingTransactionFilter",[]);this._pendingFilter=e,e.then((function(r){return function n(){t.send("eth_getFilterChanges",[r]).then((function(r){if(t._pendingFilter!=e)return null;let n=Promise.resolve();return r.forEach((function(e){t._emitted["t:"+e.toLowerCase()]="pending",n=n.then((function(){return t.getTransaction(e).then((function(e){return t.emit("pending",e),null}))}))})),n.then((function(){return yf(1e3)}))})).then((function(){if(t._pendingFilter==e)return setTimeout((function(){n()}),0),null;t.send("eth_uninstallFilter",[r])})).catch((t=>{}))}(),r})).catch((t=>{}))}_stopEvent(t){"pending"===t.tag&&0===this.listenerCount("pending")&&(this._pendingFilter=null),super._stopEvent(t)}static hexlifyTransaction(t,e){const r=Vn(If);if(e)for(const t in e)e[t]&&(r[t]=!0);Gn(t,r);const n={};return["gasLimit","gasPrice","nonce","value"].forEach((function(e){if(null==t[e])return;const r=dn(t[e]);"gasLimit"===e&&(e="gas"),n[e]=r})),["from","to","data"].forEach((function(e){null!=t[e]&&(n[e]=hn(t[e]))})),n}}var _f=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Sf=new Jr(jl);let Cf=1;class xf extends Ef{constructor(t,e){"any"===e&&Sf.throwError("WebSocketProvider does not support 'any' network yet",Jr.errors.UNSUPPORTED_OPERATION,{operation:"network:any"}),super(t,e),this._pollingInterval=-1,this._wsReady=!1,zn(this,"_websocket",new cf(this.connection.url)),zn(this,"_requests",{}),zn(this,"_subs",{}),zn(this,"_subIds",{}),zn(this,"_detectNetwork",super.detectNetwork()),this._websocket.onopen=()=>{this._wsReady=!0,Object.keys(this._requests).forEach((t=>{this._websocket.send(this._requests[t].payload)}))},this._websocket.onmessage=t=>{const e=t.data,r=JSON.parse(e);if(null!=r.id){const t=String(r.id),n=this._requests[t];if(delete this._requests[t],void 0!==r.result)n.callback(null,r.result),this.emit("debug",{action:"response",request:JSON.parse(n.payload),response:r.result,provider:this});else{let t=null;r.error?(t=new Error(r.error.message||"unknown error"),zn(t,"code",r.error.code||null),zn(t,"response",e)):t=new Error("unknown error"),n.callback(t,void 0),this.emit("debug",{action:"response",error:t,request:JSON.parse(n.payload),provider:this})}}else if("eth_subscription"===r.method){const t=this._subs[r.params.subscription];t&&t.processFunc(r.params.result)}else console.warn("this should not happen")};const r=setInterval((()=>{this.emit("poll")}),1e3);r.unref&&r.unref()}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(t){Sf.throwError("cannot reset events block on WebSocketProvider",Jr.errors.UNSUPPORTED_OPERATION,{operation:"resetEventBlock"})}set pollingInterval(t){Sf.throwError("cannot set polling interval on WebSocketProvider",Jr.errors.UNSUPPORTED_OPERATION,{operation:"setPollingInterval"})}poll(){return _f(this,void 0,void 0,(function*(){return null}))}set polling(t){t&&Sf.throwError("cannot set polling on WebSocketProvider",Jr.errors.UNSUPPORTED_OPERATION,{operation:"setPolling"})}send(t,e){const r=Cf++;return new Promise(((n,i)=>{const o=JSON.stringify({method:t,params:e,id:r,jsonrpc:"2.0"});this.emit("debug",{action:"request",request:JSON.parse(o),provider:this}),this._requests[String(r)]={callback:function(t,e){return t?i(t):n(e)},payload:o},this._wsReady&&this._websocket.send(o)}))}static defaultUrl(){return"ws://localhost:8546"}_subscribe(t,e,r){return _f(this,void 0,void 0,(function*(){let n=this._subIds[t];null==n&&(n=Promise.all(e).then((t=>this.send("eth_subscribe",t))),this._subIds[t]=n);const i=yield n;this._subs[i]={tag:t,processFunc:r}}))}_startEvent(t){switch(t.type){case"block":this._subscribe("block",["newHeads"],(t=>{const e=In.from(t.number).toNumber();this._emitted.block=e,this.emit("block",e)}));break;case"pending":this._subscribe("pending",["newPendingTransactions"],(t=>{this.emit("pending",t)}));break;case"filter":this._subscribe(t.tag,["logs",this._getFilter(t.filter)],(e=>{null==e.removed&&(e.removed=!1),this.emit(t.filter,this.formatter.filterLog(e))}));break;case"tx":{const e=t=>{const e=t.hash;this.getTransactionReceipt(e).then((t=>{t&&this.emit(e,t)}))};e(t),this._subscribe("tx",["newHeads"],(t=>{this._events.filter((t=>"tx"===t.type)).forEach(e)}));break}case"debug":case"poll":case"willPoll":case"didPoll":case"error":break;default:console.log("unhandled:",t)}}_stopEvent(t){let e=t.tag;if("tx"===t.type){if(this._events.filter((t=>"tx"===t.type)).length)return;e="tx"}else if(this.listenerCount(t.event))return;const r=this._subIds[e];r&&(delete this._subIds[e],r.then((t=>{this._subs[t]&&(delete this._subs[t],this.send("eth_unsubscribe",[t]))})))}destroy(){return _f(this,void 0,void 0,(function*(){this._websocket.readyState===cf.CONNECTING&&(yield new Promise((t=>{this._websocket.onopen=function(){t(!0)},this._websocket.onerror=function(){t(!1)}}))),this._websocket.close(1e3)}))}}var Bf=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const kf=new Jr(jl);class Ff extends Ef{detectNetwork(){const t=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return Bf(this,void 0,void 0,(function*(){let e=this.network;return null==e&&(e=yield t.detectNetwork.call(this),e||kf.throwError("no network detected",Jr.errors.UNKNOWN_ERROR,{}),null==this._network&&(zn(this,"_network",e),this.emit("network",e,null))),e}))}}class Nf extends Ff{constructor(t,e){kf.checkAbstract(new.target,Nf),t=Kn(new.target,"getNetwork")(t),e=Kn(new.target,"getApiKey")(e),super(Kn(new.target,"getUrl")(t,e),t),"string"==typeof e?zn(this,"apiKey",e):null!=e&&Object.keys(e).forEach((t=>{zn(this,t,e[t])}))}_startPending(){kf.warn("WARNING: API provider does not support pending filters")}isCommunityResource(){return!1}getSigner(t){return kf.throwError("API provider does not support signing",Jr.errors.UNSUPPORTED_OPERATION,{operation:"getSigner"})}listAccounts(){return Promise.resolve([])}static getApiKey(t){return t}static getUrl(t,e){return kf.throwError("not implemented; sub-classes must override getUrl",Jr.errors.NOT_IMPLEMENTED,{operation:"getUrl"})}}const Tf=new Jr(jl),Rf="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";class Pf extends xf{constructor(t,e){const r=new Of(t,e);super(r.connection.url.replace(/^http/i,"ws").replace(".alchemyapi.",".ws.alchemyapi."),r.network),zn(this,"apiKey",r.apiKey)}isCommunityResource(){return this.apiKey===Rf}}class Of extends Nf{static getWebSocketProvider(t,e){return new Pf(t,e)}static getApiKey(t){return null==t?Rf:(t&&"string"!=typeof t&&Tf.throwArgumentError("invalid apiKey","apiKey",t),t)}static getUrl(t,e){let r=null;switch(t.name){case"homestead":r="eth-mainnet.alchemyapi.io/v2/";break;case"ropsten":r="eth-ropsten.alchemyapi.io/v2/";break;case"rinkeby":r="eth-rinkeby.alchemyapi.io/v2/";break;case"goerli":r="eth-goerli.alchemyapi.io/v2/";break;case"kovan":r="eth-kovan.alchemyapi.io/v2/";break;default:Tf.throwArgumentError("unsupported network","network",arguments[0])}return{allowGzip:!0,url:"https://"+r+e,throttleCallback:(t,r)=>(e===Rf&&Wl(),Promise.resolve(!0))}}isCommunityResource(){return this.apiKey===Rf}}var Uf=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Df=new Jr(jl);class qf extends Nf{static getApiKey(t){return null!=t&&Df.throwArgumentError("apiKey not supported for cloudflare","apiKey",t),null}static getUrl(t,e){let r=null;switch(t.name){case"homestead":r="https://cloudflare-eth.com/";break;default:Df.throwArgumentError("unsupported network","network",arguments[0])}return r}perform(t,e){const r=Object.create(null,{perform:{get:()=>super.perform}});return Uf(this,void 0,void 0,(function*(){return"getBlockNumber"===t?(yield r.perform.call(this,"getBlock",{blockTag:"latest"})).number:r.perform.call(this,t,e)}))}}var Lf=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Qf=new Jr(jl);function jf(t){const e=[];for(let r in t){if(null==t[r])continue;let n=hn(t[r]);({gasLimit:!0,gasPrice:!0,nonce:!0,value:!0})[r]&&(n=dn(n)),e.push(r+"="+n)}return e.join("&")}function zf(t){if(0==t.status&&("No records found"===t.message||"No transactions found"===t.message))return t.result;if(1!=t.status||"OK"!=t.message){const e=new Error("invalid response");throw e.result=JSON.stringify(t),(t.result||"").toLowerCase().indexOf("rate limit")>=0&&(e.throttleRetry=!0),e}return t.result}function Kf(t){if(t&&0==t.status&&"NOTOK"==t.message&&(t.result||"").toLowerCase().indexOf("rate limit")>=0){const e=new Error("throttled response");throw e.result=JSON.stringify(t),e.throttleRetry=!0,e}if("2.0"!=t.jsonrpc){const e=new Error("invalid response");throw e.result=JSON.stringify(t),e}if(t.error){const e=new Error(t.error.message||"unknown error");throw t.error.code&&(e.code=t.error.code),t.error.data&&(e.data=t.error.data),e}return t.result}function Hf(t){if("pending"===t)throw new Error("pending not supported");return"latest"===t?t:parseInt(t.substring(2),16)}const Gf="9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB";function Vf(t,e,r){let n=e.message;throw e.code===Jr.errors.SERVER_ERROR&&(e.error&&"string"==typeof e.error.message?n=e.error.message:"string"==typeof e.body?n=e.body:"string"==typeof e.responseText&&(n=e.responseText)),n=(n||"").toLowerCase(),n.match(/insufficient funds/)&&Qf.throwError("insufficient funds for intrinsic transaction cost",Jr.errors.INSUFFICIENT_FUNDS,{error:e,method:t,transaction:r}),n.match(/same hash was already imported|transaction nonce is too low/)&&Qf.throwError("nonce has already been used",Jr.errors.NONCE_EXPIRED,{error:e,method:t,transaction:r}),n.match(/another transaction with same nonce/)&&Qf.throwError("replacement fee too low",Jr.errors.REPLACEMENT_UNDERPRICED,{error:e,method:t,transaction:r}),n.match(/execution failed due to an exception/)&&Qf.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Jr.errors.UNPREDICTABLE_GAS_LIMIT,{error:e,method:t,transaction:r}),e}class Wf extends lf{constructor(t,e){Qf.checkNew(new.target,Wf),super(t);let r="invalid";this.network&&(r=this.network.name);let n=null;switch(r){case"homestead":n="https://api.etherscan.io";break;case"ropsten":n="https://api-ropsten.etherscan.io";break;case"rinkeby":n="https://api-rinkeby.etherscan.io";break;case"kovan":n="https://api-kovan.etherscan.io";break;case"goerli":n="https://api-goerli.etherscan.io";break;default:throw new Error("unsupported network")}zn(this,"baseUrl",n),zn(this,"apiKey",e||Gf)}detectNetwork(){return Lf(this,void 0,void 0,(function*(){return this.network}))}perform(t,e){const r=Object.create(null,{perform:{get:()=>super.perform}});return Lf(this,void 0,void 0,(function*(){let n=this.baseUrl,i="";this.apiKey&&(i+="&apikey="+this.apiKey);const o=(t,e)=>Lf(this,void 0,void 0,(function*(){this.emit("debug",{action:"request",request:t,provider:this});const r={url:t,throttleSlotInterval:1e3,throttleCallback:(t,e)=>(this.isCommunityResource()&&Wl(),Promise.resolve(!0))},n=yield Rl(r,null,e||Kf);return this.emit("debug",{action:"response",request:t,response:Yn(n),provider:this}),n}));switch(t){case"getBlockNumber":return n+="/api?module=proxy&action=eth_blockNumber"+i,o(n);case"getGasPrice":return n+="/api?module=proxy&action=eth_gasPrice"+i,o(n);case"getBalance":return n+="/api?module=account&action=balance&address="+e.address,n+="&tag="+e.blockTag+i,o(n,zf);case"getTransactionCount":return n+="/api?module=proxy&action=eth_getTransactionCount&address="+e.address,n+="&tag="+e.blockTag+i,o(n);case"getCode":return n+="/api?module=proxy&action=eth_getCode&address="+e.address,n+="&tag="+e.blockTag+i,o(n);case"getStorageAt":return n+="/api?module=proxy&action=eth_getStorageAt&address="+e.address,n+="&position="+e.position,n+="&tag="+e.blockTag+i,o(n);case"sendTransaction":return n+="/api?module=proxy&action=eth_sendRawTransaction&hex="+e.signedTransaction,n+=i,o(n).catch((t=>Vf("sendTransaction",t,e.signedTransaction)));case"getBlock":if(e.blockTag)return n+="/api?module=proxy&action=eth_getBlockByNumber&tag="+e.blockTag,e.includeTransactions?n+="&boolean=true":n+="&boolean=false",n+=i,o(n);throw new Error("getBlock by blockHash not implemented");case"getTransaction":return n+="/api?module=proxy&action=eth_getTransactionByHash&txhash="+e.transactionHash,n+=i,o(n);case"getTransactionReceipt":return n+="/api?module=proxy&action=eth_getTransactionReceipt&txhash="+e.transactionHash,n+=i,o(n);case"call":{let t=jf(e.transaction);if(t&&(t="&"+t),n+="/api?module=proxy&action=eth_call"+t,"latest"!==e.blockTag)throw new Error("EtherscanProvider does not support blockTag for call");n+=i;try{return yield o(n)}catch(t){return Vf("call",t,e.transaction)}}case"estimateGas":{let t=jf(e.transaction);t&&(t="&"+t),n+="/api?module=proxy&action=eth_estimateGas&"+t,n+=i;try{return yield o(n)}catch(t){return Vf("estimateGas",t,e.transaction)}}case"getLogs":{if(n+="/api?module=logs&action=getLogs",e.filter.fromBlock&&(n+="&fromBlock="+Hf(e.filter.fromBlock)),e.filter.toBlock&&(n+="&toBlock="+Hf(e.filter.toBlock)),e.filter.address&&(n+="&address="+e.filter.address),e.filter.topics&&e.filter.topics.length>0&&(e.filter.topics.length>1&&Qf.throwError("unsupported topic count",Jr.errors.UNSUPPORTED_OPERATION,{topics:e.filter.topics}),1===e.filter.topics.length)){const t=e.filter.topics[0];"string"==typeof t&&66===t.length||Qf.throwError("unsupported topic format",Jr.errors.UNSUPPORTED_OPERATION,{topic0:t}),n+="&topic0="+t}n+=i;const t=yield o(n,zf);let r={};for(let e=0;e<t.length;e++){const n=t[e];if(null==n.blockHash){if(null==r[n.transactionHash]){const t=yield this.getTransaction(n.transactionHash);t&&(r[n.transactionHash]=t.blockHash)}n.blockHash=r[n.transactionHash]}}return t}case"getEtherPrice":return"homestead"!==this.network.name?0:(n+="/api?module=stats&action=ethprice",n+=i,parseFloat((yield o(n,zf)).ethusd))}return r.perform.call(this,t,e)}))}getHistory(t,e,r){let n=this.baseUrl,i="";return this.apiKey&&(i+="&apikey="+this.apiKey),null==e&&(e=0),null==r&&(r=99999999),this.resolveName(t).then((t=>(n+="/api?module=account&action=txlist&address="+t,n+="&startblock="+e,n+="&endblock="+r,n+="&sort=asc"+i,this.emit("debug",{action:"request",request:n,provider:this}),Rl({url:n,throttleSlotInterval:1e3,throttleCallback:(t,e)=>(this.apiKey===Gf&&Wl(),Promise.resolve(!0))},null,zf).then((t=>{this.emit("debug",{action:"response",request:n,response:Yn(t),provider:this});let e=[];return t.forEach((t=>{["contractAddress","to"].forEach((function(e){""==t[e]&&delete t[e]})),null==t.creates&&null!=t.contractAddress&&(t.creates=t.contractAddress);let r=this.formatter.transactionResponse(t);t.timeStamp&&(r.timestamp=parseInt(t.timeStamp)),e.push(r)})),e})))))}isCommunityResource(){return this.apiKey===Gf}}var Jf=window&&window.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,o){function s(t){try{u(n.next(t))}catch(t){o(t)}}function a(t){try{u(n.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((n=n.apply(t,e||[])).next())}))};const Zf=new Jr(jl);function Yf(){return(new Date).getTime()}function Xf(t){let e=null;for(let r=0;r<t.length;r++){const n=t[r];if(null==n)return null;e?e.name===n.name&&e.chainId===n.chainId&&(e.ensAddress===n.ensAddress||null==e.ensAddress&&null==n.ensAddress)||Zf.throwArgumentError("provider mismatch","networks",t):e=n}return e}function $f(t,e){t=t.slice().sort();const r=Math.floor(t.length/2);if(t.length%2)return t[r];const n=t[r-1],i=t[r];return null!=e&&Math.abs(n-i)>e?null:(n+i)/2}function tc(t){if(null===t)return"null";if("number"==typeof t||"boolean"==typeof t)return JSON.stringify(t);if("string"==typeof t)return t;if(In.isBigNumber(t))return t.toString();if(Array.isArray(t))return JSON.stringify(t.map((t=>tc(t))));if("object"==typeof t){const e=Object.keys(t);return e.sort(),"{"+e.map((e=>{let r=t[e];return r="function"==typeof r?"[function]":tc(r),JSON.stringify(e)+":"+r})).join(",")+"}"}throw new Error("unknown value type: "+typeof t)}let ec=1;function rc(t){let e=null,r=null,n=new Promise((n=>{e=function(){r&&(clearTimeout(r),r=null),n()},r=setTimeout(e,t)}));return{cancel:e,getPromise:function(){return n},wait:t=>(n=n.then(t),n)}}const nc=[Jr.errors.CALL_EXCEPTION,Jr.errors.INSUFFICIENT_FUNDS,Jr.errors.NONCE_EXPIRED,Jr.errors.REPLACEMENT_UNDERPRICED,Jr.errors.UNPREDICTABLE_GAS_LIMIT],ic=["address","args","errorArgs","errorSignature","method","transaction"];function oc(t,e){const r={weight:t.weight};return Object.defineProperty(r,"provider",{get:()=>t.provider}),t.start&&(r.start=t.start),e&&(r.duration=e-t.start),t.done&&(t.error?r.error=t.error:r.result=t.result||null),r}function sc(t,e){return Jf(this,void 0,void 0,(function*(){const r=t.provider;return null!=r.blockNumber&&r.blockNumber>=e||-1===e?r:Pl((()=>new Promise(((n,i)=>{setTimeout((function(){return r.blockNumber>=e?n(r):t.cancelled?n(null):n(void 0)}),0)}))),{oncePoll:r})}))}function ac(t,e,r,n){return Jf(this,void 0,void 0,(function*(){let i=t.provider;switch(r){case"getBlockNumber":case"getGasPrice":return i[r]();case"getEtherPrice":if(i.getEtherPrice)return i.getEtherPrice();break;case"getBalance":case"getTransactionCount":case"getCode":return n.blockTag&&an(n.blockTag)&&(i=yield sc(t,e)),i[r](n.address,n.blockTag||"latest");case"getStorageAt":return n.blockTag&&an(n.blockTag)&&(i=yield sc(t,e)),i.getStorageAt(n.address,n.position,n.blockTag||"latest");case"getBlock":return n.blockTag&&an(n.blockTag)&&(i=yield sc(t,e)),i[n.includeTransactions?"getBlockWithTransactions":"getBlock"](n.blockTag||n.blockHash);case"call":case"estimateGas":return n.blockTag&&an(n.blockTag)&&(i=yield sc(t,e)),i[r](n.transaction);case"getTransaction":case"getTransactionReceipt":return i[r](n.transactionHash);case"getLogs":{let r=n.filter;return(r.fromBlock&&an(r.fromBlock)||r.toBlock&&an(r.toBlock))&&(i=yield sc(t,e)),i.getLogs(r)}}return Zf.throwError("unknown method error",Jr.errors.UNKNOWN_ERROR,{method:r,params:n})}))}class uc extends lf{constructor(t,e){Zf.checkNew(new.target,uc),0===t.length&&Zf.throwArgumentError("missing providers","providers",t);const r=t.map(((t,e)=>{if(vs.isProvider(t)){const e=Gl(t)?2e3:750,r=1;return Object.freeze({provider:t,weight:1,stallTimeout:e,priority:r})}const r=Vn(t);null==r.priority&&(r.priority=1),null==r.stallTimeout&&(r.stallTimeout=Gl(t)?2e3:750),null==r.weight&&(r.weight=1);const n=r.weight;return(n%1||n>512||n<1)&&Zf.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${e}].weight`,n),Object.freeze(r)})),n=r.reduce(((t,e)=>t+e.weight),0);null==e?e=n/2:e>n&&Zf.throwArgumentError("quorum will always fail; larger than total weight","quorum",e);let i=Xf(r.map((t=>t.provider.network)));null==i&&(i=new Promise(((t,e)=>{setTimeout((()=>{this.detectNetwork().then(t,e)}),0)}))),super(i),zn(this,"providerConfigs",Object.freeze(r)),zn(this,"quorum",e),this._highestBlockNumber=-1}detectNetwork(){return Jf(this,void 0,void 0,(function*(){return Xf(yield Promise.all(this.providerConfigs.map((t=>t.provider.getNetwork()))))}))}perform(t,e){return Jf(this,void 0,void 0,(function*(){if("sendTransaction"===t){const t=yield Promise.all(this.providerConfigs.map((t=>t.provider.sendTransaction(e.signedTransaction).then((t=>t.hash),(t=>t)))));for(let e=0;e<t.length;e++){const r=t[e];if("string"==typeof r)return r}throw t[0]}-1===this._highestBlockNumber&&"getBlockNumber"!==t&&(yield this.getBlockNumber());const r=function(t,e,r){let n=tc;switch(e){case"getBlockNumber":return function(e){const r=e.map((t=>t.result));let n=$f(e.map((t=>t.result)),2);if(null!=n)return n=Math.ceil(n),r.indexOf(n+1)>=0&&n++,n>=t._highestBlockNumber&&(t._highestBlockNumber=n),t._highestBlockNumber};case"getGasPrice":return function(t){const e=t.map((t=>t.result));return e.sort(),e[Math.floor(e.length/2)]};case"getEtherPrice":return function(t){return $f(t.map((t=>t.result)))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":n=function(t){return null==t?null:((t=Vn(t)).confirmations=-1,tc(t))};break;case"getBlock":n=r.includeTransactions?function(t){return null==t?null:((t=Vn(t)).transactions=t.transactions.map((t=>((t=Vn(t)).confirmations=-1,t))),tc(t))}:function(t){return null==t?null:tc(t)};break;default:throw new Error("unknown method: "+e)}return function(t,e){return function(r){const n={};r.forEach((e=>{const r=t(e.result);n[r]||(n[r]={count:0,result:e.result}),n[r].count++}));const i=Object.keys(n);for(let t=0;t<i.length;t++){const r=n[i[t]];if(r.count>=e)return r.result}}}(n,t.quorum)}(this,t,e),n=Lh(this.providerConfigs.map(Vn));n.sort(((t,e)=>t.priority-e.priority));const i=this._highestBlockNumber;let o=0,s=!0;for(;;){const a=Yf();let u=n.filter((t=>t.runner&&a-t.start<t.stallTimeout)).reduce(((t,e)=>t+e.weight),0);for(;u<this.quorum&&o<n.length;){const r=n[o++],s=ec++;r.start=Yf(),r.staller=rc(r.stallTimeout),r.staller.wait((()=>{r.staller=null})),r.runner=ac(r,i,t,e).then((n=>{r.done=!0,r.result=n,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:s,backend:oc(r,Yf()),request:{method:t,params:Yn(e)},provider:this})}),(n=>{r.done=!0,r.error=n,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:s,backend:oc(r,Yf()),request:{method:t,params:Yn(e)},provider:this})})),this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:s,backend:oc(r,null),request:{method:t,params:Yn(e)},provider:this}),u+=r.weight}const h=[];n.forEach((t=>{!t.done&&t.runner&&(h.push(t.runner),t.staller&&h.push(t.staller.getPromise()))})),h.length&&(yield Promise.race(h));const l=n.filter((t=>t.done&&null==t.error));if(l.length>=this.quorum){const t=r(l);if(void 0!==t)return n.forEach((t=>{t.staller&&t.staller.cancel(),t.cancelled=!0})),t;s||(yield rc(100).getPromise()),s=!1}const f=n.reduce(((t,e)=>{if(!e.done||null==e.error)return t;const r=e.error.code;return nc.indexOf(r)>=0&&(t[r]||(t[r]={error:e.error,weight:0}),t[r].weight+=e.weight),t}),{});if(Object.keys(f).forEach((t=>{const e=f[t];if(e.weight<this.quorum)return;n.forEach((t=>{t.staller&&t.staller.cancel(),t.cancelled=!0}));const r=e.error,i={};ic.forEach((t=>{null!=r[t]&&(i[t]=r[t])})),Zf.throwError(r.reason||r.message,t,i)})),0===n.filter((t=>!t.done)).length)break}return n.forEach((t=>{t.staller&&t.staller.cancel(),t.cancelled=!0})),Zf.throwError("failed to meet quorum",Jr.errors.SERVER_ERROR,{method:t,params:e,results:n.map((t=>oc(t))),provider:this})}))}}const hc=new Jr(jl),lc="84842078b09946638c03157f83405213";class fc extends xf{constructor(t,e){const r=new cc(t,e),n=r.connection;n.password&&hc.throwError("INFURA WebSocket project secrets unsupported",Jr.errors.UNSUPPORTED_OPERATION,{operation:"InfuraProvider.getWebSocketProvider()"}),super(n.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/"),t),zn(this,"apiKey",r.projectId),zn(this,"projectId",r.projectId),zn(this,"projectSecret",r.projectSecret)}isCommunityResource(){return this.projectId===lc}}class cc extends Nf{static getWebSocketProvider(t,e){return new fc(t,e)}static getApiKey(t){const e={apiKey:lc,projectId:lc,projectSecret:null};return null==t||("string"==typeof t?e.projectId=t:null!=t.projectSecret?(hc.assertArgument("string"==typeof t.projectId,"projectSecret requires a projectId","projectId",t.projectId),hc.assertArgument("string"==typeof t.projectSecret,"invalid projectSecret","projectSecret","[REDACTED]"),e.projectId=t.projectId,e.projectSecret=t.projectSecret):t.projectId&&(e.projectId=t.projectId),e.apiKey=e.projectId),e}static getUrl(t,e){let r=null;switch(t?t.name:"unknown"){case"homestead":r="mainnet.infura.io";break;case"ropsten":r="ropsten.infura.io";break;case"rinkeby":r="rinkeby.infura.io";break;case"kovan":r="kovan.infura.io";break;case"goerli":r="goerli.infura.io";break;default:hc.throwError("unsupported network",Jr.errors.INVALID_ARGUMENT,{argument:"network",value:t})}const n={allowGzip:!0,url:"https://"+r+"/v3/"+e.projectId,throttleCallback:(t,r)=>(e.projectId===lc&&Wl(),Promise.resolve(!0))};return null!=e.projectSecret&&(n.user="",n.password=e.projectSecret),n}isCommunityResource(){return this.projectId===lc}}const dc=new Jr(jl);class pc extends Nf{static getApiKey(t){return t&&"string"!=typeof t&&dc.throwArgumentError("invalid apiKey","apiKey",t),t||"ETHERS_JS_SHARED"}static getUrl(t,e){dc.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");let r=null;switch(t.name){case"homestead":r="https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";break;case"ropsten":r="https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";break;case"rinkeby":r="https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";break;case"goerli":r="https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";break;case"kovan":r="https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";break;default:dc.throwArgumentError("unsupported network","network",arguments[0])}return r+"?apiKey="+e}}const mc=new Jr(jl),gc="5f7f8547b90218002e9ce9dd";class yc extends Nf{static getApiKey(t){const e={applicationId:gc,applicationSecretKey:null};return null==t||("string"==typeof t?e.applicationId=t:null!=t.applicationSecretKey?(mc.assertArgument("string"==typeof t.applicationId,"applicationSecretKey requires an applicationId","applicationId",t.applicationId),mc.assertArgument("string"==typeof t.applicationSecretKey,"invalid applicationSecretKey","applicationSecretKey","[REDACTED]"),e.applicationId=t.applicationId,e.applicationSecretKey=t.applicationSecretKey):t.applicationId&&(e.applicationId=t.applicationId)),e}static getUrl(t,e){let r=null;switch(t?t.name:"unknown"){case"homestead":r="eth-mainnet.gateway.pokt.network";break;default:mc.throwError("unsupported network",Jr.errors.INVALID_ARGUMENT,{argument:"network",value:t})}const n={url:`https://${r}/v1/${e.applicationId}`,headers:{}};return null!=e.applicationSecretKey&&(n.user="",n.password=e.applicationSecretKey),n}isCommunityResource(){return this.applicationId===gc}}const vc=new Jr(jl);let wc=1;function bc(t,e){return function(r,n){"eth_sign"==r&&t.isMetaMask&&(r="personal_sign",n=[n[1],n[0]]);const i={method:r,params:n,id:wc++,jsonrpc:"2.0"};return new Promise(((t,r)=>{e(i,(function(e,n){if(e)return r(e);if(n.error){const t=new Error(n.error.message);return t.code=n.error.code,t.data=n.error.data,r(t)}t(n.result)}))}))}}class Ac extends Ef{constructor(t,e){vc.checkNew(new.target,Ac),null==t&&vc.throwArgumentError("missing provider","provider",t);let r=null,n=null,i=null;"function"==typeof t?(r="unknown:",n=t):(r=t.host||t.path||"",!r&&t.isMetaMask&&(r="metamask"),i=t,t.request?(""===r&&(r="eip-1193:"),n=function(t){return function(e,r){return null==r&&(r=[]),"eth_sign"==e&&t.isMetaMask&&(e="personal_sign",r=[r[1],r[0]]),t.request({method:e,params:r})}}(t)):t.sendAsync?n=bc(t,t.sendAsync.bind(t)):t.send?n=bc(t,t.send.bind(t)):vc.throwArgumentError("unsupported provider","provider",t),r||(r="unknown:")),super(r,e),zn(this,"jsonRpcFetchFunc",n),zn(this,"provider",i)}send(t,e){return this.jsonRpcFetchFunc(t,e)}}const Mc=new Jr(jl);function Ic(t,e){if(null==t&&(t="homestead"),"string"==typeof t){const e=t.match(/^(ws|http)s?:/i);if(e)switch(e[1]){case"http":return new Ef(t);case"ws":return new xf(t);default:Mc.throwArgumentError("unsupported URL scheme","network",t)}}const r=El(t);return r&&r._defaultProvider||Mc.throwError("unsupported getDefaultProvider network",Jr.errors.NETWORK_ERROR,{operation:"getDefaultProvider",network:t}),r._defaultProvider({FallbackProvider:uc,AlchemyProvider:Of,CloudflareProvider:qf,EtherscanProvider:Wf,InfuraProvider:cc,JsonRpcProvider:Ef,NodesmithProvider:pc,PocketProvider:yc,Web3Provider:Ac,IpcProvider:null},e)}var Ec=Object.freeze({Provider:vs,BaseProvider:lf,Resolver:af,UrlJsonRpcProvider:Nf,FallbackProvider:uc,AlchemyProvider:Of,AlchemyWebSocketProvider:Pf,CloudflareProvider:qf,EtherscanProvider:Wf,InfuraProvider:cc,InfuraWebSocketProvider:fc,JsonRpcProvider:Ef,NodesmithProvider:pc,PocketProvider:yc,StaticJsonRpcProvider:Ff,Web3Provider:Ac,WebSocketProvider:xf,IpcProvider:null,JsonRpcSigner:Af,getDefaultProvider:Ic,getNetwork:El,isCommunityResource:Gl,isCommunityResourcable:Hl,showThrottleMessage:Wl,Formatter:Kl});const _c=new RegExp("^bytes([0-9]+)$"),Sc=new RegExp("^(u?int)([0-9]*)$"),Cc=new RegExp("^(.*)\\[([0-9]*)\\]$");function xc(t,e,r){switch(t){case"address":return r?sn(e,32):rn(e);case"string":return vo(e);case"bytes":return rn(e);case"bool":return e=e?"0x01":"0x00",r?sn(e,32):rn(e)}let n=t.match(Sc);if(n){let i=parseInt(n[2]||"256");if(n[2]&&String(i)!==n[2]||i%8!=0||0===i||i>256)throw new Error("invalid number type - "+t);return r&&(i=256),sn(e=In.from(e).toTwos(i),i/8)}if(n=t.match(_c),n){const i=parseInt(n[1]);if(String(i)!==n[1]||0===i||i>32)throw new Error("invalid bytes type - "+t);if(rn(e).byteLength!==i)throw new Error("invalid value for "+t);return r?rn((e+"0000000000000000000000000000000000000000000000000000000000000000").substring(0,66)):e}if(n=t.match(Cc),n&&Array.isArray(e)){const r=n[1];if(parseInt(n[2]||String(e.length))!=e.length)throw new Error("invalid value for "+t);const i=[];return e.forEach((function(t){i.push(xc(r,t,!0))})),nn(i)}throw new Error("invalid type - "+t)}function Bc(t,e){if(t.length!=e.length)throw new Error("type/value count mismatch");const r=[];return t.forEach((function(t,n){r.push(xc(t,e[n]))})),hn(nn(r))}const kc=new Jr("units/5.0.6"),Fc=["wei","kwei","mwei","gwei","szabo","finney","ether"];function Nc(t,e){if("string"==typeof e){const t=Fc.indexOf(e);-1!==t&&(e=3*t)}return Pn(t,null!=e?e:18)}function Tc(t,e){if("string"!=typeof t&&kc.throwArgumentError("value must be a string","value",t),"string"==typeof e){const t=Fc.indexOf(e);-1!==t&&(e=3*t)}return On(t,null!=e?e:18)}var Rc=Object.freeze({AbiCoder:qo,defaultAbiCoder:Lo,Fragment:li,EventFragment:fi,FunctionFragment:gi,ParamType:ui,FormatTypes:si,checkResultErrors:Mi,Logger:Jr,RLP:Oi,_fetchData:Tl,fetchJson:Rl,poll:Pl,checkProperties:Gn,deepCopy:Yn,defineReadOnly:zn,getStatic:Kn,resolveProperties:Hn,shallowCopy:Vn,arrayify:rn,concat:nn,stripZeros:on,zeroPad:sn,isBytes:en,isBytesLike:tn,defaultPath:Ph,HDNode:Oh,SigningKey:uh,Interface:ms,LogDescription:fs,TransactionDescription:cs,base58:Ls,base64:Sl,hexlify:hn,isHexString:an,hexConcat:cn,hexStripZeros:pn,hexValue:dn,hexZeroPad:mn,hexDataLength:ln,hexDataSlice:fn,nameprep:To,_toEscapedUtf8String:function(t,e){return'"'+yo(t,e).map((t=>{if(t<256){switch(t){case 8:return"\\b";case 9:return"\\t";case 10:return"\\n";case 13:return"\\r";case 34:return'\\"';case 92:return"\\\\"}if(t>=32&&t<127)return String.fromCharCode(t)}return t<=65535?wo(t):wo(55296+((t-=65536)>>10&1023))+wo(56320+(1023&t))})).join("")+'"'},toUtf8Bytes:vo,toUtf8CodePoints:Mo,toUtf8String:Ao,Utf8ErrorFuncs:go,formatBytes32String:function(t){const e=vo(t);if(e.length>31)throw new Error("bytes32 string must be less than 32 bytes");return hn(nn([e,ro]).slice(0,32))},parseBytes32String:function(t){const e=rn(t);if(32!==e.length)throw new Error("invalid bytes32 - not 32 bytes long");if(0!==e[31])throw new Error("invalid bytes32 string - no null terminator");let r=31;for(;0===e[r-1];)r--;return Ao(e.slice(0,r))},hashMessage:Vo,namehash:Go,isValidName:function(t){try{const e=t.split(".");for(let t=0;t<e.length;t++)if(0===To(e[t]).length)throw new Error("empty");return!0}catch(t){}return!1},id:Qo,_TypedDataEncoder:hs,getAddress:ji,getIcapAddress:function(t){let e=new Lr(ji(t).substring(2),16).toString(36).toUpperCase();for(;e.length<30;)e="0"+e;return"XE"+Qi("XE00"+e)+e},getContractAddress:zi,getCreate2Address:function(t,e,r){return 32!==ln(e)&&Ui.throwArgumentError("salt must be 32 bytes","salt",e),32!==ln(r)&&Ui.throwArgumentError("initCodeHash must be 32 bytes","initCodeHash",r),ji(fn(Ci(nn(["0xff",ji(t),e,r])),12))},isAddress:function(t){try{return ji(t),!0}catch(t){}return!1},formatEther:function(t){return Nc(t,18)},parseEther:function(t){return Tc(t,18)},formatUnits:Nc,parseUnits:Tc,commify:function(t){const e=String(t).split(".");(e.length>2||!e[0].match(/^-?[0-9]*$/)||e[1]&&!e[1].match(/^[0-9]*$/)||"."===t||"-."===t)&&kc.throwArgumentError("invalid value","value",t);let r=e[0],n="";for("-"===r.substring(0,1)&&(n="-",r=r.substring(1));"0"===r.substring(0,1);)r=r.substring(1);""===r&&(r="0");let i="";for(2===e.length&&(i="."+(e[1]||"0"));i.length>2&&"0"===i[i.length-1];)i=i.substring(0,i.length-1);const o=[];for(;r.length;){if(r.length<=3){o.unshift(r);break}{const t=r.length-3;o.unshift(r.substring(t)),r=r.substring(0,t)}}return n+o.join(",")+i},computeHmac:yu,keccak256:Ci,ripemd160:pu,sha256:mu,sha512:gu,randomBytes:Kh,shuffled:Lh,solidityPack:Bc,solidityKeccak256:function(t,e){return Ci(Bc(t,e))},soliditySha256:function(t,e){return mu(Bc(t,e))},splitSignature:gn,joinSignature:yn,parseTransaction:vh,serializeTransaction:yh,getJsonWalletAddress:function(t){if(el(t))try{return ji(JSON.parse(t).ethaddr)}catch(t){return null}if(rl(t))try{return ji(JSON.parse(t).address)}catch(t){return null}return null},computeAddress:mh,recoverAddress:gh,computePublicKey:lh,recoverPublicKey:hh,verifyMessage:function(t,e){return gh(Vo(t),e)},mnemonicToEntropy:Dh,entropyToMnemonic:qh,isValidMnemonic:function(t,e){try{return Dh(t,e),!0}catch(t){}return!1},mnemonicToSeed:Uh,SupportedAlgorithm:du,get UnicodeNormalizationForm(){return co},get Utf8ErrorReason(){return po},Indexed:ds});const Pc="ethers/5.0.18",Oc=new Jr(Pc);var Uc=Object.freeze({Signer:Is,Wallet:gl,VoidSigner:Es,getDefaultProvider:Ic,providers:Ec,Contract:Ds,ContractFactory:class{constructor(t,e,r){let n=null;n="string"==typeof e?e:en(e)?hn(e):e&&"string"==typeof e.object?e.object:"!","0x"!==n.substring(0,2)&&(n="0x"+n),(!an(n)||n.length%2)&&Ss.throwArgumentError("invalid bytecode","bytecode",e),r&&!Is.isSigner(r)&&Ss.throwArgumentError("invalid signer","signer",r),zn(this,"bytecode",n),zn(this,"interface",Kn(new.target,"getInterface")(t)),zn(this,"signer",r||null)}getDeployTransaction(...t){let e={};if(t.length===this.interface.deploy.inputs.length+1&&"object"==typeof t[t.length-1]){e=Vn(t.pop());for(const t in e)if(!Cs[t])throw new Error("unknown transaction override "+t)}return["data","from","to"].forEach((t=>{null!=e[t]&&Ss.throwError("cannot override "+t,Jr.errors.UNSUPPORTED_OPERATION,{operation:t})})),Ss.checkArgumentCount(t.length,this.interface.deploy.inputs.length," in Contract constructor"),e.data=hn(nn([this.bytecode,this.interface.encodeDeploy(t)])),e}deploy(...t){return _s(this,void 0,void 0,(function*(){let e={};t.length===this.interface.deploy.inputs.length+1&&(e=t.pop()),Ss.checkArgumentCount(t.length,this.interface.deploy.inputs.length," in Contract constructor");const r=yield Bs(this.signer,t,this.interface.deploy.inputs);r.push(e);const n=this.getDeployTransaction(...r),i=yield this.signer.sendTransaction(n),o=Kn(this.constructor,"getContractAddress")(i),s=Kn(this.constructor,"getContract")(o,this.interface,this.signer);return zn(s,"deployTransaction",i),s}))}attach(t){return this.constructor.getContract(t,this.interface,this.signer)}connect(t){return new this.constructor(this.interface,this.bytecode,t)}static fromSolidity(t,e){null==t&&Ss.throwError("missing compiler output",Jr.errors.MISSING_ARGUMENT,{argument:"compilerOutput"}),"string"==typeof t&&(t=JSON.parse(t));const r=t.abi;let n=null;return t.bytecode?n=t.bytecode:t.evm&&t.evm.bytecode&&(n=t.evm.bytecode),new this(r,n,e)}static getInterface(t){return Ds.getInterface(t)}static getContractAddress(t){return zi(t)}static getContract(t,e,r){return new Ds(t,e,r)}},BigNumber:In,FixedNumber:Dn,constants:ho,get errors(){return Wr},logger:Oc,utils:Rc,wordlists:Eh,version:Pc,Wordlist:bh});try{const t=window;null==t._ethers&&(t._ethers=Uc)}catch(t){}const Dc=(0,b.poseidon)([6,8,57]),qc=b.poseidon.F;function Lc(t){return Array.prototype.map.call(new Uint8Array(t),(t=>("00"+t.toString(16)).slice(-2))).join("")}function Qc(t){const e=[],r=Math.floor(t.length/31);for(let n=0;n<r;n++){const r=vr.leBuff2int(t.slice(31*n,31*(n+1)));e.push(r)}if(t.length%31!=0){const n=vr.leBuff2int(t.slice(31*r));e.push(n)}return function(t){let e=yr.e(0);for(let r=0;r<t.length;r+=5){const n=[];for(let e=0;e<5;e++)r+e<t.length?n.push(t[r+e]):n.push(yr.e(0));const i=Dc(n);e=qc.add(e,i)}return qc.normalize(e)}(e)}const jc=t=>Buffer.from(t.match(/.{1,2}/g).map((t=>parseInt(t,16))));function zc(t,e){return Rc.formatUnits(t,e)}function Kc(t,e){return Rc.parseUnits(t,e)}function Hc(t){const e=1023&t,r=t>>11,n=t>>10&1,i=yr.pow(10,r);let o=yr.mul(e,i);return n&&r&&(o=yr.add(o,yr.div(i,2))),o}function Gc(t){const e=yr.e(t);if(yr.isZero(e))return 0;let r=e,n=0;for(;!yr.isZero(yr.shr(r,10));)r=yr.div(r,10),n++;return yr.toNumber(r)+(n<<11)}function Vc(t){const e=yr.e(t);function r(t,e){const r=yr.sub(t,e);return yr.abs(r)}const n=Gc(e),i=Hc(n),o=1024|n,s=Hc(o);let a=1+(1023&n),u=n>>11;1024===a&&(a=102,u++);const h=a+(u<<11),l=Hc(h);let f=n,c=r(i,e);const d=r(s,e);yr.gt(c,d)&&(f=o,c=d);const p=r(l,e);return yr.gt(c,p)&&(f=h),f}function Wc(t){const e=yr.e(t),r=Gc(e),n=1024|r,i=Hc(n);return yr.leq(i,e)?n:r}var Jc=r(9968);const Zc="transactionPool",Yc="HERMEZ_ACCOUNT. Don't share this signature with anyone as this would reveal your Hermez private key. Unless you are in a trusted application, DO NOT SIGN THIS",Xc=0,$c=5e6,td=1,ed={Hermez:scAddressFile.hermez||"0xc4905364b78a742ccce7B890A89514061E47068D",ERC1820:"0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"};var rd=r(9669),nd=r.n(rd);async function id(t){return t.then((t=>t.data))}const od="http://167.71.59.190/4010";async function sd(t,e){const r={...t?{hermezEthereumAddress:t}:{},tokenIds:e?{tokenIds:e.join(",")}:""};return id(nd().get(od+"/accounts",{params:r}))}async function ad(t){return id(nd().get(`${od}/accounts/${t}`))}async function ud(t){const e={...t?{accountIndex:t}:{}};return id(nd().get(od+"/transactions-history",{params:e}))}async function hd(t){return id(nd().get(`${od}/transactions-history/${t}`))}async function ld(t){return id(nd().get(`${od}/transactions-pool/${t}`))}async function fd(t){return nd().post(od+"/transactions-pool",t)}async function cd(){return id(nd().get(od+"/exits"))}async function dd(t,e){return id(nd().get(`${od}/exits/${t}/${e}`))}async function pd(t){const e={...t?{ids:t.join(",")}:{}};return id(nd().get(od+"/tokens",{params:e}))}async function md(t){return id(nd().get(`${od}/tokens/${t}`))}async function gd(){return id(nd().get(od+"/recommended-fee"))}const yd="undefined"==typeof localStorage||null===localStorage?new Jc.LocalStorage("./auxdata"):localStorage;function vd(){if(!yd.getItem(Zc)){const t={};yd.setItem(Zc,JSON.stringify(t))}}function wd(t,e){const r=JSON.parse(yd.getItem(Zc))[e];if(void 0===r)return Promise.resolve([]);const n=r.filter((e=>e.fromAccountIndex===t)).map((({id:t})=>ld(t).then((t=>t)).catch((r=>{404===r.response.status&&Ad(e,t)}))));return Promise.all(n).then((t=>t.filter((t=>void 0!==t))))}function bd(t,e){const r=JSON.parse(yd.getItem(Zc)),n=r[e],i=void 0===n?[t]:[...n,t],o={...r,[e]:i};yd.setItem(Zc,JSON.stringify(o))}function Ad(t,e){const r=JSON.parse(yd.getItem(Zc)),n=r[t].filter((t=>t.id!==e)),i={...r,[t]:n};yd.setItem(Zc,JSON.stringify(i))}function Md(t){return"hez:"+t}function Id(t){return t.includes("hez:")?t.replace("hez:",""):t}function Ed(t){const e=t.lastIndexOf(":")+1;return Number(t.substring(e))}function _d(t){return t?new h.default.getDefaultProvider(t):new h.default.providers.Web3Provider(ethereum)}function Sd(){return _d()}function Cd(t,e){const r=new ArrayBuffer(8),n=new DataView(r);n.setBigUint64(0,at()(t).value,!1);const i=new ArrayBuffer(8),o=new DataView(i);return o.setBigUint64(0,at()(e).value,!1),"0x02"+Lc(n.buffer.slice(2,8))+Lc(o.buffer.slice(3,8))}function xd(t,e,r){const n=t/(Number(e)/Math.pow(10,r));let i,o=0,s=Mr.length-1;for(;s-o>1;)i=Math.floor((o+s)/2),Mr[i]<n?o=i:s=i;return s}function Bd(t){return t.to&&t.to.includes("hez:")?"Transfer":"Exit"}async function kd(t,e,r,n){const i=(await wd(e,r)).filter((t=>t.token.id===n)).map((t=>t.nonce)).sort();let o=t+1;for(;-1!==i.indexOf(o);)o++;return o}function Fd(t){const e=function(t){const e=yr.fromString("3322668559");let r=yr.e(0);return r=yr.add(r,e),r=yr.add(r,yr.shl(t.chainId||0,32)),r=yr.add(r,yr.shl(t.fromAccountIndex||0,48)),r=yr.add(r,yr.shl(t.toAccountIndex||0,96)),r=yr.add(r,yr.shl(Vc(t.amount||0),144)),r=yr.add(r,yr.shl(t.tokenId||0,160)),r=yr.add(r,yr.shl(t.nonce||0,192)),r=yr.add(r,yr.shl(t.fee||0,232)),r=yr.add(r,yr.shl(t.toBjjSign?1:0,240)),r}(t);return(0,b.poseidon)([e,yr.fromString(t.toEthAddr||"0",16),yr.fromString(t.toBjjAy||"0",16),yr.e(t.rqTxCompressedDataV2||0),yr.fromString(t.rqToEthAddr||"0",16),yr.fromString(t.rqToBjjAy||"0",16)])}async function Nd(t,e,r){const n={type:Bd(t),tokenId:r.id,fromAccountIndex:t.from,toAccountIndex:t.to||null,toHezEthereumAddress:null,toBjj:null,amount:t.amount.toString(),fee:xd(t.fee,t.amount,r.decimals),nonce:await kd(t.nonce,t.from,e,r.id),requestFromAccountIndex:null,requestToAccountIndex:null,requestToHezEthereumAddress:null,requestToBJJ:null,requestTokenId:null,requestAmount:null,requestFee:null,requestNonce:null},i=await async function(t){const e=Object.assign({},t),r=Sd();return e.chainId=await r.getNetwork().chainId,e.fromAccountIndex=Ed(t.fromAccountIndex),t.toAccountIndex?e.toAccountIndex=Ed(t.toAccountIndex):"Exit"===t.type&&(e.toAccountIndex=1),e}(n);return n.id=Cd(i.fromAccountIndex,i.nonce),n.id="0x00000000000001e240004700",{transaction:n,encodedTransaction:i}}class Td{constructor(t,e){const r=new Ar(t).public();this.privateKey=t,this.publicKey=[r.p[0].toString(),r.p[1].toString()],this.publicKeyHex=[r.p[0].toString(16),r.p[1].toString(16)],this.publicKeyCompressed=r.compress().toString(),this.publicKeyCompressedHex=r.compress().toString(16),this.hermezEthereumAddress=e}signMessage(t){const e=Qc(Buffer.from(t));return new Ar(this.privateKey).signPoseidon(e).toString("hex")}signTransaction(t,e){const r=Fd(e),n=b.eddsa.signPoseidon(this.privateKey,r),i=b.eddsa.packSignature(n);return t.signature=i.toString("hex"),t}}function Rd(t,e,r){const n=Buffer.from(t,"hex"),i=br.newFromCompressed(n),o=Qc(Buffer.from(e)),s=Buffer.from(r,"hex"),a=wr.newFromCompressed(s);return i.verifyPoseidon(o,a)}async function Pd(t){const e=Sd().getSigner(t),r=Md(await e.getAddress(t)),n=await e.signMessage(Yc),i=(0,A.keccak256)(n),o=jc(i);return{hermezWallet:new Td(o,r),hermezEthereumAddress:r}}const Od=[{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Ud=new Map;function Dd(t,e){if(Ud.has(t))return Ud.get(t);const r=Sd().getSigner(),n=new h.default.Contract(t,e,r);return Ud.set(t,n),n}async function qd(t,e,r){const n=Dd(r,Od),i=await n.allowance(e,ed.Hermez);if(i.lt(t))return n.approve(ed.Hermez,t);if(!i.isZero(t)){const t=await n.approve(ed.Hermez,"0");await t.wait(1)}return n.approve(ed.Hermez,t)}const Ld=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"uint32",name:"tokenID",type:"uint32"}],name:"AddToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint64",name:"batchNum",type:"uint64"}],name:"ForgeBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint64",name:"queueIndex",type:"uint64"},{indexed:!0,internalType:"uint8",name:"position",type:"uint8"},{indexed:!1,internalType:"bytes",name:"l1UserTx",type:"bytes"}],name:"L1UserTxEvent",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newFeeAddToken",type:"uint256"}],name:"UpdateFeeAddToken",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"newForgeL1L2BatchTimeout",type:"uint8"}],name:"UpdateForgeL1L2BatchTimeout",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint48",name:"idx",type:"uint48"},{indexed:!0,internalType:"uint48",name:"numExitRoot",type:"uint48"},{indexed:!0,internalType:"bool",name:"instantWithdraw",type:"bool"}],name:"WithdrawEvent",type:"event"},{inputs:[],name:"ABSOLUTE_MAX_L1L2BATCHTIMEOUT",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"babyPubKey",type:"uint256"},{internalType:"uint48",name:"fromIdx",type:"uint48"},{internalType:"uint16",name:"loadAmountF",type:"uint16"},{internalType:"uint16",name:"amountF",type:"uint16"},{internalType:"uint32",name:"tokenID",type:"uint32"},{internalType:"uint48",name:"toIdx",type:"uint48"}],name:"addL1Transaction",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"buckets",outputs:[{internalType:"uint256",name:"ceilUSD",type:"uint256"},{internalType:"uint256",name:"blockStamp",type:"uint256"},{internalType:"uint256",name:"withdrawals",type:"uint256"},{internalType:"uint256",name:"blockWithdrawalRate",type:"uint256"},{internalType:"uint256",name:"maxWithdrawals",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint64",name:"",type:"uint64"},{internalType:"uint48",name:"",type:"uint48"}],name:"exitNullifierMap",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint64",name:"",type:"uint64"}],name:"exitRootsMap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeAddToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint48",name:"newLastIdx",type:"uint48"},{internalType:"uint256",name:"newStRoot",type:"uint256"},{internalType:"uint256",name:"newExitRoot",type:"uint256"},{internalType:"bytes",name:"encodedL1CoordinatorTx",type:"bytes"},{internalType:"bytes",name:"l2TxsData",type:"bytes"},{internalType:"bytes",name:"feeIdxCoordinator",type:"bytes"},{internalType:"uint8",name:"verifierIdx",type:"uint8"},{internalType:"bool",name:"l1Batch",type:"bool"},{internalType:"uint256[2]",name:"proofA",type:"uint256[2]"},{internalType:"uint256[2][2]",name:"proofB",type:"uint256[2][2]"},{internalType:"uint256[2]",name:"proofC",type:"uint256[2]"}],name:"forgeBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"forgeL1L2BatchTimeout",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"hermezAuctionContract",outputs:[{internalType:"contract AuctionInterface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"hermezGovernanceDAOAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_verifiers",type:"address[]"},{internalType:"uint256[]",name:"_verifiersParams",type:"uint256[]"},{internalType:"address",name:"_withdrawVerifier",type:"address"},{internalType:"address",name:"_hermezAuctionContract",type:"address"},{internalType:"address",name:"_tokenHEZ",type:"address"},{internalType:"uint8",name:"_forgeL1L2BatchTimeout",type:"uint8"},{internalType:"uint256",name:"_feeAddToken",type:"uint256"},{internalType:"address",name:"_poseidon2Elements",type:"address"},{internalType:"address",name:"_poseidon3Elements",type:"address"},{internalType:"address",name:"_poseidon4Elements",type:"address"},{internalType:"address",name:"_hermezGovernanceDAOAddress",type:"address"},{internalType:"address",name:"_safetyAddress",type:"address"},{internalType:"uint64",name:"_withdrawalDelay",type:"uint64"},{internalType:"address",name:"_withdrawDelayerContract",type:"address"}],name:"initializeHermez",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint192",name:"amount",type:"uint192"}],name:"instantWithdrawalViewer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"lastForgedBatch",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"lastIdx",outputs:[{internalType:"uint48",name:"",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[],name:"lastL1L2Batch",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint64",name:"",type:"uint64"}],name:"mapL1TxQueue",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextL1FillingQueue",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextL1ToForgeQueue",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"registerTokensCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rollupVerifiers",outputs:[{internalType:"contract VerifierRollupInterface",name:"verifierInterface",type:"address"},{internalType:"uint256",name:"maxTx",type:"uint256"},{internalType:"uint256",name:"nLevels",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"safeMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"safetyAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint64",name:"",type:"uint64"}],name:"stateRootMap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenExchange",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenHEZ",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokenList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokenMap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bytes",name:"operatorData",type:"bytes"}],name:"tokensReceived",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[4][5]",name:"arrayBuckets",type:"uint256[4][5]"}],name:"updateBucketsParameters",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newFeeAddToken",type:"uint256"}],name:"updateFeeAddToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint8",name:"newForgeL1L2BatchTimeout",type:"uint8"}],name:"updateForgeL1L2BatchTimeout",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"addressArray",type:"address[]"},{internalType:"uint64[]",name:"valueArray",type:"uint64[]"}],name:"updateTokenExchange",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint64",name:"newWithdrawalDelay",type:"uint64"}],name:"updateWithdrawalDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[2]",name:"proofA",type:"uint256[2]"},{internalType:"uint256[2][2]",name:"proofB",type:"uint256[2][2]"},{internalType:"uint256[2]",name:"proofC",type:"uint256[2]"},{internalType:"uint32",name:"tokenID",type:"uint32"},{internalType:"uint192",name:"amount",type:"uint192"},{internalType:"uint48",name:"numExitRoot",type:"uint48"},{internalType:"uint48",name:"idx",type:"uint48"},{internalType:"bool",name:"instantWithdraw",type:"bool"}],name:"withdrawCircuit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawDelayerContract",outputs:[{internalType:"contract WithdrawalDelayerInterface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint32",name:"tokenID",type:"uint32"},{internalType:"uint192",name:"amount",type:"uint192"},{internalType:"uint256",name:"babyPubKey",type:"uint256"},{internalType:"uint48",name:"numExitRoot",type:"uint48"},{internalType:"uint256[]",name:"siblings",type:"uint256[]"},{internalType:"uint48",name:"idx",type:"uint48"},{internalType:"bool",name:"instantWithdraw",type:"bool"}],name:"withdrawMerkleProof",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawVerifier",outputs:[{internalType:"contract VerifierWithdrawInterface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"withdrawalDelay",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"}],Qd=(new h.default.utils.Interface(["function addL1Transaction(uint256,uint48,uint16,uint16,uint32,uint48)"]),{Deposit:"Deposit",Transfer:"Transfer",Withdraw:"Withdrawn",Exit:"Exit"}),jd={Forged:"fged",Forging:"fing",Pending:"pend",Invalid:"invl"};async function zd(t){const e=Sd(),r=await e.getGasPrice();return(yr.e(r)*yr.e(t)).toString()}const Kd=async(t,e,r,n,i=$c,o=td)=>{const s=Dd(ed.Hermez,Ld),a=Id(e);let u=(await sd(a,[r.id])).accounts[0];u=void 0;const h={gasLimit:i,gasPrice:await zd(o)},l=["0x"+n,0,Vc(t),0,r.id,0];return 0===r.id?(h.value=t,s.addL1Transaction(...l,h).then((()=>l))):(await qd(t,a,r.ethereumAddress),s.addL1Transaction(...l,h).then((()=>l)))},Hd=async(t,e,r,n=$c,i=td)=>{const o=Dd(ed.Hermez,Ld),s=Id((await ad(e)).hezEthereumAddress),a={gasLimit:n,gasPrice:await zd(i)},u=[0,Ed(e),0,Vc(t),r.id,1];return 0===r.id?(a.value=t,o.addL1Transaction(...u,a).then((()=>u))):(await qd(t,s,r.ethereumAddress),o.addL1Transaction(...u,a).then((()=>u)))},Gd=async(t,e,r,n,i,o,s=$c,a=td)=>{const u=Dd(ed.Hermez,Ld),h=Id((await ad(e)).hezEthereumAddress),l={gasLimit:s,gasPrice:await zd(a)},f=[r.id,t,"0x"+n,i,o,Ed(e),!0];return 0===r.id?(l.value=t,u.withdrawMerkleProof(...f,l).then((()=>f))):(await qd(t,h,r.ethereumAddress),u.withdrawMerkleProof(...f,l).then((()=>f)))};async function Vd(t,e){const r=await fd(t);return 200===r.status&&bd(t,e),{status:r.status,id:r.data,nonce:t.nonce}}function Wd(t){return Object.keys(jd).find((e=>jd[e]===t))}},2357:t=>{"use strict";t.exports=require("assert")},4293:t=>{"use strict";t.exports=require("buffer")},7619:t=>{"use strict";t.exports=require("constants")},6417:t=>{"use strict";t.exports=require("crypto")},8614:t=>{"use strict";t.exports=require("events")},5747:t=>{"use strict";t.exports=require("fs")},8605:t=>{"use strict";t.exports=require("http")},7211:t=>{"use strict";t.exports=require("https")},2087:t=>{"use strict";t.exports=require("os")},5622:t=>{"use strict";t.exports=require("path")},2413:t=>{"use strict";t.exports=require("stream")},3867:t=>{"use strict";t.exports=require("tty")},8835:t=>{"use strict";t.exports=require("url")},1669:t=>{"use strict";t.exports=require("util")},8761:t=>{"use strict";t.exports=require("zlib")}},e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={id:n,loaded:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}return r.amdO={},r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),r(9331)})()}));